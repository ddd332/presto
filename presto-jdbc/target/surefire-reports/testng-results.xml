<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="6" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="17511" started-at="2014-05-07T07:04:10Z" finished-at="2014-05-07T07:04:28Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="17511" started-at="2014-05-07T07:04:10Z" finished-at="2014-05-07T07:04:28Z">
      <class name="com.facebook.presto.jdbc.TestJdbcResultSet">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.jdbc.TestJdbcResultSet@1319e2db]" name="setup" is-config="true" duration-ms="790" started-at="2014-05-07T07:04:25Z" finished-at="2014-05-07T07:04:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testDuplicateColumnLabels()[pri:0, instance:com.facebook.presto.jdbc.TestJdbcResultSet@1319e2db]" name="testDuplicateColumnLabels" duration-ms="391" started-at="2014-05-07T07:04:26Z" finished-at="2014-05-07T07:04:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDuplicateColumnLabels -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.jdbc.TestJdbcResultSet@1319e2db]" name="teardown" is-config="true" duration-ms="135" started-at="2014-05-07T07:04:26Z" finished-at="2014-05-07T07:04:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.jdbc.TestJdbcResultSet@1319e2db]" name="setup" is-config="true" duration-ms="725" started-at="2014-05-07T07:04:27Z" finished-at="2014-05-07T07:04:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testObjectTypes()[pri:0, instance:com.facebook.presto.jdbc.TestJdbcResultSet@1319e2db]" name="testObjectTypes" duration-ms="383" started-at="2014-05-07T07:04:27Z" finished-at="2014-05-07T07:04:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testObjectTypes -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.jdbc.TestJdbcResultSet@1319e2db]" name="teardown" is-config="true" duration-ms="137" started-at="2014-05-07T07:04:28Z" finished-at="2014-05-07T07:04:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.facebook.presto.jdbc.TestJdbcResultSet -->
      <class name="com.facebook.presto.jdbc.TestDriver">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.jdbc.TestDriver@214c759a]" name="setup" is-config="true" duration-ms="5335" started-at="2014-05-07T07:04:10Z" finished-at="2014-05-07T07:04:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testBadQuery()[pri:0, instance:com.facebook.presto.jdbc.TestDriver@214c759a]" name="testBadQuery" duration-ms="596" started-at="2014-05-07T07:04:16Z" finished-at="2014-05-07T07:04:16Z">
          <exception class="java.sql.SQLException">
            <message>
              <![CDATA[Query failed (#20140507_070416_00000_dqa5j): Schema default does not exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.sql.SQLException: Query failed (#20140507_070416_00000_dqa5j): Schema default does not exist
	at com.facebook.presto.jdbc.PrestoResultSet.resultsException(PrestoResultSet.java:1568)
	at com.facebook.presto.jdbc.PrestoResultSet.getColumns(PrestoResultSet.java:1519)
	at com.facebook.presto.jdbc.PrestoResultSet.<init>(PrestoResultSet.java:78)
	at com.facebook.presto.jdbc.PrestoStatement.executeQuery(PrestoStatement.java:48)
	at com.facebook.presto.jdbc.TestDriver.testBadQuery(TestDriver.java:114)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
Caused by: com.facebook.presto.sql.analyzer.SemanticException: Schema default does not exist
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitTable(TupleAnalyzer.java:146)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitTable(TupleAnalyzer.java:96)
	at com.facebook.presto.sql.tree.Table.accept(Table.java:36)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.analyzeFrom(TupleAnalyzer.java:704)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitQuerySpecification(TupleAnalyzer.java:257)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitQuerySpecification(TupleAnalyzer.java:96)
	at com.facebook.presto.sql.tree.QuerySpecification.accept(QuerySpecification.java:99)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.analyzer.StatementAnalyzer.visitQuery(StatementAnalyzer.java:439)
	at com.facebook.presto.sql.analyzer.StatementAnalyzer.visitQuery(StatementAnalyzer.java:86)
	at com.facebook.presto.sql.tree.Query.accept(Query.java:71)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.analyzer.Analyzer.analyze(Analyzer.java:50)
	at com.facebook.presto.execution.SqlQueryExecution.doAnalyzeQuery(SqlQueryExecution.java:198)
	at com.facebook.presto.execution.SqlQueryExecution.analyzeQuery(SqlQueryExecution.java:183)
	at com.facebook.presto.execution.SqlQueryExecution.start(SqlQueryExecution.java:142)
	at com.facebook.presto.execution.SqlQueryManager$QueryStarter.run(SqlQueryManager.java:388)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
]]>
            </full-stacktrace>
          </exception> <!-- java.sql.SQLException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBadQuery -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.jdbc.TestDriver@214c759a]" name="teardown" is-config="true" duration-ms="164" started-at="2014-05-07T07:04:16Z" finished-at="2014-05-07T07:04:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.jdbc.TestDriver@214c759a]" name="setup" is-config="true" duration-ms="1153" started-at="2014-05-07T07:04:16Z" finished-at="2014-05-07T07:04:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testConnectionResourceHandling()[pri:0, instance:com.facebook.presto.jdbc.TestDriver@214c759a]" name="testConnectionResourceHandling" duration-ms="4977" started-at="2014-05-07T07:04:18Z" finished-at="2014-05-07T07:04:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConnectionResourceHandling -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.jdbc.TestDriver@214c759a]" name="teardown" is-config="true" duration-ms="179" started-at="2014-05-07T07:04:23Z" finished-at="2014-05-07T07:04:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.jdbc.TestDriver@214c759a]" name="setup" is-config="true" duration-ms="918" started-at="2014-05-07T07:04:23Z" finished-at="2014-05-07T07:04:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testDriverManager()[pri:0, instance:com.facebook.presto.jdbc.TestDriver@214c759a]" name="testDriverManager" duration-ms="529" started-at="2014-05-07T07:04:24Z" finished-at="2014-05-07T07:04:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDriverManager -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.jdbc.TestDriver@214c759a]" name="teardown" is-config="true" duration-ms="142" started-at="2014-05-07T07:04:24Z" finished-at="2014-05-07T07:04:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.jdbc.TestDriver@214c759a]" name="setup" is-config="true" duration-ms="781" started-at="2014-05-07T07:04:24Z" finished-at="2014-05-07T07:04:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testUserIsRequired()[pri:0, instance:com.facebook.presto.jdbc.TestDriver@214c759a]" name="testUserIsRequired" duration-ms="0" started-at="2014-05-07T07:04:25Z" finished-at="2014-05-07T07:04:25Z">
          <exception class="java.sql.SQLException">
            <message>
              <![CDATA[Username property (user) must be set]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.sql.SQLException: Username property (user) must be set
	at com.facebook.presto.jdbc.PrestoDriver.connect(PrestoDriver.java:84)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:243)
	at com.facebook.presto.jdbc.TestDriver.testUserIsRequired(TestDriver.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.sql.SQLException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserIsRequired -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.jdbc.TestDriver@214c759a]" name="teardown" is-config="true" duration-ms="159" started-at="2014-05-07T07:04:25Z" finished-at="2014-05-07T07:04:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.facebook.presto.jdbc.TestDriver -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
