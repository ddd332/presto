<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="1234" passed="1234">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="238719" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T07:00:32Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="238719" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T07:00:32Z">
      <class name="com.facebook.presto.block.rle.TestRunLengthEncodedBlockCursorWithNull">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.block.rle.TestRunLengthEncodedBlockCursorWithNull@351c2555]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAdvanceNextPosition()[pri:0, instance:com.facebook.presto.block.rle.TestRunLengthEncodedBlockCursorWithNull@351c2555]" name="testAdvanceNextPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceNextPosition -->
        <test-method status="PASS" signature="testAdvanceToPosition()[pri:0, instance:com.facebook.presto.block.rle.TestRunLengthEncodedBlockCursorWithNull@351c2555]" name="testAdvanceToPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceToPosition -->
        <test-method status="PASS" signature="testStates()[pri:0, instance:com.facebook.presto.block.rle.TestRunLengthEncodedBlockCursorWithNull@351c2555]" name="testStates" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStates -->
        <test-method status="PASS" signature="testFirstPosition()[pri:0, instance:com.facebook.presto.block.rle.TestRunLengthEncodedBlockCursorWithNull@351c2555]" name="testFirstPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstPosition -->
      </class> <!-- com.facebook.presto.block.rle.TestRunLengthEncodedBlockCursorWithNull -->
      <class name="com.facebook.presto.sql.analyzer.TestAnalyzer">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="14" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testAggregateWithWildcard()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testAggregateWithWildcard" duration-ms="3" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAggregateWithWildcard -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="12" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testAggregationsNotAllowed()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testAggregationsNotAllowed" duration-ms="2" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAggregationsNotAllowed -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="13" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testAmbiguousReferenceInOrderBy()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testAmbiguousReferenceInOrderBy" duration-ms="1" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAmbiguousReferenceInOrderBy -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="13" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testDistinctAggregations()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testDistinctAggregations" duration-ms="0" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDistinctAggregations -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="12" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testDistinctInWindowFunctionParameter()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testDistinctInWindowFunctionParameter" duration-ms="1" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDistinctInWindowFunctionParameter -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="13" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testDuplicateRelation()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testDuplicateRelation" duration-ms="1" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDuplicateRelation -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="13" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testDuplicateWithQuery()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testDuplicateWithQuery" duration-ms="0" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDuplicateWithQuery -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="12" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testExpressions()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testExpressions" duration-ms="12" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExpressions -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="12" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGroupBy()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testGroupBy" duration-ms="1" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupBy -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="12" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGroupByCase()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testGroupByCase" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByCase -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="12" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGroupByComplexExpressions()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testGroupByComplexExpressions" duration-ms="3" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByComplexExpressions -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="13" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGroupByInvalidOrdinal()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testGroupByInvalidOrdinal" duration-ms="1" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByInvalidOrdinal -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="12" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGroupByOrdinalsWithWildcard()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testGroupByOrdinalsWithWildcard" duration-ms="1" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByOrdinalsWithWildcard -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="13" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGroupByWithQualifiedName()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testGroupByWithQualifiedName" duration-ms="0" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByWithQualifiedName -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="12" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGroupByWithQualifiedName2()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testGroupByWithQualifiedName2" duration-ms="0" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByWithQualifiedName2 -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="13" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGroupByWithQualifiedName3()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testGroupByWithQualifiedName3" duration-ms="1" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByWithQualifiedName3 -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="12" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGroupByWithWildcard()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testGroupByWithWildcard" duration-ms="2" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByWithWildcard -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="12" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testHaving()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testHaving" duration-ms="1" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHaving -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="11" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testHavingReferencesOutputAlias()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testHavingReferencesOutputAlias" duration-ms="1" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHavingReferencesOutputAlias -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="11" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testInvalidAttribute()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testInvalidAttribute" duration-ms="1" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidAttribute -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="11" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testInvalidTable()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testInvalidTable" duration-ms="1" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidTable -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="11" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testJoinOnAmbiguousName()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testJoinOnAmbiguousName" duration-ms="1" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinOnAmbiguousName -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="10" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testJoinOnConstantExpression()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testJoinOnConstantExpression" duration-ms="1" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinOnConstantExpression -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="10" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testMismatchedColumnAliasCount()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testMismatchedColumnAliasCount" duration-ms="1" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMismatchedColumnAliasCount -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="10" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testMismatchedUnionQueries()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testMismatchedUnionQueries" duration-ms="2" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMismatchedUnionQueries -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="10" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNaturalJoinNotSupported()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testNaturalJoinNotSupported" duration-ms="1" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNaturalJoinNotSupported -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="10" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNestedAggregation()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testNestedAggregation" duration-ms="0" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNestedAggregation -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="9" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNestedWindowFunctions()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testNestedWindowFunctions" duration-ms="4" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNestedWindowFunctions -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="10" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNonAggregate()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testNonAggregate" duration-ms="9" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonAggregate -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="11" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNonBooleanHaving()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testNonBooleanHaving" duration-ms="0" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonBooleanHaving -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="11" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNonBooleanWhereClause()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testNonBooleanWhereClause" duration-ms="0" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonBooleanWhereClause -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="11" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNonEquiJoin()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testNonEquiJoin" duration-ms="2" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonEquiJoin -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="11" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNonNumericTableSamplePercentage()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testNonNumericTableSamplePercentage" duration-ms="0" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonNumericTableSamplePercentage -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="8" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testOrderByExpressionOnOutputColumn()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testOrderByExpressionOnOutputColumn" duration-ms="1" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderByExpressionOnOutputColumn -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="9" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testOrderByExpressionOnOutputColumn2()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testOrderByExpressionOnOutputColumn2" duration-ms="0" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderByExpressionOnOutputColumn2 -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="8" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testOrderByInvalidOrdinal()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testOrderByInvalidOrdinal" duration-ms="1" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderByInvalidOrdinal -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="8" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testOrderByMustAppearInSelectWithDistinct()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testOrderByMustAppearInSelectWithDistinct" duration-ms="0" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderByMustAppearInSelectWithDistinct -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="8" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testOrderByWithWildcard()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testOrderByWithWildcard" duration-ms="0" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderByWithWildcard -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="8" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testReferenceWithoutFrom()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testReferenceWithoutFrom" duration-ms="1" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReferenceWithoutFrom -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="7" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testTableSampleOutOfRange()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testTableSampleOutOfRange" duration-ms="1" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTableSampleOutOfRange -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="8" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testUnionUnmatchedOrderByAttribute()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testUnionUnmatchedOrderByAttribute" duration-ms="0" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnionUnmatchedOrderByAttribute -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="7" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="8" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testWildcardWithInvalidPrefix()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testWildcardWithInvalidPrefix" duration-ms="0" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWildcardWithInvalidPrefix -->
        <test-method status="PASS" signature="testWildcardWithoutFrom()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testWildcardWithoutFrom" duration-ms="0" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWildcardWithoutFrom -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="7" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testWindowFrameNotSupported()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testWindowFrameNotSupported" duration-ms="1" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWindowFrameNotSupported -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="7" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testWindowsNotAllowed()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testWindowsNotAllowed" duration-ms="1" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWindowsNotAllowed -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="setup" is-config="true" duration-ms="7" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testWithForwardReference()[pri:0, instance:com.facebook.presto.sql.analyzer.TestAnalyzer@6e47c1bf]" name="testWithForwardReference" duration-ms="1" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithForwardReference -->
      </class> <!-- com.facebook.presto.sql.analyzer.TestAnalyzer -->
      <class name="com.facebook.presto.sql.planner.TestEqualityInference">
        <test-method status="PASS" signature="testConstantEqualities()[pri:0, instance:com.facebook.presto.sql.planner.TestEqualityInference@223dd6aa]" name="testConstantEqualities" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstantEqualities -->
        <test-method status="PASS" signature="testEqualityPartitionGeneration()[pri:0, instance:com.facebook.presto.sql.planner.TestEqualityInference@223dd6aa]" name="testEqualityPartitionGeneration" duration-ms="3" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEqualityPartitionGeneration -->
        <test-method status="PASS" signature="testExtractInferrableEqualities()[pri:0, instance:com.facebook.presto.sql.planner.TestEqualityInference@223dd6aa]" name="testExtractInferrableEqualities" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtractInferrableEqualities -->
        <test-method status="PASS" signature="testInvalidEqualityExpression2()[pri:0, instance:com.facebook.presto.sql.planner.TestEqualityInference@223dd6aa]" name="testInvalidEqualityExpression2" duration-ms="1" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Expression must be a simple equality: ("a1" > "b1")]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Expression must be a simple equality: ("a1" > "b1")
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:93)
	at com.facebook.presto.sql.planner.EqualityInference$Builder.addEquality(EqualityInference.java:341)
	at com.facebook.presto.sql.planner.TestEqualityInference.testInvalidEqualityExpression2(TestEqualityInference.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidEqualityExpression2 -->
        <test-method status="PASS" signature="testInvalidEqualityExpression1()[pri:0, instance:com.facebook.presto.sql.planner.TestEqualityInference@223dd6aa]" name="testInvalidEqualityExpression1" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Expression must be a simple equality: ("a1" = "a1")]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Expression must be a simple equality: ("a1" = "a1")
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:93)
	at com.facebook.presto.sql.planner.EqualityInference$Builder.addEquality(EqualityInference.java:341)
	at com.facebook.presto.sql.planner.TestEqualityInference.testInvalidEqualityExpression1(TestEqualityInference.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidEqualityExpression1 -->
        <test-method status="PASS" signature="testInvalidEqualityExpression3()[pri:0, instance:com.facebook.presto.sql.planner.TestEqualityInference@223dd6aa]" name="testInvalidEqualityExpression3" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[need to provide equality between different expressions]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: need to provide equality between different expressions
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:93)
	at com.facebook.presto.sql.planner.EqualityInference$Builder.addEquality(EqualityInference.java:350)
	at com.facebook.presto.sql.planner.TestEqualityInference.addEquality(TestEqualityInference.java:331)
	at com.facebook.presto.sql.planner.TestEqualityInference.testInvalidEqualityExpression3(TestEqualityInference.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidEqualityExpression3 -->
        <test-method status="PASS" signature="testMultipleEqualitySetsPredicateGeneration()[pri:0, instance:com.facebook.presto.sql.planner.TestEqualityInference@223dd6aa]" name="testMultipleEqualitySetsPredicateGeneration" duration-ms="1" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleEqualitySetsPredicateGeneration -->
        <test-method status="PASS" signature="testParseEqualityExpression()[pri:0, instance:com.facebook.presto.sql.planner.TestEqualityInference@223dd6aa]" name="testParseEqualityExpression" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseEqualityExpression -->
        <test-method status="PASS" signature="testSubExpressionRewrites()[pri:0, instance:com.facebook.presto.sql.planner.TestEqualityInference@223dd6aa]" name="testSubExpressionRewrites" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubExpressionRewrites -->
        <test-method status="PASS" signature="testTransitivity()[pri:0, instance:com.facebook.presto.sql.planner.TestEqualityInference@223dd6aa]" name="testTransitivity" duration-ms="1" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransitivity -->
        <test-method status="PASS" signature="testUnrewritable()[pri:0, instance:com.facebook.presto.sql.planner.TestEqualityInference@223dd6aa]" name="testUnrewritable" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnrewritable -->
        <test-method status="PASS" signature="testTriviallyRewritable()[pri:0, instance:com.facebook.presto.sql.planner.TestEqualityInference@223dd6aa]" name="testTriviallyRewritable" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTriviallyRewritable -->
      </class> <!-- com.facebook.presto.sql.planner.TestEqualityInference -->
      <class name="com.facebook.presto.operator.aggregation.TestDoubleSumAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleSumAggregation@431d908]" name="testAllPositionsNull" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleSumAggregation@431d908]" name="testMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleSumAggregation@431d908]" name="testMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleSumAggregation@431d908]" name="testNegativeOnlyValues" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleSumAggregation@431d908]" name="testNoPositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleSumAggregation@431d908]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleSumAggregation@431d908]" name="testPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleSumAggregation@431d908]" name="testPositiveOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleSumAggregation@431d908]" name="testSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleSumAggregation@431d908]" name="testVectorAllPositionsNull" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleSumAggregation@431d908]" name="testVectorMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleSumAggregation@431d908]" name="testVectorMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleSumAggregation@431d908]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleSumAggregation@431d908]" name="testVectorPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleSumAggregation@431d908]" name="testVectorSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestDoubleSumAggregation -->
      <class name="com.facebook.presto.operator.TestRecordProjectOperator">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestRecordProjectOperator@6f7d262b]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFinish()[pri:0, instance:com.facebook.presto.operator.TestRecordProjectOperator@6f7d262b]" name="testFinish" duration-ms="75" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFinish -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestRecordProjectOperator@6f7d262b]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestRecordProjectOperator@6f7d262b]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testMultiColumn()[pri:0, instance:com.facebook.presto.operator.TestRecordProjectOperator@6f7d262b]" name="testMultiColumn" duration-ms="1" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiColumn -->
        <test-method status="PASS" signature="testSingleColumn()[pri:0, instance:com.facebook.presto.operator.TestRecordProjectOperator@6f7d262b]" name="testSingleColumn" duration-ms="1" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleColumn -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestRecordProjectOperator@6f7d262b]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestRecordProjectOperator@6f7d262b]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestRecordProjectOperator@6f7d262b]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.facebook.presto.operator.TestRecordProjectOperator -->
      <class name="com.facebook.presto.benchmark.TestBenchmarks">
        <test-method status="PASS" signature="smokeTest()[pri:0, instance:com.facebook.presto.benchmark.TestBenchmarks@1cbd4053]" name="smokeTest" duration-ms="18027" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:59:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smokeTest -->
      </class> <!-- com.facebook.presto.benchmark.TestBenchmarks -->
      <class name="com.facebook.presto.serde.TestRunLengthEncodedBlockSerde">
        <test-method status="PASS" signature="testCreateBlockWriter()[pri:0, instance:com.facebook.presto.serde.TestRunLengthEncodedBlockSerde@7ef66a35]" name="testCreateBlockWriter" duration-ms="1" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateBlockWriter -->
        <test-method status="PASS" signature="testRoundTrip()[pri:0, instance:com.facebook.presto.serde.TestRunLengthEncodedBlockSerde@7ef66a35]" name="testRoundTrip" duration-ms="0" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoundTrip -->
      </class> <!-- com.facebook.presto.serde.TestRunLengthEncodedBlockSerde -->
      <class name="com.facebook.presto.operator.aggregation.TestVarBinaryMaxAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMaxAggregation@fc19e22]" name="testAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMaxAggregation@fc19e22]" name="testMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMaxAggregation@fc19e22]" name="testMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMaxAggregation@fc19e22]" name="testNegativeOnlyValues" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMaxAggregation@fc19e22]" name="testNoPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMaxAggregation@fc19e22]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMaxAggregation@fc19e22]" name="testPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMaxAggregation@fc19e22]" name="testPositiveOnlyValues" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMaxAggregation@fc19e22]" name="testVectorAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMaxAggregation@fc19e22]" name="testSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMaxAggregation@fc19e22]" name="testVectorMixedNullAndNonNullPositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMaxAggregation@fc19e22]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMaxAggregation@fc19e22]" name="testVectorMultiplePositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMaxAggregation@fc19e22]" name="testVectorPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMaxAggregation@fc19e22]" name="testVectorSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestVarBinaryMaxAggregation -->
      <class name="com.facebook.presto.operator.aggregation.TestDoubleStdDevAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevAggregation@4c48b2f8]" name="testAllPositionsNull" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevAggregation@4c48b2f8]" name="testMixedNullAndNonNullPositions" duration-ms="8" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevAggregation@4c48b2f8]" name="testMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevAggregation@4c48b2f8]" name="testNoPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevAggregation@4c48b2f8]" name="testNegativeOnlyValues" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevAggregation@4c48b2f8]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevAggregation@4c48b2f8]" name="testPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevAggregation@4c48b2f8]" name="testPositiveOnlyValues" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevAggregation@4c48b2f8]" name="testSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevAggregation@4c48b2f8]" name="testVectorAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevAggregation@4c48b2f8]" name="testVectorMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevAggregation@4c48b2f8]" name="testVectorMultiplePositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevAggregation@4c48b2f8]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevAggregation@4c48b2f8]" name="testVectorPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevAggregation@4c48b2f8]" name="testVectorSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestDoubleStdDevAggregation -->
      <class name="com.facebook.presto.operator.TestExchangeOperator">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestExchangeOperator@679b0701]" name="setUp" is-config="true" duration-ms="2" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFinish()[pri:0, instance:com.facebook.presto.operator.TestExchangeOperator@679b0701]" name="testFinish" duration-ms="44" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFinish -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestExchangeOperator@679b0701]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestExchangeOperator@679b0701]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSimple()[pri:0, instance:com.facebook.presto.operator.TestExchangeOperator@679b0701]" name="testSimple" duration-ms="26" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimple -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestExchangeOperator@679b0701]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestExchangeOperator@679b0701]" name="setUp" is-config="true" duration-ms="2" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testWaitForClose()[pri:0, instance:com.facebook.presto.operator.TestExchangeOperator@679b0701]" name="testWaitForClose" duration-ms="53" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWaitForClose -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestExchangeOperator@679b0701]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestExchangeOperator@679b0701]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testWaitForNoMoreSplits()[pri:0, instance:com.facebook.presto.operator.TestExchangeOperator@679b0701]" name="testWaitForNoMoreSplits" duration-ms="49" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWaitForNoMoreSplits -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestExchangeOperator@679b0701]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.facebook.presto.operator.TestExchangeOperator -->
      <class name="com.facebook.presto.block.uncompressed.TestUncompressedBlockCursor">
        <test-method status="PASS" signature="testAdvanceNextPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBlockCursor@7067f21]" name="testAdvanceNextPosition" duration-ms="2" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceNextPosition -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBlockCursor@7067f21]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAdvanceToPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBlockCursor@7067f21]" name="testAdvanceToPosition" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceToPosition -->
        <test-method status="PASS" signature="testStates()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBlockCursor@7067f21]" name="testStates" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStates -->
        <test-method status="PASS" signature="testCursorType()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBlockCursor@7067f21]" name="testCursorType" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCursorType -->
        <test-method status="PASS" signature="testFirstPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBlockCursor@7067f21]" name="testFirstPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstPosition -->
      </class> <!-- com.facebook.presto.block.uncompressed.TestUncompressedBlockCursor -->
      <class name="com.facebook.presto.operator.aggregation.TestCountColumnAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountColumnAggregation@24a617aa]" name="testAllPositionsNull" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountColumnAggregation@24a617aa]" name="testMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountColumnAggregation@24a617aa]" name="testMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountColumnAggregation@24a617aa]" name="testNegativeOnlyValues" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountColumnAggregation@24a617aa]" name="testNoPositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountColumnAggregation@24a617aa]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="3" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountColumnAggregation@24a617aa]" name="testPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountColumnAggregation@24a617aa]" name="testPositiveOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountColumnAggregation@24a617aa]" name="testSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountColumnAggregation@24a617aa]" name="testVectorAllPositionsNull" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountColumnAggregation@24a617aa]" name="testVectorMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountColumnAggregation@24a617aa]" name="testVectorMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountColumnAggregation@24a617aa]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountColumnAggregation@24a617aa]" name="testVectorPartialWithMultiplePositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountColumnAggregation@24a617aa]" name="testVectorSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestCountColumnAggregation -->
      <class name="com.facebook.presto.operator.TestDriverStats">
        <test-method status="PASS" signature="testJson()[pri:0, instance:com.facebook.presto.operator.TestDriverStats@2de7c7a3]" name="testJson" duration-ms="321" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJson -->
      </class> <!-- com.facebook.presto.operator.TestDriverStats -->
      <class name="com.facebook.presto.split.TestInternalSplit">
        <test-method status="PASS" signature="testSerialization()[pri:0, instance:com.facebook.presto.split.TestInternalSplit@2e317c72]" name="testSerialization" duration-ms="27" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerialization -->
      </class> <!-- com.facebook.presto.split.TestInternalSplit -->
      <class name="com.facebook.presto.operator.TestHttpPageBufferClient">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestHttpPageBufferClient@38c1cd75]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testCloseDuringPendingRequest()[pri:0, instance:com.facebook.presto.operator.TestHttpPageBufferClient@38c1cd75]" name="testCloseDuringPendingRequest" duration-ms="3" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCloseDuringPendingRequest -->
        <test-method status="PASS" signature="testExceptionFromResponseHandler()[pri:0, instance:com.facebook.presto.operator.TestHttpPageBufferClient@38c1cd75]" name="testExceptionFromResponseHandler" duration-ms="2" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExceptionFromResponseHandler -->
        <test-method status="PASS" signature="testHappyPath()[pri:0, instance:com.facebook.presto.operator.TestHttpPageBufferClient@38c1cd75]" name="testHappyPath" duration-ms="18" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHappyPath -->
        <test-method status="PASS" signature="testInvalidResponses()[pri:0, instance:com.facebook.presto.operator.TestHttpPageBufferClient@38c1cd75]" name="testInvalidResponses" duration-ms="5" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidResponses -->
        <test-method status="PASS" signature="testLifecycle()[pri:0, instance:com.facebook.presto.operator.TestHttpPageBufferClient@38c1cd75]" name="testLifecycle" duration-ms="1" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLifecycle -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestHttpPageBufferClient@38c1cd75]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.facebook.presto.operator.TestHttpPageBufferClient -->
      <class name="com.facebook.presto.operator.aggregation.TestDoubleAverageAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleAverageAggregation@502b1988]" name="testAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleAverageAggregation@502b1988]" name="testMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleAverageAggregation@502b1988]" name="testMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleAverageAggregation@502b1988]" name="testNegativeOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleAverageAggregation@502b1988]" name="testNoPositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleAverageAggregation@502b1988]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleAverageAggregation@502b1988]" name="testPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleAverageAggregation@502b1988]" name="testPositiveOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleAverageAggregation@502b1988]" name="testSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleAverageAggregation@502b1988]" name="testVectorAllPositionsNull" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleAverageAggregation@502b1988]" name="testVectorMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleAverageAggregation@502b1988]" name="testVectorMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleAverageAggregation@502b1988]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleAverageAggregation@502b1988]" name="testVectorPartialWithMultiplePositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleAverageAggregation@502b1988]" name="testVectorSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestDoubleAverageAggregation -->
      <class name="com.facebook.presto.metadata.TestDatabaseLocalStorageManagerConfig">
        <test-method status="PASS" signature="testDefaults()[pri:0, instance:com.facebook.presto.metadata.TestDatabaseLocalStorageManagerConfig@1008e065]" name="testDefaults" duration-ms="114" started-at="2014-05-07T06:59:08Z" finished-at="2014-05-07T06:59:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaults -->
        <test-method status="PASS" signature="testExplicitPropertyMappings()[pri:0, instance:com.facebook.presto.metadata.TestDatabaseLocalStorageManagerConfig@1008e065]" name="testExplicitPropertyMappings" duration-ms="93" started-at="2014-05-07T06:59:08Z" finished-at="2014-05-07T06:59:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExplicitPropertyMappings -->
        <test-method status="PASS" signature="testValidations()[pri:0, instance:com.facebook.presto.metadata.TestDatabaseLocalStorageManagerConfig@1008e065]" name="testValidations" duration-ms="4" started-at="2014-05-07T06:59:08Z" finished-at="2014-05-07T06:59:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidations -->
      </class> <!-- com.facebook.presto.metadata.TestDatabaseLocalStorageManagerConfig -->
      <class name="com.facebook.presto.block.uncompressed.TestUncompressedBooleanBlockCursorWithNulls">
        <test-method status="PASS" signature="testAdvanceNextPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBooleanBlockCursorWithNulls@3bd78ffd]" name="testAdvanceNextPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceNextPosition -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBooleanBlockCursorWithNulls@3bd78ffd]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAdvanceToPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBooleanBlockCursorWithNulls@3bd78ffd]" name="testAdvanceToPosition" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceToPosition -->
        <test-method status="PASS" signature="testNullValues()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBooleanBlockCursorWithNulls@3bd78ffd]" name="testNullValues" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNullValues -->
        <test-method status="PASS" signature="testStates()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBooleanBlockCursorWithNulls@3bd78ffd]" name="testStates" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStates -->
        <test-method status="PASS" signature="testFirstPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBooleanBlockCursorWithNulls@3bd78ffd]" name="testFirstPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstPosition -->
        <test-method status="PASS" signature="testCursorType()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBooleanBlockCursorWithNulls@3bd78ffd]" name="testCursorType" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCursorType -->
      </class> <!-- com.facebook.presto.block.uncompressed.TestUncompressedBooleanBlockCursorWithNulls -->
      <class name="com.facebook.presto.operator.TestHashJoinOperator">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInnerJoin()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="testInnerJoin" duration-ms="4" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInnerJoin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testInnerJoinWithNullBuild()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="testInnerJoinWithNullBuild" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInnerJoinWithNullBuild -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testInnerJoinWithNullOnBothSides()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="testInnerJoinWithNullOnBothSides" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInnerJoinWithNullOnBothSides -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInnerJoinWithNullProbe()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="testInnerJoinWithNullProbe" duration-ms="2" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInnerJoinWithNullProbe -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMemoryLimit()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="testMemoryLimit" duration-ms="9" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Task exceeded max memory size of 100B]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Task exceeded max memory size of 100B
	at com.google.common.base.Preconditions.checkState(Preconditions.java:177)
	at com.facebook.presto.operator.OperatorContext.setMemoryReservation(OperatorContext.java:203)
	at com.facebook.presto.operator.PagesIndex.addPage(PagesIndex.java:77)
	at com.facebook.presto.operator.HashBuilderOperator.addInput(HashBuilderOperator.java:205)
	at com.facebook.presto.operator.Driver.process(Driver.java:220)
	at com.facebook.presto.operator.TestHashJoinOperator.testMemoryLimit(TestHashJoinOperator.java:464)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMemoryLimit -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testOuterJoinWithNullBuild()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="testOuterJoinWithNullBuild" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOuterJoinWithNullBuild -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testOuterJoinWithNullOnBothSides()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="testOuterJoinWithNullOnBothSides" duration-ms="2" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOuterJoinWithNullOnBothSides -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testOuterJoinWithNullProbe()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="testOuterJoinWithNullProbe" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOuterJoinWithNullProbe -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testProbeOuterJoin()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="testProbeOuterJoin" duration-ms="2" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProbeOuterJoin -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestHashJoinOperator@51a282af]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.facebook.presto.operator.TestHashJoinOperator -->
      <class name="com.facebook.presto.operator.aggregation.TestBooleanMinAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMinAggregation@36c40f1c]" name="testAllPositionsNull" duration-ms="2" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMinAggregation@36c40f1c]" name="testMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMinAggregation@36c40f1c]" name="testMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMinAggregation@36c40f1c]" name="testNegativeOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMinAggregation@36c40f1c]" name="testNoPositions" duration-ms="1" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMinAggregation@36c40f1c]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="3" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMinAggregation@36c40f1c]" name="testPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMinAggregation@36c40f1c]" name="testPositiveOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMinAggregation@36c40f1c]" name="testSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMinAggregation@36c40f1c]" name="testVectorAllPositionsNull" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMinAggregation@36c40f1c]" name="testVectorMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMinAggregation@36c40f1c]" name="testVectorMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMinAggregation@36c40f1c]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMinAggregation@36c40f1c]" name="testVectorPartialWithMultiplePositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMinAggregation@36c40f1c]" name="testVectorSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestBooleanMinAggregation -->
      <class name="com.facebook.presto.metadata.TestJsonTableHandle">
        <test-method status="PASS" signature="startUp()[pri:0, instance:com.facebook.presto.metadata.TestJsonTableHandle@6a351ddc]" name="startUp" is-config="true" duration-ms="79" started-at="2014-05-07T07:00:12Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method status="PASS" signature="testDualDeserialize()[pri:0, instance:com.facebook.presto.metadata.TestJsonTableHandle@6a351ddc]" name="testDualDeserialize" duration-ms="4" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDualDeserialize -->
        <test-method status="PASS" signature="startUp()[pri:0, instance:com.facebook.presto.metadata.TestJsonTableHandle@6a351ddc]" name="startUp" is-config="true" duration-ms="19" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method status="PASS" signature="testDualSerialize()[pri:0, instance:com.facebook.presto.metadata.TestJsonTableHandle@6a351ddc]" name="testDualSerialize" duration-ms="4" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDualSerialize -->
        <test-method status="PASS" signature="startUp()[pri:0, instance:com.facebook.presto.metadata.TestJsonTableHandle@6a351ddc]" name="startUp" is-config="true" duration-ms="17" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method status="PASS" signature="testInformationSchemaDeserialize()[pri:0, instance:com.facebook.presto.metadata.TestJsonTableHandle@6a351ddc]" name="testInformationSchemaDeserialize" duration-ms="2" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInformationSchemaDeserialize -->
        <test-method status="PASS" signature="startUp()[pri:0, instance:com.facebook.presto.metadata.TestJsonTableHandle@6a351ddc]" name="startUp" is-config="true" duration-ms="17" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method status="PASS" signature="testInformationSchemaSerialize()[pri:0, instance:com.facebook.presto.metadata.TestJsonTableHandle@6a351ddc]" name="testInformationSchemaSerialize" duration-ms="2" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInformationSchemaSerialize -->
        <test-method status="PASS" signature="startUp()[pri:0, instance:com.facebook.presto.metadata.TestJsonTableHandle@6a351ddc]" name="startUp" is-config="true" duration-ms="17" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method status="PASS" signature="testNativeDeserialize()[pri:0, instance:com.facebook.presto.metadata.TestJsonTableHandle@6a351ddc]" name="testNativeDeserialize" duration-ms="3" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNativeDeserialize -->
        <test-method status="PASS" signature="startUp()[pri:0, instance:com.facebook.presto.metadata.TestJsonTableHandle@6a351ddc]" name="startUp" is-config="true" duration-ms="16" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method status="PASS" signature="testNativeSerialize()[pri:0, instance:com.facebook.presto.metadata.TestJsonTableHandle@6a351ddc]" name="testNativeSerialize" duration-ms="3" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNativeSerialize -->
        <test-method status="PASS" signature="startUp()[pri:0, instance:com.facebook.presto.metadata.TestJsonTableHandle@6a351ddc]" name="startUp" is-config="true" duration-ms="17" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method status="PASS" signature="testSystemDeserialize()[pri:0, instance:com.facebook.presto.metadata.TestJsonTableHandle@6a351ddc]" name="testSystemDeserialize" duration-ms="2" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSystemDeserialize -->
        <test-method status="PASS" signature="startUp()[pri:0, instance:com.facebook.presto.metadata.TestJsonTableHandle@6a351ddc]" name="startUp" is-config="true" duration-ms="17" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method status="PASS" signature="testSystemSerialize()[pri:0, instance:com.facebook.presto.metadata.TestJsonTableHandle@6a351ddc]" name="testSystemSerialize" duration-ms="2" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSystemSerialize -->
        <test-method status="PASS" signature="startUp()[pri:0, instance:com.facebook.presto.metadata.TestJsonTableHandle@6a351ddc]" name="startUp" is-config="true" duration-ms="16" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method status="PASS" signature="testTpchDeserialize()[pri:0, instance:com.facebook.presto.metadata.TestJsonTableHandle@6a351ddc]" name="testTpchDeserialize" duration-ms="2" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTpchDeserialize -->
        <test-method status="PASS" signature="startUp()[pri:0, instance:com.facebook.presto.metadata.TestJsonTableHandle@6a351ddc]" name="startUp" is-config="true" duration-ms="17" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method status="PASS" signature="testTpchSerialize()[pri:0, instance:com.facebook.presto.metadata.TestJsonTableHandle@6a351ddc]" name="testTpchSerialize" duration-ms="2" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTpchSerialize -->
      </class> <!-- com.facebook.presto.metadata.TestJsonTableHandle -->
      <class name="com.facebook.presto.operator.scalar.TestConditions">
        <test-method status="PASS" signature="testBetween()[pri:0, instance:com.facebook.presto.operator.scalar.TestConditions@4793b582]" name="testBetween" duration-ms="537" started-at="2014-05-07T06:59:07Z" finished-at="2014-05-07T06:59:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBetween -->
        <test-method status="PASS" signature="testIn()[pri:0, instance:com.facebook.presto.operator.scalar.TestConditions@4793b582]" name="testIn" duration-ms="246" started-at="2014-05-07T06:59:07Z" finished-at="2014-05-07T06:59:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIn -->
        <test-method status="PASS" signature="testInDoesNotShortCircuit()[pri:0, instance:com.facebook.presto.operator.scalar.TestConditions@4793b582]" name="testInDoesNotShortCircuit" duration-ms="10" started-at="2014-05-07T06:59:08Z" finished-at="2014-05-07T06:59:08Z">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
	at com.facebook.presto.sql.planner.ExpressionInterpreter$Visitor.visitArithmeticExpression(ExpressionInterpreter.java:520)
	at com.facebook.presto.sql.tree.ArithmeticExpression.accept(ArithmeticExpression.java:68)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.planner.ExpressionInterpreter$Visitor.visitInPredicate(ExpressionInterpreter.java:440)
	at com.facebook.presto.sql.tree.InPredicate.accept(InPredicate.java:41)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.planner.ExpressionInterpreter.evaluate(ExpressionInterpreter.java:137)
	at com.facebook.presto.sql.planner.InterpretedProjectionFunction.project(InterpretedProjectionFunction.java:56)
	at com.facebook.presto.operator.FilterAndProjectOperator.filterAndProjectRowOriented(FilterAndProjectOperator.java:95)
	at com.facebook.presto.operator.AbstractFilterAndProjectOperator.addInput(AbstractFilterAndProjectOperator.java:88)
	at com.facebook.presto.operator.scalar.FunctionAssertions.getAtMostOnePage(FunctionAssertions.java:425)
	at com.facebook.presto.operator.scalar.FunctionAssertions.selectSingleValue(FunctionAssertions.java:230)
	at com.facebook.presto.operator.scalar.FunctionAssertions.executeProjectionWithAll(FunctionAssertions.java:183)
	at com.facebook.presto.operator.scalar.FunctionAssertions.selectSingleValue(FunctionAssertions.java:159)
	at com.facebook.presto.operator.scalar.FunctionAssertions.selectSingleValue(FunctionAssertions.java:154)
	at com.facebook.presto.operator.scalar.TestConditions.testInDoesNotShortCircuit(TestConditions.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInDoesNotShortCircuit -->
        <test-method status="PASS" signature="testLike()[pri:0, instance:com.facebook.presto.operator.scalar.TestConditions@4793b582]" name="testLike" duration-ms="296" started-at="2014-05-07T06:59:08Z" finished-at="2014-05-07T06:59:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLike -->
        <test-method status="PASS" signature="testLikeInvalidEscape()[pri:0, instance:com.facebook.presto.operator.scalar.TestConditions@4793b582]" name="testLikeInvalidEscape" duration-ms="1" started-at="2014-05-07T06:59:08Z" finished-at="2014-05-07T06:59:08Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Error compiling ('monkey' LIKE 'monkey' ESCAPE 'foo'): escape must be empty or a single character: foo]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Error compiling ('monkey' LIKE 'monkey' ESCAPE 'foo'): escape must be empty or a single character: foo
	at com.facebook.presto.operator.scalar.FunctionAssertions.compileFilterProject(FunctionAssertions.java:394)
	at com.facebook.presto.operator.scalar.FunctionAssertions.executeProjectionWithAll(FunctionAssertions.java:177)
	at com.facebook.presto.operator.scalar.FunctionAssertions.selectSingleValue(FunctionAssertions.java:159)
	at com.facebook.presto.operator.scalar.FunctionAssertions.selectSingleValue(FunctionAssertions.java:154)
	at com.facebook.presto.operator.scalar.TestConditions.testLikeInvalidEscape(TestConditions.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
Caused by: java.lang.IllegalArgumentException: escape must be empty or a single character: foo
	at com.facebook.presto.sql.planner.LikeUtils.getEscapeChar(LikeUtils.java:86)
	at com.facebook.presto.sql.planner.LikeUtils.likeToPattern(LikeUtils.java:104)
	at com.facebook.presto.sql.gen.LikeFunctionBinder.bindFunction(LikeFunctionBinder.java:67)
	at com.facebook.presto.sql.gen.BootstrapFunctionBinder.bindFunction(BootstrapFunctionBinder.java:62)
	at com.facebook.presto.sql.gen.ByteCodeExpressionVisitor.visitLikePredicate(ByteCodeExpressionVisitor.java:340)
	at com.facebook.presto.sql.gen.ByteCodeExpressionVisitor.visitLikePredicate(ByteCodeExpressionVisitor.java:101)
	at com.facebook.presto.sql.tree.LikePredicate.accept(LikePredicate.java:53)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.gen.ExpressionCompiler.generateProjectMethod(ExpressionCompiler.java:736)
	at com.facebook.presto.sql.gen.ExpressionCompiler.compileFilterAndProjectOperator(ExpressionCompiler.java:271)
	at com.facebook.presto.sql.gen.ExpressionCompiler.internalCompileFilterAndProjectOperator(ExpressionCompiler.java:211)
	at com.facebook.presto.sql.gen.ExpressionCompiler$1.load(ExpressionCompiler.java:128)
	at com.facebook.presto.sql.gen.ExpressionCompiler$1.load(ExpressionCompiler.java:123)
	at com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3522)
	at com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2315)
	at com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2278)
	at com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2193)
	at com.google.common.cache.LocalCache.get(LocalCache.java:3932)
	at com.google.common.cache.LocalCache.getOrLoad(LocalCache.java:3936)
	at com.google.common.cache.LocalCache$LocalLoadingCache.get(LocalCache.java:4806)
	at com.google.common.cache.LocalCache$LocalLoadingCache.getUnchecked(LocalCache.java:4812)
	at com.facebook.presto.sql.gen.ExpressionCompiler.compileFilterAndProjectOperator(ExpressionCompiler.java:197)
	at com.facebook.presto.operator.scalar.FunctionAssertions.compileFilterProject(FunctionAssertions.java:388)
	... 38 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLikeInvalidEscape -->
        <test-method status="PASS" signature="testSearchCase()[pri:0, instance:com.facebook.presto.operator.scalar.TestConditions@4793b582]" name="testSearchCase" duration-ms="132" started-at="2014-05-07T06:59:08Z" finished-at="2014-05-07T06:59:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchCase -->
        <test-method status="PASS" signature="testSimpleCase()[pri:0, instance:com.facebook.presto.operator.scalar.TestConditions@4793b582]" name="testSimpleCase" duration-ms="147" started-at="2014-05-07T06:59:08Z" finished-at="2014-05-07T06:59:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleCase -->
      </class> <!-- com.facebook.presto.operator.scalar.TestConditions -->
      <class name="com.facebook.presto.operator.TestPipelineStats">
        <test-method status="PASS" signature="testJson()[pri:0, instance:com.facebook.presto.operator.TestPipelineStats@212b0f8a]" name="testJson" duration-ms="19" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJson -->
      </class> <!-- com.facebook.presto.operator.TestPipelineStats -->
      <class name="com.facebook.presto.block.uncompressed.TestUncompressedBooleanBlockCursor">
        <test-method status="PASS" signature="testAdvanceNextPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBooleanBlockCursor@115ed9ec]" name="testAdvanceNextPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceNextPosition -->
        <test-method status="PASS" signature="testAdvanceToPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBooleanBlockCursor@115ed9ec]" name="testAdvanceToPosition" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceToPosition -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBooleanBlockCursor@115ed9ec]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testStates()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBooleanBlockCursor@115ed9ec]" name="testStates" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStates -->
        <test-method status="PASS" signature="testCursorType()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBooleanBlockCursor@115ed9ec]" name="testCursorType" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCursorType -->
        <test-method status="PASS" signature="testFirstPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBooleanBlockCursor@115ed9ec]" name="testFirstPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstPosition -->
      </class> <!-- com.facebook.presto.block.uncompressed.TestUncompressedBooleanBlockCursor -->
      <class name="com.facebook.presto.operator.TestHashAggregationOperator">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestHashAggregationOperator@202bb129]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testHashAggregation()[pri:0, instance:com.facebook.presto.operator.TestHashAggregationOperator@202bb129]" name="testHashAggregation" duration-ms="3" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHashAggregation -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestHashAggregationOperator@202bb129]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestHashAggregationOperator@202bb129]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMemoryLimit()[pri:0, instance:com.facebook.presto.operator.TestHashAggregationOperator@202bb129]" name="testMemoryLimit" duration-ms="2" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Task exceeded max memory size of 10B]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Task exceeded max memory size of 10B
	at com.google.common.base.Preconditions.checkState(Preconditions.java:177)
	at com.facebook.presto.operator.HashAggregationOperator.getOutput(HashAggregationOperator.java:224)
	at com.facebook.presto.operator.OperatorAssertion.toPages(OperatorAssertion.java:57)
	at com.facebook.presto.operator.TestHashAggregationOperator.testMemoryLimit(TestHashAggregationOperator.java:146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMemoryLimit -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestHashAggregationOperator@202bb129]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestHashAggregationOperator@202bb129]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testMultiSliceAggregationOutput()[pri:0, instance:com.facebook.presto.operator.TestHashAggregationOperator@202bb129]" name="testMultiSliceAggregationOutput" duration-ms="30" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiSliceAggregationOutput -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestHashAggregationOperator@202bb129]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.facebook.presto.operator.TestHashAggregationOperator -->
      <class name="com.facebook.presto.operator.aggregation.TestLongApproximateAverageAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongApproximateAverageAggregation@528a16d7]" name="testAllPositionsNull" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongApproximateAverageAggregation@528a16d7]" name="testMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongApproximateAverageAggregation@528a16d7]" name="testMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongApproximateAverageAggregation@528a16d7]" name="testNegativeOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongApproximateAverageAggregation@528a16d7]" name="testNoPositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongApproximateAverageAggregation@528a16d7]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongApproximateAverageAggregation@528a16d7]" name="testPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongApproximateAverageAggregation@528a16d7]" name="testPositiveOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongApproximateAverageAggregation@528a16d7]" name="testSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongApproximateAverageAggregation@528a16d7]" name="testVectorAllPositionsNull" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongApproximateAverageAggregation@528a16d7]" name="testVectorMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongApproximateAverageAggregation@528a16d7]" name="testVectorMixedNullAndNonNullPositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongApproximateAverageAggregation@528a16d7]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongApproximateAverageAggregation@528a16d7]" name="testVectorPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongApproximateAverageAggregation@528a16d7]" name="testVectorSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestLongApproximateAverageAggregation -->
      <class name="com.facebook.presto.operator.TestHashSemiJoinOperator">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestHashSemiJoinOperator@3d420c81]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testBuildSideNulls()[pri:0, instance:com.facebook.presto.operator.TestHashSemiJoinOperator@3d420c81]" name="testBuildSideNulls" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildSideNulls -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestHashSemiJoinOperator@3d420c81]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testMemoryLimit()[pri:0, instance:com.facebook.presto.operator.TestHashSemiJoinOperator@3d420c81]" name="testMemoryLimit" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Task exceeded max memory size of 100B]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Task exceeded max memory size of 100B
	at com.google.common.base.Preconditions.checkState(Preconditions.java:177)
	at com.facebook.presto.operator.OperatorContext.setMemoryReservation(OperatorContext.java:203)
	at com.facebook.presto.operator.ChannelSet$ChannelSetBuilder.addBlock(ChannelSet.java:132)
	at com.facebook.presto.operator.SetBuilderOperator.addInput(SetBuilderOperator.java:192)
	at com.facebook.presto.operator.Driver.process(Driver.java:220)
	at com.facebook.presto.operator.TestHashSemiJoinOperator.testMemoryLimit(TestHashSemiJoinOperator.java:268)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMemoryLimit -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestHashSemiJoinOperator@3d420c81]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestHashSemiJoinOperator@3d420c81]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testProbeAndBuildNulls()[pri:0, instance:com.facebook.presto.operator.TestHashSemiJoinOperator@3d420c81]" name="testProbeAndBuildNulls" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProbeAndBuildNulls -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestHashSemiJoinOperator@3d420c81]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestHashSemiJoinOperator@3d420c81]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestHashSemiJoinOperator@3d420c81]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testProbeSideNulls()[pri:0, instance:com.facebook.presto.operator.TestHashSemiJoinOperator@3d420c81]" name="testProbeSideNulls" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProbeSideNulls -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestHashSemiJoinOperator@3d420c81]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestHashSemiJoinOperator@3d420c81]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSemiJoin()[pri:0, instance:com.facebook.presto.operator.TestHashSemiJoinOperator@3d420c81]" name="testSemiJoin" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSemiJoin -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestHashSemiJoinOperator@3d420c81]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.facebook.presto.operator.TestHashSemiJoinOperator -->
      <class name="com.facebook.presto.block.uncompressed.TestUncompressedDoubleBlockCursorWithNulls">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedDoubleBlockCursorWithNulls@49c342bd]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAdvanceNextPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedDoubleBlockCursorWithNulls@49c342bd]" name="testAdvanceNextPosition" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceNextPosition -->
        <test-method status="PASS" signature="testFirstPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedDoubleBlockCursorWithNulls@49c342bd]" name="testFirstPosition" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstPosition -->
        <test-method status="PASS" signature="testAdvanceToPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedDoubleBlockCursorWithNulls@49c342bd]" name="testAdvanceToPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceToPosition -->
        <test-method status="PASS" signature="testCursorType()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedDoubleBlockCursorWithNulls@49c342bd]" name="testCursorType" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCursorType -->
        <test-method status="PASS" signature="testNullValues()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedDoubleBlockCursorWithNulls@49c342bd]" name="testNullValues" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNullValues -->
        <test-method status="PASS" signature="testStates()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedDoubleBlockCursorWithNulls@49c342bd]" name="testStates" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStates -->
      </class> <!-- com.facebook.presto.block.uncompressed.TestUncompressedDoubleBlockCursorWithNulls -->
      <class name="com.facebook.presto.operator.TestOperatorStats">
        <test-method status="PASS" signature="testAdd()[pri:0, instance:com.facebook.presto.operator.TestOperatorStats@3d31436e]" name="testAdd" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testJson()[pri:0, instance:com.facebook.presto.operator.TestOperatorStats@3d31436e]" name="testJson" duration-ms="2" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJson -->
      </class> <!-- com.facebook.presto.operator.TestOperatorStats -->
      <class name="com.facebook.presto.sql.TestLikeUtils">
        <test-method status="PASS" signature="testBackslashesNoSpecialTreatment()[pri:0, instance:com.facebook.presto.sql.TestLikeUtils@34af77fa]" name="testBackslashesNoSpecialTreatment" duration-ms="1" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBackslashesNoSpecialTreatment -->
        <test-method status="PASS" signature="testAlternateEscapedCharacters()[pri:0, instance:com.facebook.presto.sql.TestLikeUtils@34af77fa]" name="testAlternateEscapedCharacters" duration-ms="0" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlternateEscapedCharacters -->
        <test-method status="PASS" signature="testLikeInvalidUtf8Value()[pri:0, instance:com.facebook.presto.sql.TestLikeUtils@34af77fa]" name="testLikeInvalidUtf8Value" duration-ms="0" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLikeInvalidUtf8Value -->
        <test-method status="PASS" signature="testLikeUtf8Pattern()[pri:0, instance:com.facebook.presto.sql.TestLikeUtils@34af77fa]" name="testLikeUtf8Pattern" duration-ms="2" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLikeUtf8Pattern -->
        <test-method status="PASS" signature="testSelfEscaping()[pri:0, instance:com.facebook.presto.sql.TestLikeUtils@34af77fa]" name="testSelfEscaping" duration-ms="0" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelfEscaping -->
      </class> <!-- com.facebook.presto.sql.TestLikeUtils -->
      <class name="com.facebook.presto.operator.TestAlignmentOperator">
        <test-method status="PASS" signature="testAlignment()[pri:0, instance:com.facebook.presto.operator.TestAlignmentOperator@55ac539f]" name="testAlignment" duration-ms="2" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlignment -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestAlignmentOperator@55ac539f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestAlignmentOperator@55ac539f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestAlignmentOperator@55ac539f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFinish()[pri:0, instance:com.facebook.presto.operator.TestAlignmentOperator@55ac539f]" name="testFinish" duration-ms="1" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFinish -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestAlignmentOperator@55ac539f]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.facebook.presto.operator.TestAlignmentOperator -->
      <class name="com.facebook.presto.metadata.TestShardCleanerConfig">
        <test-method status="PASS" signature="testDefaults()[pri:0, instance:com.facebook.presto.metadata.TestShardCleanerConfig@1cc7ca1f]" name="testDefaults" duration-ms="16" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaults -->
        <test-method status="PASS" signature="testExplicitPropertyMappings()[pri:0, instance:com.facebook.presto.metadata.TestShardCleanerConfig@1cc7ca1f]" name="testExplicitPropertyMappings" duration-ms="3" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExplicitPropertyMappings -->
      </class> <!-- com.facebook.presto.metadata.TestShardCleanerConfig -->
      <class name="com.facebook.presto.block.uncompressed.TestUncompressedLongBlockCursorWithNulls">
        <test-method status="PASS" signature="testAdvanceToPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedLongBlockCursorWithNulls@411edf1c]" name="testAdvanceToPosition" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceToPosition -->
        <test-method status="PASS" signature="testAdvanceNextPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedLongBlockCursorWithNulls@411edf1c]" name="testAdvanceNextPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceNextPosition -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedLongBlockCursorWithNulls@411edf1c]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFirstPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedLongBlockCursorWithNulls@411edf1c]" name="testFirstPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstPosition -->
        <test-method status="PASS" signature="testNullValues()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedLongBlockCursorWithNulls@411edf1c]" name="testNullValues" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNullValues -->
        <test-method status="PASS" signature="testStates()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedLongBlockCursorWithNulls@411edf1c]" name="testStates" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStates -->
        <test-method status="PASS" signature="testCursorType()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedLongBlockCursorWithNulls@411edf1c]" name="testCursorType" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCursorType -->
      </class> <!-- com.facebook.presto.block.uncompressed.TestUncompressedLongBlockCursorWithNulls -->
      <class name="com.facebook.presto.importer.TestPeriodicImportDao">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.importer.TestPeriodicImportDao@13c2a62a]" name="setup" is-config="true" duration-ms="24" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testJobCreation()[pri:0, instance:com.facebook.presto.importer.TestPeriodicImportDao@13c2a62a]" name="testJobCreation" duration-ms="10" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJobCreation -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.importer.TestPeriodicImportDao@13c2a62a]" name="teardown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.importer.TestPeriodicImportDao@13c2a62a]" name="setup" is-config="true" duration-ms="8" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testJobDeletion()[pri:0, instance:com.facebook.presto.importer.TestPeriodicImportDao@13c2a62a]" name="testJobDeletion" duration-ms="6" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJobDeletion -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.importer.TestPeriodicImportDao@13c2a62a]" name="teardown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.importer.TestPeriodicImportDao@13c2a62a]" name="setup" is-config="true" duration-ms="9" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRunCreation()[pri:0, instance:com.facebook.presto.importer.TestPeriodicImportDao@13c2a62a]" name="testRunCreation" duration-ms="15" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRunCreation -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.importer.TestPeriodicImportDao@13c2a62a]" name="teardown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.importer.TestPeriodicImportDao@13c2a62a]" name="setup" is-config="true" duration-ms="9" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRunMultistart()[pri:0, instance:com.facebook.presto.importer.TestPeriodicImportDao@13c2a62a]" name="testRunMultistart" duration-ms="16" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRunMultistart -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.importer.TestPeriodicImportDao@13c2a62a]" name="teardown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.importer.TestPeriodicImportDao@13c2a62a]" name="setup" is-config="true" duration-ms="6" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testTableCreation()[pri:0, instance:com.facebook.presto.importer.TestPeriodicImportDao@13c2a62a]" name="testTableCreation" duration-ms="3" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTableCreation -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.importer.TestPeriodicImportDao@13c2a62a]" name="teardown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.facebook.presto.importer.TestPeriodicImportDao -->
      <class name="com.facebook.presto.serde.TestDictionaryEncodedBlockSerde">
        <test-method status="PASS" signature="testRoundTrip()[pri:0, instance:com.facebook.presto.serde.TestDictionaryEncodedBlockSerde@4cd25db6]" name="testRoundTrip" duration-ms="2" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoundTrip -->
      </class> <!-- com.facebook.presto.serde.TestDictionaryEncodedBlockSerde -->
      <class name="com.facebook.presto.operator.scalar.TestStringFunctions">
        <test-method status="PASS" signature="testChr()[pri:0, instance:com.facebook.presto.operator.scalar.TestStringFunctions@4be3b5e0]" name="testChr" duration-ms="74" started-at="2014-05-07T07:00:26Z" finished-at="2014-05-07T07:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChr -->
        <test-method status="PASS" signature="testConcat()[pri:0, instance:com.facebook.presto.operator.scalar.TestStringFunctions@4be3b5e0]" name="testConcat" duration-ms="167" started-at="2014-05-07T07:00:26Z" finished-at="2014-05-07T07:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConcat -->
        <test-method status="PASS" signature="testLeftTrim()[pri:0, instance:com.facebook.presto.operator.scalar.TestStringFunctions@4be3b5e0]" name="testLeftTrim" duration-ms="104" started-at="2014-05-07T07:00:26Z" finished-at="2014-05-07T07:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeftTrim -->
        <test-method status="PASS" signature="testLength()[pri:0, instance:com.facebook.presto.operator.scalar.TestStringFunctions@4be3b5e0]" name="testLength" duration-ms="51" started-at="2014-05-07T07:00:26Z" finished-at="2014-05-07T07:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLength -->
        <test-method status="PASS" signature="testLower()[pri:0, instance:com.facebook.presto.operator.scalar.TestStringFunctions@4be3b5e0]" name="testLower" duration-ms="54" started-at="2014-05-07T07:00:26Z" finished-at="2014-05-07T07:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLower -->
        <test-method status="PASS" signature="testReplace()[pri:0, instance:com.facebook.presto.operator.scalar.TestStringFunctions@4be3b5e0]" name="testReplace" duration-ms="206" started-at="2014-05-07T07:00:26Z" finished-at="2014-05-07T07:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReplace -->
        <test-method status="PASS" signature="testReverse()[pri:0, instance:com.facebook.presto.operator.scalar.TestStringFunctions@4be3b5e0]" name="testReverse" duration-ms="68" started-at="2014-05-07T07:00:27Z" finished-at="2014-05-07T07:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverse -->
        <test-method status="PASS" signature="testRightTrim()[pri:0, instance:com.facebook.presto.operator.scalar.TestStringFunctions@4be3b5e0]" name="testRightTrim" duration-ms="103" started-at="2014-05-07T07:00:27Z" finished-at="2014-05-07T07:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRightTrim -->
        <test-method status="PASS" signature="testSplitPart()[pri:0, instance:com.facebook.presto.operator.scalar.TestStringFunctions@4be3b5e0]" name="testSplitPart" duration-ms="528" started-at="2014-05-07T07:00:27Z" finished-at="2014-05-07T07:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSplitPart -->
        <test-method status="PASS" signature="testSplitPartInvalid()[pri:0, instance:com.facebook.presto.operator.scalar.TestStringFunctions@4be3b5e0]" name="testSplitPartInvalid" duration-ms="2" started-at="2014-05-07T07:00:27Z" finished-at="2014-05-07T07:00:27Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Index must be greater than zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Index must be greater than zero
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:93)
	at com.facebook.presto.operator.scalar.StringFunctions.splitPart(StringFunctions.java:146)
	at FilterAndProjectOperator_49518.project_0(Unknown Source)
	at FilterAndProjectOperator_49518.filterAndProjectRowOriented(Unknown Source)
	at com.facebook.presto.operator.AbstractFilterAndProjectOperator.addInput(AbstractFilterAndProjectOperator.java:88)
	at com.facebook.presto.operator.scalar.FunctionAssertions.getAtMostOnePage(FunctionAssertions.java:425)
	at com.facebook.presto.operator.scalar.FunctionAssertions.selectSingleValue(FunctionAssertions.java:230)
	at com.facebook.presto.operator.scalar.FunctionAssertions.selectSingleValue(FunctionAssertions.java:217)
	at com.facebook.presto.operator.scalar.FunctionAssertions.executeProjectionWithAll(FunctionAssertions.java:179)
	at com.facebook.presto.operator.scalar.FunctionAssertions.selectSingleValue(FunctionAssertions.java:159)
	at com.facebook.presto.operator.scalar.FunctionAssertions.selectSingleValue(FunctionAssertions.java:154)
	at com.facebook.presto.operator.scalar.FunctionAssertions.assertFunction(FunctionAssertions.java:144)
	at com.facebook.presto.operator.scalar.TestStringFunctions.testSplitPartInvalid(TestStringFunctions.java:155)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSplitPartInvalid -->
        <test-method status="PASS" signature="testStringPosition()[pri:0, instance:com.facebook.presto.operator.scalar.TestStringFunctions@4be3b5e0]" name="testStringPosition" duration-ms="136" started-at="2014-05-07T07:00:27Z" finished-at="2014-05-07T07:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStringPosition -->
        <test-method status="PASS" signature="testSubstring()[pri:0, instance:com.facebook.presto.operator.scalar.TestStringFunctions@4be3b5e0]" name="testSubstring" duration-ms="359" started-at="2014-05-07T07:00:27Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubstring -->
        <test-method status="PASS" signature="testTrim()[pri:0, instance:com.facebook.presto.operator.scalar.TestStringFunctions@4be3b5e0]" name="testTrim" duration-ms="103" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrim -->
        <test-method status="PASS" signature="testUpper()[pri:0, instance:com.facebook.presto.operator.scalar.TestStringFunctions@4be3b5e0]" name="testUpper" duration-ms="52" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpper -->
      </class> <!-- com.facebook.presto.operator.scalar.TestStringFunctions -->
      <class name="com.facebook.presto.server.TestFailureDetectorConfig">
        <test-method status="PASS" signature="testDefaults()[pri:0, instance:com.facebook.presto.server.TestFailureDetectorConfig@1bce7242]" name="testDefaults" duration-ms="48" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaults -->
        <test-method status="PASS" signature="testExplicitPropertyMappings()[pri:0, instance:com.facebook.presto.server.TestFailureDetectorConfig@1bce7242]" name="testExplicitPropertyMappings" duration-ms="11" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExplicitPropertyMappings -->
      </class> <!-- com.facebook.presto.server.TestFailureDetectorConfig -->
      <class name="com.facebook.presto.operator.scalar.TestJsonFunctions">
        <test-method status="PASS" signature="testJsonArrayContainsBoolean()[pri:0, instance:com.facebook.presto.operator.scalar.TestJsonFunctions@72e907ca]" name="testJsonArrayContainsBoolean" duration-ms="266" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJsonArrayContainsBoolean -->
        <test-method status="PASS" signature="testJsonArrayContainsDouble()[pri:0, instance:com.facebook.presto.operator.scalar.TestJsonFunctions@72e907ca]" name="testJsonArrayContainsDouble" duration-ms="184" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJsonArrayContainsDouble -->
        <test-method status="PASS" signature="testJsonArrayContainsInvalid()[pri:0, instance:com.facebook.presto.operator.scalar.TestJsonFunctions@72e907ca]" name="testJsonArrayContainsInvalid" duration-ms="417" started-at="2014-05-07T07:00:12Z" finished-at="2014-05-07T07:00:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJsonArrayContainsInvalid -->
        <test-method status="PASS" signature="testJsonArrayContainsLong()[pri:0, instance:com.facebook.presto.operator.scalar.TestJsonFunctions@72e907ca]" name="testJsonArrayContainsLong" duration-ms="159" started-at="2014-05-07T07:00:12Z" finished-at="2014-05-07T07:00:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJsonArrayContainsLong -->
        <test-method status="PASS" signature="testJsonArrayContainsString()[pri:0, instance:com.facebook.presto.operator.scalar.TestJsonFunctions@72e907ca]" name="testJsonArrayContainsString" duration-ms="141" started-at="2014-05-07T07:00:12Z" finished-at="2014-05-07T07:00:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJsonArrayContainsString -->
        <test-method status="PASS" signature="testJsonArrayLength()[pri:0, instance:com.facebook.presto.operator.scalar.TestJsonFunctions@72e907ca]" name="testJsonArrayLength" duration-ms="82" started-at="2014-05-07T07:00:12Z" finished-at="2014-05-07T07:00:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJsonArrayLength -->
      </class> <!-- com.facebook.presto.operator.scalar.TestJsonFunctions -->
      <class name="com.facebook.presto.operator.TestTopNOperator">
        <test-method status="PASS" signature="testMultiFieldKey()[pri:0, instance:com.facebook.presto.operator.TestTopNOperator@ea6e48f]" name="testMultiFieldKey" duration-ms="2" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiFieldKey -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestTopNOperator@ea6e48f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testReverseOrder()[pri:0, instance:com.facebook.presto.operator.TestTopNOperator@ea6e48f]" name="testReverseOrder" duration-ms="1" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverseOrder -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestTopNOperator@ea6e48f]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestTopNOperator@ea6e48f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestTopNOperator@ea6e48f]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestTopNOperator@ea6e48f]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestTopNOperator@ea6e48f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testSingleFieldKey()[pri:0, instance:com.facebook.presto.operator.TestTopNOperator@ea6e48f]" name="testSingleFieldKey" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleFieldKey -->
      </class> <!-- com.facebook.presto.operator.TestTopNOperator -->
      <class name="com.facebook.presto.util.TestDelimitedRecordIterable">
        <test-method status="PASS" signature="testExtraction()[pri:0, instance:com.facebook.presto.util.TestDelimitedRecordIterable@3b845321]" name="testExtraction" duration-ms="6" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtraction -->
      </class> <!-- com.facebook.presto.util.TestDelimitedRecordIterable -->
      <class name="com.facebook.presto.block.uncompressed.TestUncompressedSliceBlockCursor">
        <test-method status="PASS" signature="testAdvanceNextPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedSliceBlockCursor@452e49bc]" name="testAdvanceNextPosition" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceNextPosition -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedSliceBlockCursor@452e49bc]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFirstPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedSliceBlockCursor@452e49bc]" name="testFirstPosition" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstPosition -->
        <test-method status="PASS" signature="testAdvanceToPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedSliceBlockCursor@452e49bc]" name="testAdvanceToPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceToPosition -->
        <test-method status="PASS" signature="testCursorType()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedSliceBlockCursor@452e49bc]" name="testCursorType" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCursorType -->
        <test-method status="PASS" signature="testStates()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedSliceBlockCursor@452e49bc]" name="testStates" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStates -->
      </class> <!-- com.facebook.presto.block.uncompressed.TestUncompressedSliceBlockCursor -->
      <class name="com.facebook.presto.operator.TestExchangeClient">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestExchangeClient@55fe5c83]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAddLocation()[pri:0, instance:com.facebook.presto.operator.TestExchangeClient@55fe5c83]" name="testAddLocation" duration-ms="50" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddLocation -->
        <test-method status="PASS" signature="testBufferLimit()[pri:0, instance:com.facebook.presto.operator.TestExchangeClient@55fe5c83]" name="testBufferLimit" duration-ms="308" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBufferLimit -->
        <test-method status="PASS" signature="testClose()[pri:0, instance:com.facebook.presto.operator.TestExchangeClient@55fe5c83]" name="testClose" duration-ms="3" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClose -->
        <test-method status="PASS" signature="testHappyPath()[pri:0, instance:com.facebook.presto.operator.TestExchangeClient@55fe5c83]" name="testHappyPath" duration-ms="2" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHappyPath -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestExchangeClient@55fe5c83]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.facebook.presto.operator.TestExchangeClient -->
      <class name="com.facebook.presto.block.rle.TestRunLengthEncodedBlockCursor">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.block.rle.TestRunLengthEncodedBlockCursor@5b66137c]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAdvanceToPosition()[pri:0, instance:com.facebook.presto.block.rle.TestRunLengthEncodedBlockCursor@5b66137c]" name="testAdvanceToPosition" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceToPosition -->
        <test-method status="PASS" signature="testAdvanceNextPosition()[pri:0, instance:com.facebook.presto.block.rle.TestRunLengthEncodedBlockCursor@5b66137c]" name="testAdvanceNextPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceNextPosition -->
        <test-method status="PASS" signature="testStates()[pri:0, instance:com.facebook.presto.block.rle.TestRunLengthEncodedBlockCursor@5b66137c]" name="testStates" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStates -->
        <test-method status="PASS" signature="testFirstPosition()[pri:0, instance:com.facebook.presto.block.rle.TestRunLengthEncodedBlockCursor@5b66137c]" name="testFirstPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstPosition -->
      </class> <!-- com.facebook.presto.block.rle.TestRunLengthEncodedBlockCursor -->
      <class name="com.facebook.presto.execution.TestQueryManagerConfig">
        <test-method status="PASS" signature="testDefaults()[pri:0, instance:com.facebook.presto.execution.TestQueryManagerConfig@2b1d8ca6]" name="testDefaults" duration-ms="24" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaults -->
        <test-method status="PASS" signature="testExplicitPropertyMappings()[pri:0, instance:com.facebook.presto.execution.TestQueryManagerConfig@2b1d8ca6]" name="testExplicitPropertyMappings" duration-ms="6" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExplicitPropertyMappings -->
      </class> <!-- com.facebook.presto.execution.TestQueryManagerConfig -->
      <class name="com.facebook.presto.execution.TestSqlTaskManager">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.execution.TestSqlTaskManager@5a0da253]" name="setUp" is-config="true" duration-ms="15" started-at="2014-05-07T07:00:25Z" finished-at="2014-05-07T07:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAbort()[pri:0, instance:com.facebook.presto.execution.TestSqlTaskManager@5a0da253]" name="testAbort" duration-ms="9" started-at="2014-05-07T07:00:25Z" finished-at="2014-05-07T07:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAbort -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.execution.TestSqlTaskManager@5a0da253]" name="setUp" is-config="true" duration-ms="8" started-at="2014-05-07T07:00:25Z" finished-at="2014-05-07T07:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.execution.TestSqlTaskManager@5a0da253]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:25Z" finished-at="2014-05-07T07:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testCancel()[pri:0, instance:com.facebook.presto.execution.TestSqlTaskManager@5a0da253]" name="testCancel" duration-ms="2" started-at="2014-05-07T07:00:25Z" finished-at="2014-05-07T07:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCancel -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.execution.TestSqlTaskManager@5a0da253]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:25Z" finished-at="2014-05-07T07:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.execution.TestSqlTaskManager@5a0da253]" name="setUp" is-config="true" duration-ms="8" started-at="2014-05-07T07:00:25Z" finished-at="2014-05-07T07:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testEmptyQuery()[pri:0, instance:com.facebook.presto.execution.TestSqlTaskManager@5a0da253]" name="testEmptyQuery" duration-ms="3" started-at="2014-05-07T07:00:25Z" finished-at="2014-05-07T07:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyQuery -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.execution.TestSqlTaskManager@5a0da253]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:25Z" finished-at="2014-05-07T07:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.execution.TestSqlTaskManager@5a0da253]" name="setUp" is-config="true" duration-ms="8" started-at="2014-05-07T07:00:25Z" finished-at="2014-05-07T07:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testRemoveOldTasks()[pri:0, instance:com.facebook.presto.execution.TestSqlTaskManager@5a0da253]" name="testRemoveOldTasks" duration-ms="105" started-at="2014-05-07T07:00:25Z" finished-at="2014-05-07T07:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveOldTasks -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.execution.TestSqlTaskManager@5a0da253]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:25Z" finished-at="2014-05-07T07:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.execution.TestSqlTaskManager@5a0da253]" name="setUp" is-config="true" duration-ms="9" started-at="2014-05-07T07:00:25Z" finished-at="2014-05-07T07:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSimpleQuery()[pri:0, instance:com.facebook.presto.execution.TestSqlTaskManager@5a0da253]" name="testSimpleQuery" duration-ms="1005" started-at="2014-05-07T07:00:25Z" finished-at="2014-05-07T07:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleQuery -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.execution.TestSqlTaskManager@5a0da253]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:26Z" finished-at="2014-05-07T07:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.facebook.presto.execution.TestSqlTaskManager -->
      <class name="com.facebook.presto.block.uncompressed.TestUncompressedSliceBlockCursorWithNulls">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedSliceBlockCursorWithNulls@530f4c5e]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAdvanceToPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedSliceBlockCursorWithNulls@530f4c5e]" name="testAdvanceToPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceToPosition -->
        <test-method status="PASS" signature="testAdvanceNextPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedSliceBlockCursorWithNulls@530f4c5e]" name="testAdvanceNextPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceNextPosition -->
        <test-method status="PASS" signature="testFirstPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedSliceBlockCursorWithNulls@530f4c5e]" name="testFirstPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstPosition -->
        <test-method status="PASS" signature="testStates()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedSliceBlockCursorWithNulls@530f4c5e]" name="testStates" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStates -->
        <test-method status="PASS" signature="testNullValues()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedSliceBlockCursorWithNulls@530f4c5e]" name="testNullValues" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNullValues -->
        <test-method status="PASS" signature="testCursorType()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedSliceBlockCursorWithNulls@530f4c5e]" name="testCursorType" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCursorType -->
      </class> <!-- com.facebook.presto.block.uncompressed.TestUncompressedSliceBlockCursorWithNulls -->
      <class name="com.facebook.presto.execution.TestTaskManagerConfig">
        <test-method status="PASS" signature="testDefaults()[pri:0, instance:com.facebook.presto.execution.TestTaskManagerConfig@67e1a796]" name="testDefaults" duration-ms="23" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaults -->
        <test-method status="PASS" signature="testExplicitPropertyMappings()[pri:0, instance:com.facebook.presto.execution.TestTaskManagerConfig@67e1a796]" name="testExplicitPropertyMappings" duration-ms="8" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExplicitPropertyMappings -->
      </class> <!-- com.facebook.presto.execution.TestTaskManagerConfig -->
      <class name="com.facebook.presto.operator.aggregation.TestDoubleMaxAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMaxAggregation@3d4395fb]" name="testAllPositionsNull" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMaxAggregation@3d4395fb]" name="testMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMaxAggregation@3d4395fb]" name="testMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMaxAggregation@3d4395fb]" name="testNegativeOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMaxAggregation@3d4395fb]" name="testNoPositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMaxAggregation@3d4395fb]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMaxAggregation@3d4395fb]" name="testPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMaxAggregation@3d4395fb]" name="testPositiveOnlyValues" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMaxAggregation@3d4395fb]" name="testSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMaxAggregation@3d4395fb]" name="testVectorAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMaxAggregation@3d4395fb]" name="testVectorMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMaxAggregation@3d4395fb]" name="testVectorMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMaxAggregation@3d4395fb]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMaxAggregation@3d4395fb]" name="testVectorPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMaxAggregation@3d4395fb]" name="testVectorSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestDoubleMaxAggregation -->
      <class name="com.facebook.presto.operator.aggregation.TestApproximateCountDistinctDouble">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestApproximateCountDistinctDouble@3b430892]" name="testAllPositionsNull" duration-ms="11" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullsAndNonNulls()[pri:0, instance:com.facebook.presto.operator.aggregation.TestApproximateCountDistinctDouble@3b430892]" name="testMixedNullsAndNonNulls" duration-ms="393" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullsAndNonNulls -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestApproximateCountDistinctDouble@3b430892]" name="testMultiplePositions" duration-ms="1970" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testMultiplePositionsPartial()[pri:0, instance:com.facebook.presto.operator.aggregation.TestApproximateCountDistinctDouble@3b430892]" name="testMultiplePositionsPartial" duration-ms="851" started-at="2014-05-07T06:56:36Z" finished-at="2014-05-07T06:56:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositionsPartial -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestApproximateCountDistinctDouble@3b430892]" name="testNoPositions" duration-ms="1" started-at="2014-05-07T06:56:37Z" finished-at="2014-05-07T06:56:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestApproximateCountDistinctDouble@3b430892]" name="testSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:37Z" finished-at="2014-05-07T06:56:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestApproximateCountDistinctDouble -->
      <class name="com.facebook.presto.serde.TestUncompressedBlockSerde">
        <test-method status="PASS" signature="testCreateBlockWriter()[pri:0, instance:com.facebook.presto.serde.TestUncompressedBlockSerde@6f2735cc]" name="testCreateBlockWriter" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateBlockWriter -->
        <test-method status="PASS" signature="testRoundTrip()[pri:0, instance:com.facebook.presto.serde.TestUncompressedBlockSerde@6f2735cc]" name="testRoundTrip" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoundTrip -->
      </class> <!-- com.facebook.presto.serde.TestUncompressedBlockSerde -->
      <class name="com.facebook.presto.operator.aggregation.TestApproximateCountDistinctLong">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestApproximateCountDistinctLong@5932926d]" name="testAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:37Z" finished-at="2014-05-07T06:56:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullsAndNonNulls()[pri:0, instance:com.facebook.presto.operator.aggregation.TestApproximateCountDistinctLong@5932926d]" name="testMixedNullsAndNonNulls" duration-ms="110" started-at="2014-05-07T06:56:37Z" finished-at="2014-05-07T06:56:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullsAndNonNulls -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestApproximateCountDistinctLong@5932926d]" name="testMultiplePositions" duration-ms="2136" started-at="2014-05-07T06:56:37Z" finished-at="2014-05-07T06:56:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testMultiplePositionsPartial()[pri:0, instance:com.facebook.presto.operator.aggregation.TestApproximateCountDistinctLong@5932926d]" name="testMultiplePositionsPartial" duration-ms="722" started-at="2014-05-07T06:56:39Z" finished-at="2014-05-07T06:56:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositionsPartial -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestApproximateCountDistinctLong@5932926d]" name="testNoPositions" duration-ms="1" started-at="2014-05-07T06:56:40Z" finished-at="2014-05-07T06:56:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestApproximateCountDistinctLong@5932926d]" name="testSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:40Z" finished-at="2014-05-07T06:56:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestApproximateCountDistinctLong -->
      <class name="com.facebook.presto.TestLocalQueries">
        <test-method status="PASS" signature="setupDatabase()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="setupDatabase" is-config="true" duration-ms="2236" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupDatabase -->
        <test-method status="PASS" signature="testAggregationWithLimit()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testAggregationWithLimit" duration-ms="824" started-at="2014-05-07T06:56:50Z" finished-at="2014-05-07T06:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAggregationWithLimit -->
        <test-method status="PASS" signature="testAggregationWithProjection()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testAggregationWithProjection" duration-ms="158" started-at="2014-05-07T06:56:51Z" finished-at="2014-05-07T06:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAggregationWithProjection -->
        <test-method status="PASS" signature="testAggregationWithProjection2()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testAggregationWithProjection2" duration-ms="77" started-at="2014-05-07T06:56:51Z" finished-at="2014-05-07T06:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAggregationWithProjection2 -->
        <test-method status="PASS" signature="testAliasedInInlineView()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testAliasedInInlineView" duration-ms="408" started-at="2014-05-07T06:56:51Z" finished-at="2014-05-07T06:56:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAliasedInInlineView -->
        <test-method status="PASS" signature="testAntiJoin()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testAntiJoin" duration-ms="1469" started-at="2014-05-07T06:56:52Z" finished-at="2014-05-07T06:56:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAntiJoin -->
        <test-method status="PASS" signature="testApproxPercentile()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testApproxPercentile" duration-ms="599" started-at="2014-05-07T06:56:53Z" finished-at="2014-05-07T06:56:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApproxPercentile -->
        <test-method status="PASS" signature="testApproximateCountDistinct()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testApproximateCountDistinct" duration-ms="41" started-at="2014-05-07T06:56:54Z" finished-at="2014-05-07T06:56:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApproximateCountDistinct -->
        <test-method status="PASS" signature="testApproximateCountDistinctGroupBy()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testApproximateCountDistinctGroupBy" duration-ms="109" started-at="2014-05-07T06:56:54Z" finished-at="2014-05-07T06:56:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApproximateCountDistinctGroupBy -->
        <test-method status="PASS" signature="testArithmeticNegation()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testArithmeticNegation" duration-ms="158" started-at="2014-05-07T06:56:54Z" finished-at="2014-05-07T06:56:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArithmeticNegation -->
        <test-method status="PASS" signature="testAverageAll()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testAverageAll" duration-ms="68" started-at="2014-05-07T06:56:54Z" finished-at="2014-05-07T06:56:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAverageAll -->
        <test-method status="PASS" signature="testBuildFilteredLeftJoin()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testBuildFilteredLeftJoin" duration-ms="5751" started-at="2014-05-07T06:56:54Z" finished-at="2014-05-07T06:57:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildFilteredLeftJoin -->
        <test-method status="PASS" signature="testBuildFilteredRightJoin()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testBuildFilteredRightJoin" duration-ms="1461" started-at="2014-05-07T06:57:00Z" finished-at="2014-05-07T06:57:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildFilteredRightJoin -->
        <test-method status="PASS" signature="testCaseInsensitiveAliasedRelation()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testCaseInsensitiveAliasedRelation" duration-ms="528" started-at="2014-05-07T06:57:01Z" finished-at="2014-05-07T06:57:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCaseInsensitiveAliasedRelation -->
        <test-method status="PASS" signature="testCaseInsensitiveAttribute()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testCaseInsensitiveAttribute" duration-ms="67" started-at="2014-05-07T06:57:02Z" finished-at="2014-05-07T06:57:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCaseInsensitiveAttribute -->
        <test-method status="PASS" signature="testCaseInsensitiveOutputAliasInOrderBy()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testCaseInsensitiveOutputAliasInOrderBy" duration-ms="167" started-at="2014-05-07T06:57:02Z" finished-at="2014-05-07T06:57:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCaseInsensitiveOutputAliasInOrderBy -->
        <test-method status="PASS" signature="testCaseNoElse()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testCaseNoElse" duration-ms="237" started-at="2014-05-07T06:57:02Z" finished-at="2014-05-07T06:57:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCaseNoElse -->
        <test-method status="PASS" signature="testCast()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testCast" duration-ms="505" started-at="2014-05-07T06:57:02Z" finished-at="2014-05-07T06:57:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCast -->
        <test-method status="PASS" signature="testChainedUnionsWithOrder()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testChainedUnionsWithOrder" duration-ms="750" started-at="2014-05-07T06:57:03Z" finished-at="2014-05-07T06:57:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChainedUnionsWithOrder -->
        <test-method status="PASS" signature="testColumnAliases()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testColumnAliases" duration-ms="252" started-at="2014-05-07T06:57:04Z" finished-at="2014-05-07T06:57:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColumnAliases -->
        <test-method status="PASS" signature="testComplexQuery()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testComplexQuery" duration-ms="87" started-at="2014-05-07T06:57:04Z" finished-at="2014-05-07T06:57:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComplexQuery -->
        <test-method status="PASS" signature="testConcatOperator()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testConcatOperator" duration-ms="26" started-at="2014-05-07T06:57:04Z" finished-at="2014-05-07T06:57:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConcatOperator -->
        <test-method status="PASS" signature="testCountAll()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testCountAll" duration-ms="38" started-at="2014-05-07T06:57:04Z" finished-at="2014-05-07T06:57:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountAll -->
        <test-method status="PASS" signature="testCountAllWithComparison()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testCountAllWithComparison" duration-ms="437" started-at="2014-05-07T06:57:04Z" finished-at="2014-05-07T06:57:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountAllWithComparison -->
        <test-method status="PASS" signature="testCountAllWithPredicate()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testCountAllWithPredicate" duration-ms="62" started-at="2014-05-07T06:57:05Z" finished-at="2014-05-07T06:57:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountAllWithPredicate -->
        <test-method status="PASS" signature="testCountBoolean()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testCountBoolean" duration-ms="52" started-at="2014-05-07T06:57:05Z" finished-at="2014-05-07T06:57:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountBoolean -->
        <test-method status="PASS" signature="testCountColumn()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testCountColumn" duration-ms="297" started-at="2014-05-07T06:57:05Z" finished-at="2014-05-07T06:57:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountColumn -->
        <test-method status="PASS" signature="testCountDistinct()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testCountDistinct" duration-ms="2" started-at="2014-05-07T06:57:05Z" finished-at="2014-05-07T06:57:05Z">
          <exception class="com.facebook.presto.sql.analyzer.SemanticException">
            <message>
              <![CDATA[DISTINCT in aggregation parameters not yet supported]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.facebook.presto.sql.analyzer.SemanticException: DISTINCT in aggregation parameters not yet supported
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.analyzeAggregations(TupleAnalyzer.java:721)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitQuerySpecification(TupleAnalyzer.java:266)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitQuerySpecification(TupleAnalyzer.java:96)
	at com.facebook.presto.sql.tree.QuerySpecification.accept(QuerySpecification.java:99)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.analyzer.StatementAnalyzer.visitQuery(StatementAnalyzer.java:439)
	at com.facebook.presto.sql.analyzer.StatementAnalyzer.visitQuery(StatementAnalyzer.java:86)
	at com.facebook.presto.sql.tree.Query.accept(Query.java:71)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.analyzer.Analyzer.analyze(Analyzer.java:50)
	at com.facebook.presto.util.LocalQueryRunner.createDrivers(LocalQueryRunner.java:214)
	at com.facebook.presto.util.LocalQueryRunner.createDrivers(LocalQueryRunner.java:197)
	at com.facebook.presto.util.LocalQueryRunner.execute(LocalQueryRunner.java:178)
	at com.facebook.presto.TestLocalQueries.computeActual(TestLocalQueries.java:68)
	at com.facebook.presto.AbstractTestQueries.assertQuery(AbstractTestQueries.java:2707)
	at com.facebook.presto.AbstractTestQueries.assertQuery(AbstractTestQueries.java:2686)
	at com.facebook.presto.AbstractTestQueries.testCountDistinct(AbstractTestQueries.java:302)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- com.facebook.presto.sql.analyzer.SemanticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountDistinct -->
        <test-method status="PASS" signature="testCountWithAndPredicate()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testCountWithAndPredicate" duration-ms="398" started-at="2014-05-07T06:57:05Z" finished-at="2014-05-07T06:57:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountWithAndPredicate -->
        <test-method status="PASS" signature="testCountWithCoalescePredicate()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testCountWithCoalescePredicate" duration-ms="65" started-at="2014-05-07T06:57:05Z" finished-at="2014-05-07T06:57:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountWithCoalescePredicate -->
        <test-method status="PASS" signature="testCountWithInlineView()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testCountWithInlineView" duration-ms="193" started-at="2014-05-07T06:57:05Z" finished-at="2014-05-07T06:57:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountWithInlineView -->
        <test-method status="PASS" signature="testCountWithIsNotNullPredicate()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testCountWithIsNotNullPredicate" duration-ms="59" started-at="2014-05-07T06:57:06Z" finished-at="2014-05-07T06:57:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountWithIsNotNullPredicate -->
        <test-method status="PASS" signature="testCountWithIsNullPredicate()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testCountWithIsNullPredicate" duration-ms="59" started-at="2014-05-07T06:57:06Z" finished-at="2014-05-07T06:57:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountWithIsNullPredicate -->
        <test-method status="PASS" signature="testCountWithNotPredicate()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testCountWithNotPredicate" duration-ms="376" started-at="2014-05-07T06:57:06Z" finished-at="2014-05-07T06:57:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountWithNotPredicate -->
        <test-method status="PASS" signature="testCountWithNullIfPredicate()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testCountWithNullIfPredicate" duration-ms="69" started-at="2014-05-07T06:57:06Z" finished-at="2014-05-07T06:57:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountWithNullIfPredicate -->
        <test-method status="PASS" signature="testCountWithNullPredicate()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testCountWithNullPredicate" duration-ms="14" started-at="2014-05-07T06:57:06Z" finished-at="2014-05-07T06:57:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountWithNullPredicate -->
        <test-method status="PASS" signature="testCountWithOrPredicate()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testCountWithOrPredicate" duration-ms="399" started-at="2014-05-07T06:57:06Z" finished-at="2014-05-07T06:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountWithOrPredicate -->
        <test-method status="PASS" signature="testDefaultExplainGraphvizFormat()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testDefaultExplainGraphvizFormat" duration-ms="38" started-at="2014-05-07T06:57:07Z" finished-at="2014-05-07T06:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultExplainGraphvizFormat -->
        <test-method status="PASS" signature="testDefaultExplainTextFormat()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testDefaultExplainTextFormat" duration-ms="27" started-at="2014-05-07T06:57:07Z" finished-at="2014-05-07T06:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultExplainTextFormat -->
        <test-method status="PASS" signature="testDistinct()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testDistinct" duration-ms="46" started-at="2014-05-07T06:57:07Z" finished-at="2014-05-07T06:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDistinct -->
        <test-method status="PASS" signature="testDistinctMultipleFields()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testDistinctMultipleFields" duration-ms="172" started-at="2014-05-07T06:57:07Z" finished-at="2014-05-07T06:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDistinctMultipleFields -->
        <test-method status="PASS" signature="testDistinctWithOrderBy()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testDistinctWithOrderBy" duration-ms="65" started-at="2014-05-07T06:57:07Z" finished-at="2014-05-07T06:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDistinctWithOrderBy -->
        <test-method status="PASS" signature="testDistinctWithOrderByNotInSelect()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testDistinctWithOrderByNotInSelect" duration-ms="2" started-at="2014-05-07T06:57:07Z" finished-at="2014-05-07T06:57:07Z">
          <exception class="com.facebook.presto.sql.analyzer.SemanticException">
            <message>
              <![CDATA[For SELECT DISTINCT, ORDER BY expressions must appear in select list]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.facebook.presto.sql.analyzer.SemanticException: For SELECT DISTINCT, ORDER BY expressions must appear in select list
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.analyzeOrderBy(TupleAnalyzer.java:564)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitQuerySpecification(TupleAnalyzer.java:263)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitQuerySpecification(TupleAnalyzer.java:96)
	at com.facebook.presto.sql.tree.QuerySpecification.accept(QuerySpecification.java:99)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.analyzer.StatementAnalyzer.visitQuery(StatementAnalyzer.java:439)
	at com.facebook.presto.sql.analyzer.StatementAnalyzer.visitQuery(StatementAnalyzer.java:86)
	at com.facebook.presto.sql.tree.Query.accept(Query.java:71)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.analyzer.Analyzer.analyze(Analyzer.java:50)
	at com.facebook.presto.util.LocalQueryRunner.createDrivers(LocalQueryRunner.java:214)
	at com.facebook.presto.util.LocalQueryRunner.createDrivers(LocalQueryRunner.java:197)
	at com.facebook.presto.util.LocalQueryRunner.execute(LocalQueryRunner.java:178)
	at com.facebook.presto.TestLocalQueries.computeActual(TestLocalQueries.java:68)
	at com.facebook.presto.AbstractTestQueries.assertQuery(AbstractTestQueries.java:2707)
	at com.facebook.presto.AbstractTestQueries.assertQueryOrdered(AbstractTestQueries.java:2692)
	at com.facebook.presto.AbstractTestQueries.testDistinctWithOrderByNotInSelect(AbstractTestQueries.java:316)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- com.facebook.presto.sql.analyzer.SemanticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDistinctWithOrderByNotInSelect -->
        <test-method status="PASS" signature="testDistributedExplain()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testDistributedExplain" duration-ms="27" started-at="2014-05-07T06:57:07Z" finished-at="2014-05-07T06:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDistributedExplain -->
        <test-method status="PASS" signature="testDistributedExplainGraphvizFormat()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testDistributedExplainGraphvizFormat" duration-ms="27" started-at="2014-05-07T06:57:07Z" finished-at="2014-05-07T06:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDistributedExplainGraphvizFormat -->
        <test-method status="PASS" signature="testDistributedExplainTextFormat()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testDistributedExplainTextFormat" duration-ms="21" started-at="2014-05-07T06:57:07Z" finished-at="2014-05-07T06:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDistributedExplainTextFormat -->
        <test-method status="PASS" signature="testDoubleFilteredLeftJoinWithLeftConstantEquality()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testDoubleFilteredLeftJoinWithLeftConstantEquality" duration-ms="305" started-at="2014-05-07T06:57:07Z" finished-at="2014-05-07T06:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoubleFilteredLeftJoinWithLeftConstantEquality -->
        <test-method status="PASS" signature="testDoubleFilteredLeftJoinWithRightConstantEquality()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testDoubleFilteredLeftJoinWithRightConstantEquality" duration-ms="258" started-at="2014-05-07T06:57:07Z" finished-at="2014-05-07T06:57:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoubleFilteredLeftJoinWithRightConstantEquality -->
        <test-method status="PASS" signature="testDoubleFilteredRightJoinWithLeftConstantEquality()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testDoubleFilteredRightJoinWithLeftConstantEquality" duration-ms="234" started-at="2014-05-07T06:57:08Z" finished-at="2014-05-07T06:57:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoubleFilteredRightJoinWithLeftConstantEquality -->
        <test-method status="PASS" signature="testDoubleFilteredRightJoinWithRightConstantEquality()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testDoubleFilteredRightJoinWithRightConstantEquality" duration-ms="256" started-at="2014-05-07T06:57:08Z" finished-at="2014-05-07T06:57:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoubleFilteredRightJoinWithRightConstantEquality -->
        <test-method status="PASS" signature="testDual()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testDual" duration-ms="4" started-at="2014-05-07T06:57:08Z" finished-at="2014-05-07T06:57:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDual -->
        <test-method status="PASS" signature="testDuplicateFields()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testDuplicateFields" duration-ms="88" started-at="2014-05-07T06:57:08Z" finished-at="2014-05-07T06:57:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDuplicateFields -->
        <test-method status="PASS" signature="testFunctionNotRegistered()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testFunctionNotRegistered" duration-ms="1" started-at="2014-05-07T06:57:08Z" finished-at="2014-05-07T06:57:08Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Unexpected parameters (bigint) for function length. Expected: length(varchar)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Unexpected parameters (bigint) for function length. Expected: length(varchar)
	at com.facebook.presto.metadata.FunctionRegistry.get(FunctionRegistry.java:209)
	at com.facebook.presto.metadata.MetadataManager.getFunction(MetadataManager.java:81)
	at com.facebook.presto.sql.analyzer.ExpressionAnalyzer$Visitor.visitFunctionCall(ExpressionAnalyzer.java:480)
	at com.facebook.presto.sql.analyzer.ExpressionAnalyzer$Visitor.visitFunctionCall(ExpressionAnalyzer.java:126)
	at com.facebook.presto.sql.tree.FunctionCall.accept(FunctionCall.java:67)
	at com.facebook.presto.sql.analyzer.ExpressionAnalyzer.analyze(ExpressionAnalyzer.java:123)
	at com.facebook.presto.sql.analyzer.Analyzer.analyzeExpression(Analyzer.java:73)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.analyzeSelect(TupleAnalyzer.java:661)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitQuerySpecification(TupleAnalyzer.java:261)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitQuerySpecification(TupleAnalyzer.java:96)
	at com.facebook.presto.sql.tree.QuerySpecification.accept(QuerySpecification.java:99)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.analyzer.StatementAnalyzer.visitQuery(StatementAnalyzer.java:439)
	at com.facebook.presto.sql.analyzer.StatementAnalyzer.visitQuery(StatementAnalyzer.java:86)
	at com.facebook.presto.sql.tree.Query.accept(Query.java:71)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.analyzer.Analyzer.analyze(Analyzer.java:50)
	at com.facebook.presto.util.LocalQueryRunner.createDrivers(LocalQueryRunner.java:214)
	at com.facebook.presto.util.LocalQueryRunner.createDrivers(LocalQueryRunner.java:197)
	at com.facebook.presto.util.LocalQueryRunner.execute(LocalQueryRunner.java:178)
	at com.facebook.presto.TestLocalQueries.computeActual(TestLocalQueries.java:68)
	at com.facebook.presto.AbstractTestQueries.testFunctionNotRegistered(AbstractTestQueries.java:2607)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctionNotRegistered -->
        <test-method status="PASS" signature="testGroupAggregationOverNestedGroupByAggregation()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupAggregationOverNestedGroupByAggregation" duration-ms="154" started-at="2014-05-07T06:57:08Z" finished-at="2014-05-07T06:57:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupAggregationOverNestedGroupByAggregation -->
        <test-method status="PASS" signature="testGroupByBetween()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupByBetween" duration-ms="412" started-at="2014-05-07T06:57:08Z" finished-at="2014-05-07T06:57:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByBetween -->
        <test-method status="PASS" signature="testGroupByCase()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupByCase" duration-ms="361" started-at="2014-05-07T06:57:09Z" finished-at="2014-05-07T06:57:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByCase -->
        <test-method status="PASS" signature="testGroupByCaseNoElse()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupByCaseNoElse" duration-ms="233" started-at="2014-05-07T06:57:09Z" finished-at="2014-05-07T06:57:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByCaseNoElse -->
        <test-method status="PASS" signature="testGroupByCast()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupByCast" duration-ms="387" started-at="2014-05-07T06:57:09Z" finished-at="2014-05-07T06:57:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByCast -->
        <test-method status="PASS" signature="testGroupByCoalesce()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupByCoalesce" duration-ms="459" started-at="2014-05-07T06:57:10Z" finished-at="2014-05-07T06:57:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByCoalesce -->
        <test-method status="PASS" signature="testGroupByCount()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupByCount" duration-ms="46" started-at="2014-05-07T06:57:10Z" finished-at="2014-05-07T06:57:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByCount -->
        <test-method status="PASS" signature="testGroupByExtract()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupByExtract" duration-ms="620" started-at="2014-05-07T06:57:10Z" finished-at="2014-05-07T06:57:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByExtract -->
        <test-method status="PASS" signature="testGroupByIf()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupByIf" duration-ms="112" started-at="2014-05-07T06:57:11Z" finished-at="2014-05-07T06:57:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByIf -->
        <test-method status="PASS" signature="testGroupByKeyPredicatePushdown()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupByKeyPredicatePushdown" duration-ms="590" started-at="2014-05-07T06:57:11Z" finished-at="2014-05-07T06:57:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByKeyPredicatePushdown -->
        <test-method status="PASS" signature="testGroupByMultipleFields()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupByMultipleFields" duration-ms="98" started-at="2014-05-07T06:57:12Z" finished-at="2014-05-07T06:57:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByMultipleFields -->
        <test-method status="PASS" signature="testGroupByMultipleFieldsWithPredicateOnAggregationArgument()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupByMultipleFieldsWithPredicateOnAggregationArgument" duration-ms="120" started-at="2014-05-07T06:57:12Z" finished-at="2014-05-07T06:57:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByMultipleFieldsWithPredicateOnAggregationArgument -->
        <test-method status="PASS" signature="testGroupByNoAggregations()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupByNoAggregations" duration-ms="46" started-at="2014-05-07T06:57:12Z" finished-at="2014-05-07T06:57:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByNoAggregations -->
        <test-method status="PASS" signature="testGroupByNullIf()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupByNullIf" duration-ms="479" started-at="2014-05-07T06:57:12Z" finished-at="2014-05-07T06:57:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByNullIf -->
        <test-method status="PASS" signature="testGroupByOrderByLimit()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupByOrderByLimit" duration-ms="88" started-at="2014-05-07T06:57:12Z" finished-at="2014-05-07T06:57:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByOrderByLimit -->
        <test-method status="PASS" signature="testGroupByOrdinal()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupByOrdinal" duration-ms="80" started-at="2014-05-07T06:57:12Z" finished-at="2014-05-07T06:57:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByOrdinal -->
        <test-method status="PASS" signature="testGroupByRepeatedField()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupByRepeatedField" duration-ms="88" started-at="2014-05-07T06:57:12Z" finished-at="2014-05-07T06:57:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByRepeatedField -->
        <test-method status="PASS" signature="testGroupByRepeatedField2()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupByRepeatedField2" duration-ms="50" started-at="2014-05-07T06:57:13Z" finished-at="2014-05-07T06:57:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByRepeatedField2 -->
        <test-method status="PASS" signature="testGroupBySearchedCase()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupBySearchedCase" duration-ms="107" started-at="2014-05-07T06:57:13Z" finished-at="2014-05-07T06:57:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupBySearchedCase -->
        <test-method status="PASS" signature="testGroupBySearchedCaseNoElse()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupBySearchedCaseNoElse" duration-ms="158" started-at="2014-05-07T06:57:13Z" finished-at="2014-05-07T06:57:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupBySearchedCaseNoElse -->
        <test-method status="PASS" signature="testGroupBySum()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupBySum" duration-ms="81" started-at="2014-05-07T06:57:13Z" finished-at="2014-05-07T06:57:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupBySum -->
        <test-method status="PASS" signature="testGroupByWithAlias()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupByWithAlias" duration-ms="59" started-at="2014-05-07T06:57:13Z" finished-at="2014-05-07T06:57:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByWithAlias -->
        <test-method status="PASS" signature="testGroupByWithWildcard()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupByWithWildcard" duration-ms="80" started-at="2014-05-07T06:57:13Z" finished-at="2014-05-07T06:57:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByWithWildcard -->
        <test-method status="PASS" signature="testGroupByWithoutAggregation()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testGroupByWithoutAggregation" duration-ms="49" started-at="2014-05-07T06:57:13Z" finished-at="2014-05-07T06:57:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupByWithoutAggregation -->
        <test-method status="PASS" signature="testHaving()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testHaving" duration-ms="98" started-at="2014-05-07T06:57:13Z" finished-at="2014-05-07T06:57:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHaving -->
        <test-method status="PASS" signature="testHaving2()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testHaving2" duration-ms="93" started-at="2014-05-07T06:57:13Z" finished-at="2014-05-07T06:57:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHaving2 -->
        <test-method status="PASS" signature="testHaving3()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testHaving3" duration-ms="139" started-at="2014-05-07T06:57:13Z" finished-at="2014-05-07T06:57:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHaving3 -->
        <test-method status="PASS" signature="testHistogram()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testHistogram" duration-ms="270" started-at="2014-05-07T06:57:13Z" finished-at="2014-05-07T06:57:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHistogram -->
        <test-method status="PASS" signature="testIfExpression()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testIfExpression" duration-ms="501" started-at="2014-05-07T06:57:14Z" finished-at="2014-05-07T06:57:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfExpression -->
        <test-method status="PASS" signature="testIn()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testIn" duration-ms="212" started-at="2014-05-07T06:57:14Z" finished-at="2014-05-07T06:57:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIn -->
        <test-method status="PASS" signature="testInlineView()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testInlineView" duration-ms="112" started-at="2014-05-07T06:57:14Z" finished-at="2014-05-07T06:57:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInlineView -->
        <test-method status="PASS" signature="testInlineViewWithProjections()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testInlineViewWithProjections" duration-ms="149" started-at="2014-05-07T06:57:15Z" finished-at="2014-05-07T06:57:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInlineViewWithProjections -->
        <test-method status="PASS" signature="testInvalidColumn()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testInvalidColumn" duration-ms="2" started-at="2014-05-07T06:57:15Z" finished-at="2014-05-07T06:57:15Z">
          <exception class="com.facebook.presto.sql.analyzer.SemanticException">
            <message>
              <![CDATA[Column 'orderkey_1' cannot be resolved]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.facebook.presto.sql.analyzer.SemanticException: Column 'orderkey_1' cannot be resolved
	at com.facebook.presto.sql.analyzer.ExpressionAnalyzer$Visitor.visitQualifiedNameReference(ExpressionAnalyzer.java:156)
	at com.facebook.presto.sql.analyzer.ExpressionAnalyzer$Visitor.visitQualifiedNameReference(ExpressionAnalyzer.java:126)
	at com.facebook.presto.sql.tree.QualifiedNameReference.accept(QualifiedNameReference.java:41)
	at com.facebook.presto.sql.analyzer.ExpressionAnalyzer.analyze(ExpressionAnalyzer.java:123)
	at com.facebook.presto.sql.analyzer.Analyzer.analyzeExpression(Analyzer.java:73)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.analyzeSelect(TupleAnalyzer.java:661)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitQuerySpecification(TupleAnalyzer.java:261)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitQuerySpecification(TupleAnalyzer.java:96)
	at com.facebook.presto.sql.tree.QuerySpecification.accept(QuerySpecification.java:99)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.analyzer.StatementAnalyzer.visitQuery(StatementAnalyzer.java:439)
	at com.facebook.presto.sql.analyzer.StatementAnalyzer.visitQuery(StatementAnalyzer.java:86)
	at com.facebook.presto.sql.tree.Query.accept(Query.java:71)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitTableSubquery(TupleAnalyzer.java:242)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitTableSubquery(TupleAnalyzer.java:96)
	at com.facebook.presto.sql.tree.TableSubquery.accept(TableSubquery.java:36)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitAliasedRelation(TupleAnalyzer.java:171)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitAliasedRelation(TupleAnalyzer.java:96)
	at com.facebook.presto.sql.tree.AliasedRelation.accept(AliasedRelation.java:57)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitJoin(TupleAnalyzer.java:321)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitJoin(TupleAnalyzer.java:96)
	at com.facebook.presto.sql.tree.Join.accept(Join.java:66)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.analyzeFrom(TupleAnalyzer.java:704)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitQuerySpecification(TupleAnalyzer.java:257)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitQuerySpecification(TupleAnalyzer.java:96)
	at com.facebook.presto.sql.tree.QuerySpecification.accept(QuerySpecification.java:99)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.analyzer.StatementAnalyzer.visitQuery(StatementAnalyzer.java:439)
	at com.facebook.presto.sql.analyzer.StatementAnalyzer.visitQuery(StatementAnalyzer.java:86)
	at com.facebook.presto.sql.tree.Query.accept(Query.java:71)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.analyzer.Analyzer.analyze(Analyzer.java:50)
	at com.facebook.presto.util.LocalQueryRunner.createDrivers(LocalQueryRunner.java:214)
	at com.facebook.presto.util.LocalQueryRunner.createDrivers(LocalQueryRunner.java:197)
	at com.facebook.presto.util.LocalQueryRunner.execute(LocalQueryRunner.java:178)
	at com.facebook.presto.TestLocalQueries.computeActual(TestLocalQueries.java:68)
	at com.facebook.presto.AbstractTestQueries.testInvalidColumn(AbstractTestQueries.java:1604)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- com.facebook.presto.sql.analyzer.SemanticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidColumn -->
        <test-method status="PASS" signature="testJoinAggregations()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testJoinAggregations" duration-ms="4454" started-at="2014-05-07T06:57:15Z" finished-at="2014-05-07T06:57:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinAggregations -->
        <test-method status="PASS" signature="testJoinDoubleClauseWithLeftOverlap()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testJoinDoubleClauseWithLeftOverlap" duration-ms="254" started-at="2014-05-07T06:57:19Z" finished-at="2014-05-07T06:57:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinDoubleClauseWithLeftOverlap -->
        <test-method status="PASS" signature="testJoinDoubleClauseWithRightOverlap()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testJoinDoubleClauseWithRightOverlap" duration-ms="465" started-at="2014-05-07T06:57:19Z" finished-at="2014-05-07T06:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinDoubleClauseWithRightOverlap -->
        <test-method status="PASS" signature="testJoinOnConstantExpression()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testJoinOnConstantExpression" duration-ms="1" started-at="2014-05-07T06:57:20Z" finished-at="2014-05-07T06:57:20Z">
          <exception class="com.facebook.presto.sql.analyzer.SemanticException">
            <message>
              <![CDATA[Joins on constant expressions (i.e., cross joins) not supported]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.facebook.presto.sql.analyzer.SemanticException: Joins on constant expressions (i.e., cross joins) not supported
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitJoin(TupleAnalyzer.java:368)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitJoin(TupleAnalyzer.java:96)
	at com.facebook.presto.sql.tree.Join.accept(Join.java:66)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.analyzeFrom(TupleAnalyzer.java:704)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitQuerySpecification(TupleAnalyzer.java:257)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitQuerySpecification(TupleAnalyzer.java:96)
	at com.facebook.presto.sql.tree.QuerySpecification.accept(QuerySpecification.java:99)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.analyzer.StatementAnalyzer.visitQuery(StatementAnalyzer.java:439)
	at com.facebook.presto.sql.analyzer.StatementAnalyzer.visitQuery(StatementAnalyzer.java:86)
	at com.facebook.presto.sql.tree.Query.accept(Query.java:71)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.analyzer.Analyzer.analyze(Analyzer.java:50)
	at com.facebook.presto.util.LocalQueryRunner.createDrivers(LocalQueryRunner.java:214)
	at com.facebook.presto.util.LocalQueryRunner.createDrivers(LocalQueryRunner.java:197)
	at com.facebook.presto.util.LocalQueryRunner.execute(LocalQueryRunner.java:178)
	at com.facebook.presto.TestLocalQueries.computeActual(TestLocalQueries.java:68)
	at com.facebook.presto.AbstractTestQueries.assertQuery(AbstractTestQueries.java:2707)
	at com.facebook.presto.AbstractTestQueries.assertQuery(AbstractTestQueries.java:2686)
	at com.facebook.presto.AbstractTestQueries.testJoinOnConstantExpression(AbstractTestQueries.java:797)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- com.facebook.presto.sql.analyzer.SemanticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinOnConstantExpression -->
        <test-method status="PASS" signature="testJoinOnMultipleFields()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testJoinOnMultipleFields" duration-ms="492" started-at="2014-05-07T06:57:20Z" finished-at="2014-05-07T06:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinOnMultipleFields -->
        <test-method status="PASS" signature="testJoinPredicateMoveAround()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testJoinPredicateMoveAround" duration-ms="2016" started-at="2014-05-07T06:57:20Z" finished-at="2014-05-07T06:57:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinPredicateMoveAround -->
        <test-method status="PASS" signature="testJoinPredicatePushdown()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testJoinPredicatePushdown" duration-ms="414" started-at="2014-05-07T06:57:22Z" finished-at="2014-05-07T06:57:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinPredicatePushdown -->
        <test-method status="PASS" signature="testJoinUnaliasedSubqueries()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testJoinUnaliasedSubqueries" duration-ms="262" started-at="2014-05-07T06:57:23Z" finished-at="2014-05-07T06:57:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinUnaliasedSubqueries -->
        <test-method status="PASS" signature="testJoinUsing()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testJoinUsing" duration-ms="219" started-at="2014-05-07T06:57:23Z" finished-at="2014-05-07T06:57:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinUsing -->
        <test-method status="PASS" signature="testJoinUsingMultipleFields()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testJoinUsingMultipleFields" duration-ms="438" started-at="2014-05-07T06:57:23Z" finished-at="2014-05-07T06:57:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinUsingMultipleFields -->
        <test-method status="PASS" signature="testJoinWithAlias()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testJoinWithAlias" duration-ms="5406" started-at="2014-05-07T06:57:24Z" finished-at="2014-05-07T06:57:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinWithAlias -->
        <test-method status="PASS" signature="testJoinWithComplexExpressions()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testJoinWithComplexExpressions" duration-ms="354" started-at="2014-05-07T06:57:29Z" finished-at="2014-05-07T06:57:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinWithComplexExpressions -->
        <test-method status="PASS" signature="testJoinWithComplexExpressions2()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testJoinWithComplexExpressions2" duration-ms="397" started-at="2014-05-07T06:57:30Z" finished-at="2014-05-07T06:57:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinWithComplexExpressions2 -->
        <test-method status="PASS" signature="testJoinWithComplexExpressions3()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testJoinWithComplexExpressions3" duration-ms="335" started-at="2014-05-07T06:57:30Z" finished-at="2014-05-07T06:57:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinWithComplexExpressions3 -->
        <test-method status="PASS" signature="testJoinWithConstantExpression()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testJoinWithConstantExpression" duration-ms="256" started-at="2014-05-07T06:57:30Z" finished-at="2014-05-07T06:57:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinWithConstantExpression -->
        <test-method status="PASS" signature="testJoinWithFullyPushedDownJoinClause()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testJoinWithFullyPushedDownJoinClause" duration-ms="262" started-at="2014-05-07T06:57:31Z" finished-at="2014-05-07T06:57:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinWithFullyPushedDownJoinClause -->
        <test-method status="PASS" signature="testJoinWithLeftConstantEquality()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testJoinWithLeftConstantEquality" duration-ms="245" started-at="2014-05-07T06:57:31Z" finished-at="2014-05-07T06:57:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinWithLeftConstantEquality -->
        <test-method status="PASS" signature="testJoinWithMultiFieldGroupBy()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testJoinWithMultiFieldGroupBy" duration-ms="443" started-at="2014-05-07T06:57:31Z" finished-at="2014-05-07T06:57:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinWithMultiFieldGroupBy -->
        <test-method status="PASS" signature="testJoinWithNonJoinExpression()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testJoinWithNonJoinExpression" duration-ms="341" started-at="2014-05-07T06:57:31Z" finished-at="2014-05-07T06:57:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinWithNonJoinExpression -->
        <test-method status="PASS" signature="testJoinWithNullValues()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testJoinWithNullValues" duration-ms="910" started-at="2014-05-07T06:57:32Z" finished-at="2014-05-07T06:57:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinWithNullValues -->
        <test-method status="PASS" signature="testJoinWithReversedComparison()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testJoinWithReversedComparison" duration-ms="262" started-at="2014-05-07T06:57:33Z" finished-at="2014-05-07T06:57:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinWithReversedComparison -->
        <test-method status="PASS" signature="testJoinWithRightConstantEquality()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testJoinWithRightConstantEquality" duration-ms="225" started-at="2014-05-07T06:57:33Z" finished-at="2014-05-07T06:57:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJoinWithRightConstantEquality -->
        <test-method status="PASS" signature="testLeftFilteredJoin()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testLeftFilteredJoin" duration-ms="1155" started-at="2014-05-07T06:57:33Z" finished-at="2014-05-07T06:57:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeftFilteredJoin -->
        <test-method status="PASS" signature="testLeftJoinAsInnerPredicatePushdown()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testLeftJoinAsInnerPredicatePushdown" duration-ms="615" started-at="2014-05-07T06:57:34Z" finished-at="2014-05-07T06:57:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeftJoinAsInnerPredicatePushdown -->
        <test-method status="PASS" signature="testLeftJoinDoubleClauseWithLeftOverlap()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testLeftJoinDoubleClauseWithLeftOverlap" duration-ms="393" started-at="2014-05-07T06:57:35Z" finished-at="2014-05-07T06:57:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeftJoinDoubleClauseWithLeftOverlap -->
        <test-method status="PASS" signature="testLeftJoinDoubleClauseWithRightOverlap()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testLeftJoinDoubleClauseWithRightOverlap" duration-ms="489" started-at="2014-05-07T06:57:35Z" finished-at="2014-05-07T06:57:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeftJoinDoubleClauseWithRightOverlap -->
        <test-method status="PASS" signature="testLeftJoinEqualityInference()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testLeftJoinEqualityInference" duration-ms="1278" started-at="2014-05-07T06:57:36Z" finished-at="2014-05-07T06:57:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeftJoinEqualityInference -->
        <test-method status="PASS" signature="testLeftJoinNormalizedToInner()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testLeftJoinNormalizedToInner" duration-ms="338" started-at="2014-05-07T06:57:37Z" finished-at="2014-05-07T06:57:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeftJoinNormalizedToInner -->
        <test-method status="PASS" signature="testLeftJoinPredicateMoveAround()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testLeftJoinPredicateMoveAround" duration-ms="2175" started-at="2014-05-07T06:57:37Z" finished-at="2014-05-07T06:57:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeftJoinPredicateMoveAround -->
        <test-method status="PASS" signature="testLeftJoinPredicatePushdownWithSelfEquality()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testLeftJoinPredicatePushdownWithSelfEquality" duration-ms="462" started-at="2014-05-07T06:57:40Z" finished-at="2014-05-07T06:57:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeftJoinPredicatePushdownWithSelfEquality -->
        <test-method status="PASS" signature="testLeftJoinWithLeftConstantEquality()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testLeftJoinWithLeftConstantEquality" duration-ms="225" started-at="2014-05-07T06:57:40Z" finished-at="2014-05-07T06:57:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeftJoinWithLeftConstantEquality -->
        <test-method status="PASS" signature="testLeftJoinWithNullValues()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testLeftJoinWithNullValues" duration-ms="682" started-at="2014-05-07T06:57:40Z" finished-at="2014-05-07T06:57:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeftJoinWithNullValues -->
        <test-method status="PASS" signature="testLeftJoinWithRightConstantEquality()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testLeftJoinWithRightConstantEquality" duration-ms="687" started-at="2014-05-07T06:57:41Z" finished-at="2014-05-07T06:57:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeftJoinWithRightConstantEquality -->
        <test-method status="PASS" signature="testLimit()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testLimit" duration-ms="26" started-at="2014-05-07T06:57:42Z" finished-at="2014-05-07T06:57:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLimit -->
        <test-method status="PASS" signature="testLimitInInlineView()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testLimitInInlineView" duration-ms="24" started-at="2014-05-07T06:57:42Z" finished-at="2014-05-07T06:57:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLimitInInlineView -->
        <test-method status="PASS" signature="testLimitPushDown()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testLimitPushDown" duration-ms="774" started-at="2014-05-07T06:57:42Z" finished-at="2014-05-07T06:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLimitPushDown -->
        <test-method status="PASS" signature="testLimitZero()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testLimitZero" duration-ms="36" started-at="2014-05-07T06:57:43Z" finished-at="2014-05-07T06:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLimitZero -->
        <test-method status="PASS" signature="testLogicalExplain()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testLogicalExplain" duration-ms="18" started-at="2014-05-07T06:57:43Z" finished-at="2014-05-07T06:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogicalExplain -->
        <test-method status="PASS" signature="testLogicalExplainGraphvizFormat()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testLogicalExplainGraphvizFormat" duration-ms="18" started-at="2014-05-07T06:57:43Z" finished-at="2014-05-07T06:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogicalExplainGraphvizFormat -->
        <test-method status="PASS" signature="testLogicalExplainTextFormat()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testLogicalExplainTextFormat" duration-ms="17" started-at="2014-05-07T06:57:43Z" finished-at="2014-05-07T06:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogicalExplainTextFormat -->
        <test-method status="PASS" signature="testMaxMinStringWithNulls()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testMaxMinStringWithNulls" duration-ms="166" started-at="2014-05-07T06:57:43Z" finished-at="2014-05-07T06:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxMinStringWithNulls -->
        <test-method status="PASS" signature="testMixedWildcards()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testMixedWildcards" duration-ms="724" started-at="2014-05-07T06:57:43Z" finished-at="2014-05-07T06:57:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedWildcards -->
        <test-method status="PASS" signature="testMultiColumnUnionAll()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testMultiColumnUnionAll" duration-ms="1002" started-at="2014-05-07T06:57:44Z" finished-at="2014-05-07T06:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiColumnUnionAll -->
        <test-method status="PASS" signature="testMultipleWildcards()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testMultipleWildcards" duration-ms="790" started-at="2014-05-07T06:57:45Z" finished-at="2014-05-07T06:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleWildcards -->
        <test-method status="PASS" signature="testNestedCount()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testNestedCount" duration-ms="211" started-at="2014-05-07T06:57:45Z" finished-at="2014-05-07T06:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNestedCount -->
        <test-method status="PASS" signature="testNoFrom()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testNoFrom" duration-ms="7" started-at="2014-05-07T06:57:46Z" finished-at="2014-05-07T06:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoFrom -->
        <test-method status="PASS" signature="testNodeRoster()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testNodeRoster" duration-ms="8" started-at="2014-05-07T06:57:46Z" finished-at="2014-05-07T06:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNodeRoster -->
        <test-method status="PASS" signature="testNonDeterministicAggregationPredicatePushdown()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testNonDeterministicAggregationPredicatePushdown" duration-ms="183" started-at="2014-05-07T06:57:46Z" finished-at="2014-05-07T06:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonDeterministicAggregationPredicatePushdown -->
        <test-method status="PASS" signature="testNonDeterministicJoinPredicatePushdown()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testNonDeterministicJoinPredicatePushdown" duration-ms="347" started-at="2014-05-07T06:57:46Z" finished-at="2014-05-07T06:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonDeterministicJoinPredicatePushdown -->
        <test-method status="PASS" signature="testNonDeterministicTableScanPredicatePushdown()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testNonDeterministicTableScanPredicatePushdown" duration-ms="26" started-at="2014-05-07T06:57:46Z" finished-at="2014-05-07T06:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonDeterministicTableScanPredicatePushdown -->
        <test-method status="PASS" signature="testOrderBy()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testOrderBy" duration-ms="80" started-at="2014-05-07T06:57:46Z" finished-at="2014-05-07T06:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderBy -->
        <test-method status="PASS" signature="testOrderBy2()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testOrderBy2" duration-ms="120" started-at="2014-05-07T06:57:46Z" finished-at="2014-05-07T06:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderBy2 -->
        <test-method status="PASS" signature="testOrderByAlias()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testOrderByAlias" duration-ms="69" started-at="2014-05-07T06:57:46Z" finished-at="2014-05-07T06:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderByAlias -->
        <test-method status="PASS" signature="testOrderByAliasWithSameNameAsUnselectedColumn()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testOrderByAliasWithSameNameAsUnselectedColumn" duration-ms="69" started-at="2014-05-07T06:57:46Z" finished-at="2014-05-07T06:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderByAliasWithSameNameAsUnselectedColumn -->
        <test-method status="PASS" signature="testOrderByExpressionWithLimit()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testOrderByExpressionWithLimit" duration-ms="204" started-at="2014-05-07T06:57:46Z" finished-at="2014-05-07T06:57:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderByExpressionWithLimit -->
        <test-method status="PASS" signature="testOrderByLimit()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testOrderByLimit" duration-ms="124" started-at="2014-05-07T06:57:47Z" finished-at="2014-05-07T06:57:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderByLimit -->
        <test-method status="PASS" signature="testOrderByMultipleFields()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testOrderByMultipleFields" duration-ms="149" started-at="2014-05-07T06:57:47Z" finished-at="2014-05-07T06:57:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderByMultipleFields -->
        <test-method status="PASS" signature="testOrderByOrdinal()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testOrderByOrdinal" duration-ms="169" started-at="2014-05-07T06:57:47Z" finished-at="2014-05-07T06:57:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderByOrdinal -->
        <test-method status="PASS" signature="testOrderByOrdinalWithWildcard()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testOrderByOrdinalWithWildcard" duration-ms="565" started-at="2014-05-07T06:57:47Z" finished-at="2014-05-07T06:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderByOrdinalWithWildcard -->
        <test-method status="PASS" signature="testOrderByWindowFunction()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testOrderByWindowFunction" duration-ms="44" started-at="2014-05-07T06:57:48Z" finished-at="2014-05-07T06:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderByWindowFunction -->
        <test-method status="PASS" signature="testOrderLimitCompaction()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testOrderLimitCompaction" duration-ms="357" started-at="2014-05-07T06:57:48Z" finished-at="2014-05-07T06:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderLimitCompaction -->
        <test-method status="PASS" signature="testPlainLeftJoinPredicatePushdown()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testPlainLeftJoinPredicatePushdown" duration-ms="462" started-at="2014-05-07T06:57:48Z" finished-at="2014-05-07T06:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPlainLeftJoinPredicatePushdown -->
        <test-method status="PASS" signature="testPlainRightJoinPredicatePushdown()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testPlainRightJoinPredicatePushdown" duration-ms="467" started-at="2014-05-07T06:57:48Z" finished-at="2014-05-07T06:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPlainRightJoinPredicatePushdown -->
        <test-method status="PASS" signature="testPredicatePushdown()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testPredicatePushdown" duration-ms="285" started-at="2014-05-07T06:57:49Z" finished-at="2014-05-07T06:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPredicatePushdown -->
        <test-method status="PASS" signature="testPredicatePushdownJoinEqualityGroups()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testPredicatePushdownJoinEqualityGroups" duration-ms="146" started-at="2014-05-07T06:57:49Z" finished-at="2014-05-07T06:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPredicatePushdownJoinEqualityGroups -->
        <test-method status="PASS" signature="testProbeFilteredLeftJoin()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testProbeFilteredLeftJoin" duration-ms="4358" started-at="2014-05-07T06:57:49Z" finished-at="2014-05-07T06:57:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProbeFilteredLeftJoin -->
        <test-method status="PASS" signature="testProbeFilteredRightJoin()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testProbeFilteredRightJoin" duration-ms="1203" started-at="2014-05-07T06:57:54Z" finished-at="2014-05-07T06:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProbeFilteredRightJoin -->
        <test-method status="PASS" signature="testQualifiedWildcard()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testQualifiedWildcard" duration-ms="538" started-at="2014-05-07T06:57:55Z" finished-at="2014-05-07T06:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testQualifiedWildcard -->
        <test-method status="PASS" signature="testQualifiedWildcardFromAlias()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testQualifiedWildcardFromAlias" duration-ms="521" started-at="2014-05-07T06:57:55Z" finished-at="2014-05-07T06:57:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testQualifiedWildcardFromAlias -->
        <test-method status="PASS" signature="testQualifiedWildcardFromInlineView()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testQualifiedWildcardFromInlineView" duration-ms="119" started-at="2014-05-07T06:57:56Z" finished-at="2014-05-07T06:57:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testQualifiedWildcardFromInlineView -->
        <test-method status="PASS" signature="testQualifiedWildcardFromJoin()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testQualifiedWildcardFromJoin" duration-ms="758" started-at="2014-05-07T06:57:56Z" finished-at="2014-05-07T06:57:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testQualifiedWildcardFromJoin -->
        <test-method status="PASS" signature="testQuotedIdentifiers()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testQuotedIdentifiers" duration-ms="115" started-at="2014-05-07T06:57:57Z" finished-at="2014-05-07T06:57:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testQuotedIdentifiers -->
        <test-method status="PASS" signature="testReferenceToWithQueryInFromClause()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testReferenceToWithQueryInFromClause" duration-ms="526" started-at="2014-05-07T06:57:57Z" finished-at="2014-05-07T06:57:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReferenceToWithQueryInFromClause -->
        <test-method status="PASS" signature="testReorderOutputsOfGroupByAggregation()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testReorderOutputsOfGroupByAggregation" duration-ms="114" started-at="2014-05-07T06:57:58Z" finished-at="2014-05-07T06:57:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReorderOutputsOfGroupByAggregation -->
        <test-method status="PASS" signature="testRepeatedAggregations()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testRepeatedAggregations" duration-ms="46" started-at="2014-05-07T06:57:58Z" finished-at="2014-05-07T06:57:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRepeatedAggregations -->
        <test-method status="PASS" signature="testRepeatedOutputs()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testRepeatedOutputs" duration-ms="103" started-at="2014-05-07T06:57:58Z" finished-at="2014-05-07T06:57:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRepeatedOutputs -->
        <test-method status="PASS" signature="testRightFilteredJoin()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testRightFilteredJoin" duration-ms="1135" started-at="2014-05-07T06:57:58Z" finished-at="2014-05-07T06:57:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRightFilteredJoin -->
        <test-method status="PASS" signature="testRightJoinAsInnerPredicatePushdown()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testRightJoinAsInnerPredicatePushdown" duration-ms="547" started-at="2014-05-07T06:57:59Z" finished-at="2014-05-07T06:57:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRightJoinAsInnerPredicatePushdown -->
        <test-method status="PASS" signature="testRightJoinDoubleClauseWithLeftOverlap()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testRightJoinDoubleClauseWithLeftOverlap" duration-ms="292" started-at="2014-05-07T06:57:59Z" finished-at="2014-05-07T06:58:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRightJoinDoubleClauseWithLeftOverlap -->
        <test-method status="PASS" signature="testRightJoinDoubleClauseWithRightOverlap()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testRightJoinDoubleClauseWithRightOverlap" duration-ms="426" started-at="2014-05-07T06:58:00Z" finished-at="2014-05-07T06:58:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRightJoinDoubleClauseWithRightOverlap -->
        <test-method status="PASS" signature="testRightJoinEqualityInference()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testRightJoinEqualityInference" duration-ms="1296" started-at="2014-05-07T06:58:00Z" finished-at="2014-05-07T06:58:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRightJoinEqualityInference -->
        <test-method status="PASS" signature="testRightJoinNormalizedToInner()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testRightJoinNormalizedToInner" duration-ms="263" started-at="2014-05-07T06:58:01Z" finished-at="2014-05-07T06:58:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRightJoinNormalizedToInner -->
        <test-method status="PASS" signature="testRightJoinPredicateMoveAround()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testRightJoinPredicateMoveAround" duration-ms="2218" started-at="2014-05-07T06:58:02Z" finished-at="2014-05-07T06:58:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRightJoinPredicateMoveAround -->
        <test-method status="PASS" signature="testRightJoinPredicatePushdownWithSelfEquality()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testRightJoinPredicatePushdownWithSelfEquality" duration-ms="457" started-at="2014-05-07T06:58:04Z" finished-at="2014-05-07T06:58:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRightJoinPredicatePushdownWithSelfEquality -->
        <test-method status="PASS" signature="testRightJoinWithLeftConstantEquality()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testRightJoinWithLeftConstantEquality" duration-ms="971" started-at="2014-05-07T06:58:04Z" finished-at="2014-05-07T06:58:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRightJoinWithLeftConstantEquality -->
        <test-method status="PASS" signature="testRightJoinWithNullValues()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testRightJoinWithNullValues" duration-ms="897" started-at="2014-05-07T06:58:05Z" finished-at="2014-05-07T06:58:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRightJoinWithNullValues -->
        <test-method status="PASS" signature="testRightJoinWithRightConstantEquality()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testRightJoinWithRightConstantEquality" duration-ms="266" started-at="2014-05-07T06:58:06Z" finished-at="2014-05-07T06:58:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRightJoinWithRightConstantEquality -->
        <test-method status="PASS" signature="testSameInputToAggregates()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSameInputToAggregates" duration-ms="57" started-at="2014-05-07T06:58:07Z" finished-at="2014-05-07T06:58:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSameInputToAggregates -->
        <test-method status="PASS" signature="testScalarFunction()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testScalarFunction" duration-ms="26" started-at="2014-05-07T06:58:07Z" finished-at="2014-05-07T06:58:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScalarFunction -->
        <test-method status="PASS" signature="testSelectOnlyUnion()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSelectOnlyUnion" duration-ms="12" started-at="2014-05-07T06:58:07Z" finished-at="2014-05-07T06:58:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectOnlyUnion -->
        <test-method status="PASS" signature="testSelectWithComparison()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSelectWithComparison" duration-ms="619" started-at="2014-05-07T06:58:07Z" finished-at="2014-05-07T06:58:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectWithComparison -->
        <test-method status="PASS" signature="testSelfJoin()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSelfJoin" duration-ms="102" started-at="2014-05-07T06:58:07Z" finished-at="2014-05-07T06:58:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelfJoin -->
        <test-method status="PASS" signature="testSemiJoin()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSemiJoin" duration-ms="2698" started-at="2014-05-07T06:58:07Z" finished-at="2014-05-07T06:58:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSemiJoin -->
        <test-method status="PASS" signature="testSemiJoinLimitPushDown()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSemiJoinLimitPushDown" duration-ms="240" started-at="2014-05-07T06:58:10Z" finished-at="2014-05-07T06:58:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSemiJoinLimitPushDown -->
        <test-method status="PASS" signature="testSemiJoinNullHandling()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSemiJoinNullHandling" duration-ms="891" started-at="2014-05-07T06:58:10Z" finished-at="2014-05-07T06:58:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSemiJoinNullHandling -->
        <test-method status="PASS" signature="testSemiJoinPredicateMoveAround()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSemiJoinPredicateMoveAround" duration-ms="559" started-at="2014-05-07T06:58:11Z" finished-at="2014-05-07T06:58:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSemiJoinPredicateMoveAround -->
        <test-method status="PASS" signature="testShowColumns()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testShowColumns" duration-ms="22" started-at="2014-05-07T06:58:12Z" finished-at="2014-05-07T06:58:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShowColumns -->
        <test-method status="PASS" signature="testShowFunctions()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testShowFunctions" duration-ms="13" started-at="2014-05-07T06:58:12Z" finished-at="2014-05-07T06:58:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShowFunctions -->
        <test-method status="PASS" signature="testShowPartitions()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testShowPartitions" duration-ms="10" started-at="2014-05-07T06:58:12Z" finished-at="2014-05-07T06:58:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShowPartitions -->
        <test-method status="PASS" signature="testShowSchemas()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testShowSchemas" duration-ms="4" started-at="2014-05-07T06:58:12Z" finished-at="2014-05-07T06:58:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShowSchemas -->
        <test-method status="PASS" signature="testShowTables()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testShowTables" duration-ms="9" started-at="2014-05-07T06:58:12Z" finished-at="2014-05-07T06:58:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShowTables -->
        <test-method status="PASS" signature="testShowTablesFrom()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testShowTablesFrom" duration-ms="16" started-at="2014-05-07T06:58:12Z" finished-at="2014-05-07T06:58:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShowTablesFrom -->
        <test-method status="PASS" signature="testShowTablesLike()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testShowTablesLike" duration-ms="89" started-at="2014-05-07T06:58:12Z" finished-at="2014-05-07T06:58:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShowTablesLike -->
        <test-method status="PASS" signature="testSimpleJoin()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSimpleJoin" duration-ms="253" started-at="2014-05-07T06:58:12Z" finished-at="2014-05-07T06:58:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleJoin -->
        <test-method status="PASS" signature="testSimpleJoinWithLeftConstantEquality()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSimpleJoinWithLeftConstantEquality" duration-ms="204" started-at="2014-05-07T06:58:12Z" finished-at="2014-05-07T06:58:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleJoinWithLeftConstantEquality -->
        <test-method status="PASS" signature="testSimpleJoinWithRightConstantEquality()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSimpleJoinWithRightConstantEquality" duration-ms="205" started-at="2014-05-07T06:58:12Z" finished-at="2014-05-07T06:58:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleJoinWithRightConstantEquality -->
        <test-method status="PASS" signature="testSimpleLeftJoin()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSimpleLeftJoin" duration-ms="588" started-at="2014-05-07T06:58:13Z" finished-at="2014-05-07T06:58:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleLeftJoin -->
        <test-method status="PASS" signature="testSimpleLeftJoinWithLeftConstantEquality()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSimpleLeftJoinWithLeftConstantEquality" duration-ms="342" started-at="2014-05-07T06:58:13Z" finished-at="2014-05-07T06:58:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleLeftJoinWithLeftConstantEquality -->
        <test-method status="PASS" signature="testSimpleLeftJoinWithRightConstantEquality()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSimpleLeftJoinWithRightConstantEquality" duration-ms="319" started-at="2014-05-07T06:58:14Z" finished-at="2014-05-07T06:58:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleLeftJoinWithRightConstantEquality -->
        <test-method status="PASS" signature="testSimpleRightJoin()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSimpleRightJoin" duration-ms="515" started-at="2014-05-07T06:58:14Z" finished-at="2014-05-07T06:58:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleRightJoin -->
        <test-method status="PASS" signature="testSimpleRightJoinWithLeftConstantEquality()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSimpleRightJoinWithLeftConstantEquality" duration-ms="259" started-at="2014-05-07T06:58:14Z" finished-at="2014-05-07T06:58:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleRightJoinWithLeftConstantEquality -->
        <test-method status="PASS" signature="testSimpleRightJoinWithRightConstantEquality()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSimpleRightJoinWithRightConstantEquality" duration-ms="262" started-at="2014-05-07T06:58:15Z" finished-at="2014-05-07T06:58:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleRightJoinWithRightConstantEquality -->
        <test-method status="PASS" signature="testSpecialFloatingPointValues()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSpecialFloatingPointValues" duration-ms="8" started-at="2014-05-07T06:58:15Z" finished-at="2014-05-07T06:58:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSpecialFloatingPointValues -->
        <test-method status="PASS" signature="testStdDev()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testStdDev" duration-ms="390" started-at="2014-05-07T06:58:15Z" finished-at="2014-05-07T06:58:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStdDev -->
        <test-method status="PASS" signature="testStdDevPop()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testStdDevPop" duration-ms="335" started-at="2014-05-07T06:58:15Z" finished-at="2014-05-07T06:58:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStdDevPop -->
        <test-method status="PASS" signature="testSubqueryBody()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSubqueryBody" duration-ms="116" started-at="2014-05-07T06:58:16Z" finished-at="2014-05-07T06:58:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubqueryBody -->
        <test-method status="PASS" signature="testSubqueryBodyDoubleOrderby()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSubqueryBodyDoubleOrderby" duration-ms="132" started-at="2014-05-07T06:58:16Z" finished-at="2014-05-07T06:58:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubqueryBodyDoubleOrderby -->
        <test-method status="PASS" signature="testSubqueryBodyOrderLimit()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSubqueryBodyOrderLimit" duration-ms="72" started-at="2014-05-07T06:58:16Z" finished-at="2014-05-07T06:58:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubqueryBodyOrderLimit -->
        <test-method status="PASS" signature="testSubqueryBodyProjectedOrderby()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSubqueryBodyProjectedOrderby" duration-ms="152" started-at="2014-05-07T06:58:16Z" finished-at="2014-05-07T06:58:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubqueryBodyProjectedOrderby -->
        <test-method status="PASS" signature="testSubqueryUnion()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSubqueryUnion" duration-ms="178" started-at="2014-05-07T06:58:16Z" finished-at="2014-05-07T06:58:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubqueryUnion -->
        <test-method status="PASS" signature="testSumOfNulls()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testSumOfNulls" duration-ms="56" started-at="2014-05-07T06:58:16Z" finished-at="2014-05-07T06:58:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSumOfNulls -->
        <test-method status="PASS" signature="testTableAsSubquery()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testTableAsSubquery" duration-ms="536" started-at="2014-05-07T06:58:16Z" finished-at="2014-05-07T06:58:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTableAsSubquery -->
        <test-method status="PASS" signature="testTableQuery()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testTableQuery" duration-ms="528" started-at="2014-05-07T06:58:17Z" finished-at="2014-05-07T06:58:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTableQuery -->
        <test-method status="PASS" signature="testTableQueryInUnion()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testTableQueryInUnion" duration-ms="834" started-at="2014-05-07T06:58:17Z" finished-at="2014-05-07T06:58:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTableQueryInUnion -->
        <test-method status="PASS" signature="testTableQueryOrderLimit()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testTableQueryOrderLimit" duration-ms="304" started-at="2014-05-07T06:58:18Z" finished-at="2014-05-07T06:58:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTableQueryOrderLimit -->
        <test-method status="PASS" signature="testTableSampleBernoulli()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testTableSampleBernoulli" duration-ms="4061" started-at="2014-05-07T06:58:19Z" finished-at="2014-05-07T06:58:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTableSampleBernoulli -->
        <test-method status="PASS" signature="testTableSampleBernoulliBoundaryValues()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testTableSampleBernoulliBoundaryValues" duration-ms="19260" started-at="2014-05-07T06:58:23Z" finished-at="2014-05-07T06:58:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTableSampleBernoulliBoundaryValues -->
        <test-method status="PASS" signature="testTopNByMultipleFields()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testTopNByMultipleFields" duration-ms="981" started-at="2014-05-07T06:58:42Z" finished-at="2014-05-07T06:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTopNByMultipleFields -->
        <test-method status="PASS" signature="testTrivialNonDeterministicPredicatePushdown()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testTrivialNonDeterministicPredicatePushdown" duration-ms="8" started-at="2014-05-07T06:58:43Z" finished-at="2014-05-07T06:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrivialNonDeterministicPredicatePushdown -->
        <test-method status="PASS" signature="testTypeMismatch()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testTypeMismatch" duration-ms="1" started-at="2014-05-07T06:58:43Z" finished-at="2014-05-07T06:58:43Z">
          <exception class="com.facebook.presto.sql.analyzer.SemanticException">
            <message>
              <![CDATA[Types are not comparable with '<>': bigint vs varchar]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.facebook.presto.sql.analyzer.SemanticException: Types are not comparable with '<>': bigint vs varchar
	at com.facebook.presto.sql.analyzer.ExpressionAnalyzer$Visitor.visitComparisonExpression(ExpressionAnalyzer.java:205)
	at com.facebook.presto.sql.analyzer.ExpressionAnalyzer$Visitor.visitComparisonExpression(ExpressionAnalyzer.java:126)
	at com.facebook.presto.sql.tree.ComparisonExpression.accept(ComparisonExpression.java:78)
	at com.facebook.presto.sql.analyzer.ExpressionAnalyzer.analyze(ExpressionAnalyzer.java:123)
	at com.facebook.presto.sql.analyzer.Analyzer.analyzeExpression(Analyzer.java:73)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.analyzeSelect(TupleAnalyzer.java:661)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitQuerySpecification(TupleAnalyzer.java:261)
	at com.facebook.presto.sql.analyzer.TupleAnalyzer.visitQuerySpecification(TupleAnalyzer.java:96)
	at com.facebook.presto.sql.tree.QuerySpecification.accept(QuerySpecification.java:99)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.analyzer.StatementAnalyzer.visitQuery(StatementAnalyzer.java:439)
	at com.facebook.presto.sql.analyzer.StatementAnalyzer.visitQuery(StatementAnalyzer.java:86)
	at com.facebook.presto.sql.tree.Query.accept(Query.java:71)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.analyzer.Analyzer.analyze(Analyzer.java:50)
	at com.facebook.presto.util.LocalQueryRunner.createDrivers(LocalQueryRunner.java:214)
	at com.facebook.presto.util.LocalQueryRunner.createDrivers(LocalQueryRunner.java:197)
	at com.facebook.presto.util.LocalQueryRunner.execute(LocalQueryRunner.java:178)
	at com.facebook.presto.TestLocalQueries.computeActual(TestLocalQueries.java:68)
	at com.facebook.presto.AbstractTestQueries.testTypeMismatch(AbstractTestQueries.java:2613)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- com.facebook.presto.sql.analyzer.SemanticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeMismatch -->
        <test-method status="PASS" signature="testUnaliasSymbolReferencesWithUnion()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testUnaliasSymbolReferencesWithUnion" duration-ms="13" started-at="2014-05-07T06:58:43Z" finished-at="2014-05-07T06:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnaliasSymbolReferencesWithUnion -->
        <test-method status="PASS" signature="testUnaliasedSubqueries()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testUnaliasedSubqueries" duration-ms="63" started-at="2014-05-07T06:58:43Z" finished-at="2014-05-07T06:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnaliasedSubqueries -->
        <test-method status="PASS" signature="testUnaliasedSubqueries1()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testUnaliasedSubqueries1" duration-ms="64" started-at="2014-05-07T06:58:43Z" finished-at="2014-05-07T06:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnaliasedSubqueries1 -->
        <test-method status="PASS" signature="testUnion()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testUnion" duration-ms="120" started-at="2014-05-07T06:58:43Z" finished-at="2014-05-07T06:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnion -->
        <test-method status="PASS" signature="testUnionAll()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testUnionAll" duration-ms="126" started-at="2014-05-07T06:58:43Z" finished-at="2014-05-07T06:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnionAll -->
        <test-method status="PASS" signature="testUnionDistinct()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testUnionDistinct" duration-ms="121" started-at="2014-05-07T06:58:43Z" finished-at="2014-05-07T06:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnionDistinct -->
        <test-method status="PASS" signature="testVariance()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testVariance" duration-ms="332" started-at="2014-05-07T06:58:43Z" finished-at="2014-05-07T06:58:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVariance -->
        <test-method status="PASS" signature="testVariancePop()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testVariancePop" duration-ms="328" started-at="2014-05-07T06:58:44Z" finished-at="2014-05-07T06:58:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVariancePop -->
        <test-method status="PASS" signature="testWhereNull()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testWhereNull" duration-ms="68" started-at="2014-05-07T06:58:44Z" finished-at="2014-05-07T06:58:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWhereNull -->
        <test-method status="PASS" signature="testWildcard()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testWildcard" duration-ms="562" started-at="2014-05-07T06:58:44Z" finished-at="2014-05-07T06:58:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWildcard -->
        <test-method status="PASS" signature="testWildcardFromJoin()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testWildcardFromJoin" duration-ms="854" started-at="2014-05-07T06:58:45Z" finished-at="2014-05-07T06:58:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWildcardFromJoin -->
        <test-method status="PASS" signature="testWildcardFromSubquery()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testWildcardFromSubquery" duration-ms="65" started-at="2014-05-07T06:58:46Z" finished-at="2014-05-07T06:58:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWildcardFromSubquery -->
        <test-method status="PASS" signature="testWindowFunctionsExpressions()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testWindowFunctionsExpressions" duration-ms="159" started-at="2014-05-07T06:58:46Z" finished-at="2014-05-07T06:58:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWindowFunctionsExpressions -->
        <test-method status="PASS" signature="testWindowFunctionsFromAggregate()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testWindowFunctionsFromAggregate" duration-ms="174" started-at="2014-05-07T06:58:46Z" finished-at="2014-05-07T06:58:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWindowFunctionsFromAggregate -->
        <test-method status="PASS" signature="testWith()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testWith" duration-ms="619" started-at="2014-05-07T06:58:46Z" finished-at="2014-05-07T06:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWith -->
        <test-method status="PASS" signature="testWithAliased()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testWithAliased" duration-ms="508" started-at="2014-05-07T06:58:47Z" finished-at="2014-05-07T06:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithAliased -->
        <test-method status="PASS" signature="testWithChaining()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testWithChaining" duration-ms="84" started-at="2014-05-07T06:58:47Z" finished-at="2014-05-07T06:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithChaining -->
        <test-method status="PASS" signature="testWithHiding()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testWithHiding" duration-ms="75" started-at="2014-05-07T06:58:47Z" finished-at="2014-05-07T06:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithHiding -->
        <test-method status="PASS" signature="testWithNestedSubqueries()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testWithNestedSubqueries" duration-ms="76" started-at="2014-05-07T06:58:47Z" finished-at="2014-05-07T06:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithNestedSubqueries -->
        <test-method status="PASS" signature="testWithQualifiedPrefix()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testWithQualifiedPrefix" duration-ms="35" started-at="2014-05-07T06:58:47Z" finished-at="2014-05-07T06:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithQualifiedPrefix -->
        <test-method status="PASS" signature="testWithRecursive()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testWithRecursive" duration-ms="2" started-at="2014-05-07T06:58:47Z" finished-at="2014-05-07T06:58:47Z">
          <exception class="com.facebook.presto.sql.analyzer.SemanticException">
            <message>
              <![CDATA[Recursive WITH queries are not supported]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.facebook.presto.sql.analyzer.SemanticException: Recursive WITH queries are not supported
	at com.facebook.presto.sql.analyzer.StatementAnalyzer.analyzeWith(StatementAnalyzer.java:468)
	at com.facebook.presto.sql.analyzer.StatementAnalyzer.visitQuery(StatementAnalyzer.java:436)
	at com.facebook.presto.sql.analyzer.StatementAnalyzer.visitQuery(StatementAnalyzer.java:86)
	at com.facebook.presto.sql.tree.Query.accept(Query.java:71)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.analyzer.Analyzer.analyze(Analyzer.java:50)
	at com.facebook.presto.util.LocalQueryRunner.createDrivers(LocalQueryRunner.java:214)
	at com.facebook.presto.util.LocalQueryRunner.createDrivers(LocalQueryRunner.java:197)
	at com.facebook.presto.util.LocalQueryRunner.execute(LocalQueryRunner.java:178)
	at com.facebook.presto.TestLocalQueries.computeActual(TestLocalQueries.java:68)
	at com.facebook.presto.AbstractTestQueries.testWithRecursive(AbstractTestQueries.java:1750)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- com.facebook.presto.sql.analyzer.SemanticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithRecursive -->
        <test-method status="PASS" signature="testWithSelfJoin()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="testWithSelfJoin" duration-ms="130" started-at="2014-05-07T06:58:47Z" finished-at="2014-05-07T06:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithSelfJoin -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T06:58:47Z" finished-at="2014-05-07T06:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="cleanupDatabase()[pri:0, instance:com.facebook.presto.TestLocalQueries@4bf7a31f]" name="cleanupDatabase" is-config="true" duration-ms="1" started-at="2014-05-07T06:58:47Z" finished-at="2014-05-07T06:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanupDatabase -->
      </class> <!-- com.facebook.presto.TestLocalQueries -->
      <class name="com.facebook.presto.metadata.TestQualifiedTablePrefix">
        <test-method status="PASS" signature="testCatalog()[pri:0, instance:com.facebook.presto.metadata.TestQualifiedTablePrefix@6e4424f9]" name="testCatalog" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCatalog -->
        <test-method status="PASS" signature="testSchema()[pri:0, instance:com.facebook.presto.metadata.TestQualifiedTablePrefix@6e4424f9]" name="testSchema" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSchema -->
        <test-method status="PASS" signature="testBadTable()[pri:0, instance:com.facebook.presto.metadata.TestQualifiedTablePrefix@6e4424f9]" name="testBadTable" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBadTable -->
        <test-method status="PASS" signature="testTable()[pri:0, instance:com.facebook.presto.metadata.TestQualifiedTablePrefix@6e4424f9]" name="testTable" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTable -->
      </class> <!-- com.facebook.presto.metadata.TestQualifiedTablePrefix -->
      <class name="com.facebook.presto.metadata.TestDatabaseShardManager">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.metadata.TestDatabaseShardManager@12093e09]" name="setup" is-config="true" duration-ms="32" started-at="2014-05-07T06:59:08Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testPartitionShardCommit()[pri:0, instance:com.facebook.presto.metadata.TestDatabaseShardManager@12093e09]" name="testPartitionShardCommit" duration-ms="20" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartitionShardCommit -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.metadata.TestDatabaseShardManager@12093e09]" name="teardown" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.facebook.presto.metadata.TestDatabaseShardManager -->
      <class name="com.facebook.presto.execution.TestSqlStageExecution">
        <test-method status="PASS" signature="testYieldCausesFullSchedule()[pri:0, instance:com.facebook.presto.execution.TestSqlStageExecution@67b38e47]" name="testYieldCausesFullSchedule" duration-ms="283" started-at="2014-05-07T07:00:24Z" finished-at="2014-05-07T07:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testYieldCausesFullSchedule -->
      </class> <!-- com.facebook.presto.execution.TestSqlStageExecution -->
      <class name="com.facebook.presto.failureDetector.TestHeartbeatFailureDetector">
        <test-method status="PASS" signature="testExcludesCurrentNode()[pri:0, instance:com.facebook.presto.failureDetector.TestHeartbeatFailureDetector@c7ab830]" name="testExcludesCurrentNode" duration-ms="1209" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExcludesCurrentNode -->
      </class> <!-- com.facebook.presto.failureDetector.TestHeartbeatFailureDetector -->
      <class name="com.facebook.presto.operator.TestTaskStats">
        <test-method status="PASS" signature="testJson()[pri:0, instance:com.facebook.presto.operator.TestTaskStats@1393a095]" name="testJson" duration-ms="25" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJson -->
      </class> <!-- com.facebook.presto.operator.TestTaskStats -->
      <class name="com.facebook.presto.metadata.TestAliasDao">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.metadata.TestAliasDao@667b614e]" name="setup" is-config="true" duration-ms="209" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testAliasCreation()[pri:0, instance:com.facebook.presto.metadata.TestAliasDao@667b614e]" name="testAliasCreation" duration-ms="10" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAliasCreation -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.metadata.TestAliasDao@667b614e]" name="teardown" is-config="true" duration-ms="1" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.metadata.TestAliasDao@667b614e]" name="setup" is-config="true" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testAliasDeletion()[pri:0, instance:com.facebook.presto.metadata.TestAliasDao@667b614e]" name="testAliasDeletion" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAliasDeletion -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.metadata.TestAliasDao@667b614e]" name="teardown" is-config="true" duration-ms="0" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.metadata.TestAliasDao@667b614e]" name="setup" is-config="true" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testDoubleDestinationFails()[pri:0, instance:com.facebook.presto.metadata.TestAliasDao@667b614e]" name="testDoubleDestinationFails" duration-ms="7" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoubleDestinationFails -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.metadata.TestAliasDao@667b614e]" name="setup" is-config="true" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.metadata.TestAliasDao@667b614e]" name="teardown" is-config="true" duration-ms="0" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="testDoubleSourceOk()[pri:0, instance:com.facebook.presto.metadata.TestAliasDao@667b614e]" name="testDoubleSourceOk" duration-ms="2" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoubleSourceOk -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.metadata.TestAliasDao@667b614e]" name="setup" is-config="true" duration-ms="6" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.metadata.TestAliasDao@667b614e]" name="teardown" is-config="true" duration-ms="0" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="testTableCreation()[pri:0, instance:com.facebook.presto.metadata.TestAliasDao@667b614e]" name="testTableCreation" duration-ms="0" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTableCreation -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.metadata.TestAliasDao@667b614e]" name="teardown" is-config="true" duration-ms="0" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.facebook.presto.metadata.TestAliasDao -->
      <class name="com.facebook.presto.sql.planner.TestInterpretedProjectionFunction">
        <test-method status="PASS" signature="testArithmeticExpression()[pri:0, instance:com.facebook.presto.sql.planner.TestInterpretedProjectionFunction@14fa3ef]" name="testArithmeticExpression" duration-ms="3" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArithmeticExpression -->
        <test-method status="PASS" signature="testArithmeticExpressionWithNulls()[pri:0, instance:com.facebook.presto.sql.planner.TestInterpretedProjectionFunction@14fa3ef]" name="testArithmeticExpressionWithNulls" duration-ms="4" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArithmeticExpressionWithNulls -->
        <test-method status="PASS" signature="testBooleanExpression()[pri:0, instance:com.facebook.presto.sql.planner.TestInterpretedProjectionFunction@14fa3ef]" name="testBooleanExpression" duration-ms="1" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBooleanExpression -->
        <test-method status="PASS" signature="testCoalesceExpression()[pri:0, instance:com.facebook.presto.sql.planner.TestInterpretedProjectionFunction@14fa3ef]" name="testCoalesceExpression" duration-ms="4" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCoalesceExpression -->
        <test-method status="PASS" signature="testNullIf()[pri:0, instance:com.facebook.presto.sql.planner.TestInterpretedProjectionFunction@14fa3ef]" name="testNullIf" duration-ms="3" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNullIf -->
        <test-method status="PASS" signature="testSymbolReference()[pri:0, instance:com.facebook.presto.sql.planner.TestInterpretedProjectionFunction@14fa3ef]" name="testSymbolReference" duration-ms="1" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSymbolReference -->
      </class> <!-- com.facebook.presto.sql.planner.TestInterpretedProjectionFunction -->
      <class name="com.facebook.presto.sql.gen.TestExpressionCompiler">
        <test-method status="PASS" signature="setupClass()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setupClass" is-config="true" duration-ms="350" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupClass -->
        <test-method status="PASS" signature="filterFunction()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="filterFunction" duration-ms="60" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterFunction -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="2" started-at="2014-05-07T06:59:10Z" finished-at="2014-05-07T06:59:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.filterFunction() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="smokeTest()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="smokeTest" duration-ms="71" started-at="2014-05-07T06:59:10Z" finished-at="2014-05-07T06:59:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smokeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:10Z" finished-at="2014-05-07T06:59:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:10Z" finished-at="2014-05-07T06:59:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.smokeTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:10Z" finished-at="2014-05-07T06:59:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAnd()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testAnd" duration-ms="75" started-at="2014-05-07T06:59:10Z" finished-at="2014-05-07T06:59:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAnd -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:10Z" finished-at="2014-05-07T06:59:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testAnd() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:10Z" finished-at="2014-05-07T06:59:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testBinaryOperatorsBoolean()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testBinaryOperatorsBoolean" duration-ms="284" started-at="2014-05-07T06:59:10Z" finished-at="2014-05-07T06:59:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBinaryOperatorsBoolean -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:10Z" finished-at="2014-05-07T06:59:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testBinaryOperatorsBoolean() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:10Z" finished-at="2014-05-07T06:59:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testBinaryOperatorsDoubleDouble()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testBinaryOperatorsDoubleDouble" duration-ms="5230" started-at="2014-05-07T06:59:10Z" finished-at="2014-05-07T06:59:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBinaryOperatorsDoubleDouble -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="10" started-at="2014-05-07T06:59:15Z" finished-at="2014-05-07T06:59:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testBinaryOperatorsDoubleDouble() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testBinaryOperatorsDoubleLong()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testBinaryOperatorsDoubleLong" duration-ms="5599" started-at="2014-05-07T06:59:15Z" finished-at="2014-05-07T06:59:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBinaryOperatorsDoubleLong -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:15Z" finished-at="2014-05-07T06:59:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="6" started-at="2014-05-07T06:59:21Z" finished-at="2014-05-07T06:59:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testBinaryOperatorsDoubleLong() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testBinaryOperatorsLongDouble()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testBinaryOperatorsLongDouble" duration-ms="4382" started-at="2014-05-07T06:59:21Z" finished-at="2014-05-07T06:59:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBinaryOperatorsLongDouble -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:21Z" finished-at="2014-05-07T06:59:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="6" started-at="2014-05-07T06:59:25Z" finished-at="2014-05-07T06:59:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testBinaryOperatorsLongDouble() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testBinaryOperatorsLongLong()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testBinaryOperatorsLongLong" duration-ms="2350" started-at="2014-05-07T06:59:25Z" finished-at="2014-05-07T06:59:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBinaryOperatorsLongLong -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:25Z" finished-at="2014-05-07T06:59:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="6" started-at="2014-05-07T06:59:28Z" finished-at="2014-05-07T06:59:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testBinaryOperatorsLongLong() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testBinaryOperatorsString()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testBinaryOperatorsString" duration-ms="3096" started-at="2014-05-07T06:59:28Z" finished-at="2014-05-07T06:59:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBinaryOperatorsString -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:28Z" finished-at="2014-05-07T06:59:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="4" started-at="2014-05-07T06:59:31Z" finished-at="2014-05-07T06:59:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testBinaryOperatorsString() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:31Z" finished-at="2014-05-07T06:59:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testCast()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testCast" duration-ms="1253" started-at="2014-05-07T06:59:31Z" finished-at="2014-05-07T06:59:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCast -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:32Z" finished-at="2014-05-07T06:59:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testCast() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testCoalesce()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testCoalesce" duration-ms="235" started-at="2014-05-07T06:59:32Z" finished-at="2014-05-07T06:59:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCoalesce -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:32Z" finished-at="2014-05-07T06:59:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:32Z" finished-at="2014-05-07T06:59:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testCoalesce() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testExtract()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testExtract" duration-ms="1357" started-at="2014-05-07T06:59:32Z" finished-at="2014-05-07T06:59:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtract -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:32Z" finished-at="2014-05-07T06:59:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:34Z" finished-at="2014-05-07T06:59:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testExtract() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:34Z" finished-at="2014-05-07T06:59:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFunctionCall()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testFunctionCall" duration-ms="4074" started-at="2014-05-07T06:59:34Z" finished-at="2014-05-07T06:59:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctionCall -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="2" started-at="2014-05-07T06:59:38Z" finished-at="2014-05-07T06:59:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testFunctionCall() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:38Z" finished-at="2014-05-07T06:59:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFunctionCallJson()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testFunctionCallJson" duration-ms="685" started-at="2014-05-07T06:59:38Z" finished-at="2014-05-07T06:59:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctionCallJson -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:38Z" finished-at="2014-05-07T06:59:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testFunctionCallJson() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:38Z" finished-at="2014-05-07T06:59:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFunctionCallRegexp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testFunctionCallRegexp" duration-ms="583" started-at="2014-05-07T06:59:38Z" finished-at="2014-05-07T06:59:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctionCallRegexp -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:39Z" finished-at="2014-05-07T06:59:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testFunctionCallRegexp() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:39Z" finished-at="2014-05-07T06:59:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFunctionWithSessionCall()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testFunctionWithSessionCall" duration-ms="50" started-at="2014-05-07T06:59:39Z" finished-at="2014-05-07T06:59:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctionWithSessionCall -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:39Z" finished-at="2014-05-07T06:59:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testFunctionWithSessionCall() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testHugeIn()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testHugeIn" duration-ms="435" started-at="2014-05-07T06:59:39Z" finished-at="2014-05-07T06:59:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHugeIn -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:39Z" finished-at="2014-05-07T06:59:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:39Z" finished-at="2014-05-07T06:59:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testHugeIn() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:39Z" finished-at="2014-05-07T06:59:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testIf()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testIf" duration-ms="794" started-at="2014-05-07T06:59:39Z" finished-at="2014-05-07T06:59:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIf -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:40Z" finished-at="2014-05-07T06:59:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testIf() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:40Z" finished-at="2014-05-07T06:59:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testIn()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testIn" duration-ms="709" started-at="2014-05-07T06:59:40Z" finished-at="2014-05-07T06:59:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIn -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:41Z" finished-at="2014-05-07T06:59:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testIn() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:41Z" finished-at="2014-05-07T06:59:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testLike()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testLike" duration-ms="248" started-at="2014-05-07T06:59:41Z" finished-at="2014-05-07T06:59:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLike -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:41Z" finished-at="2014-05-07T06:59:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testLike() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testNot()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testNot" duration-ms="52" started-at="2014-05-07T06:59:41Z" finished-at="2014-05-07T06:59:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNot -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:41Z" finished-at="2014-05-07T06:59:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:41Z" finished-at="2014-05-07T06:59:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testNot() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testOr()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testOr" duration-ms="61" started-at="2014-05-07T06:59:41Z" finished-at="2014-05-07T06:59:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOr -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:41Z" finished-at="2014-05-07T06:59:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:41Z" finished-at="2014-05-07T06:59:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testOr() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testSearchCaseMultiple()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testSearchCaseMultiple" duration-ms="5113" started-at="2014-05-07T06:59:41Z" finished-at="2014-05-07T06:59:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchCaseMultiple -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:41Z" finished-at="2014-05-07T06:59:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:46Z" finished-at="2014-05-07T06:59:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testSearchCaseMultiple() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:46Z" finished-at="2014-05-07T06:59:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSearchCaseSingle()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testSearchCaseSingle" duration-ms="4984" started-at="2014-05-07T06:59:46Z" finished-at="2014-05-07T06:59:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchCaseSingle -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:51Z" finished-at="2014-05-07T06:59:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testSearchCaseSingle() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testSimpleCase()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testSimpleCase" duration-ms="4234" started-at="2014-05-07T06:59:51Z" finished-at="2014-05-07T06:59:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleCase -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:51Z" finished-at="2014-05-07T06:59:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:56Z" finished-at="2014-05-07T06:59:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testSimpleCase() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:56Z" finished-at="2014-05-07T06:59:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testTernaryOperatorsDoubleDouble()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testTernaryOperatorsDoubleDouble" duration-ms="6020" started-at="2014-05-07T06:59:56Z" finished-at="2014-05-07T07:00:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTernaryOperatorsDoubleDouble -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:02Z" finished-at="2014-05-07T07:00:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testTernaryOperatorsDoubleDouble() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testTernaryOperatorsLongDouble()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testTernaryOperatorsLongDouble" duration-ms="3959" started-at="2014-05-07T07:00:02Z" finished-at="2014-05-07T07:00:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTernaryOperatorsLongDouble -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:02Z" finished-at="2014-05-07T07:00:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:06Z" finished-at="2014-05-07T07:00:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testTernaryOperatorsLongDouble() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testTernaryOperatorsLongLong()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testTernaryOperatorsLongLong" duration-ms="1861" started-at="2014-05-07T07:00:06Z" finished-at="2014-05-07T07:00:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTernaryOperatorsLongLong -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:06Z" finished-at="2014-05-07T07:00:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:07Z" finished-at="2014-05-07T07:00:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testTernaryOperatorsLongLong() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testTernaryOperatorsString()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testTernaryOperatorsString" duration-ms="1518" started-at="2014-05-07T07:00:07Z" finished-at="2014-05-07T07:00:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTernaryOperatorsString -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:07Z" finished-at="2014-05-07T07:00:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:09Z" finished-at="2014-05-07T07:00:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testTernaryOperatorsString() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testUnaryOperators()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="testUnaryOperators" duration-ms="635" started-at="2014-05-07T07:00:09Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnaryOperators -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:09Z" finished-at="2014-05-07T07:00:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.facebook.presto.sql.gen.TestExpressionCompiler.testUnaryOperators() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:com.facebook.presto.sql.gen.TestExpressionCompiler@276b998f]" name="tearDownClass" is-config="true" duration-ms="2" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.facebook.presto.sql.gen.TestExpressionCompiler -->
      <class name="com.facebook.presto.operator.aggregation.TestVarBinaryMinAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMinAggregation@eaf5951]" name="testAllPositionsNull" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMinAggregation@eaf5951]" name="testMixedNullAndNonNullPositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMinAggregation@eaf5951]" name="testNegativeOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMinAggregation@eaf5951]" name="testMultiplePositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMinAggregation@eaf5951]" name="testNoPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMinAggregation@eaf5951]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMinAggregation@eaf5951]" name="testPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMinAggregation@eaf5951]" name="testPositiveOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMinAggregation@eaf5951]" name="testSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMinAggregation@eaf5951]" name="testVectorMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMinAggregation@eaf5951]" name="testVectorAllPositionsNull" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMinAggregation@eaf5951]" name="testVectorMultiplePositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMinAggregation@eaf5951]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMinAggregation@eaf5951]" name="testVectorPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestVarBinaryMinAggregation@eaf5951]" name="testVectorSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestVarBinaryMinAggregation -->
      <class name="com.facebook.presto.sql.planner.TestInterpretedFilterFunction">
        <test-method status="PASS" signature="testAndExpression()[pri:0, instance:com.facebook.presto.sql.planner.TestInterpretedFilterFunction@38dddee8]" name="testAndExpression" duration-ms="1" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAndExpression -->
        <test-method status="PASS" signature="testBooleanLiteral()[pri:0, instance:com.facebook.presto.sql.planner.TestInterpretedFilterFunction@38dddee8]" name="testBooleanLiteral" duration-ms="1" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBooleanLiteral -->
        <test-method status="PASS" signature="testComparisonExpression()[pri:0, instance:com.facebook.presto.sql.planner.TestInterpretedFilterFunction@38dddee8]" name="testComparisonExpression" duration-ms="6" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComparisonExpression -->
        <test-method status="PASS" signature="testComparisonExpressionWithNulls()[pri:0, instance:com.facebook.presto.sql.planner.TestInterpretedFilterFunction@38dddee8]" name="testComparisonExpressionWithNulls" duration-ms="3" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComparisonExpressionWithNulls -->
        <test-method status="PASS" signature="testIsNotNullExpression()[pri:0, instance:com.facebook.presto.sql.planner.TestInterpretedFilterFunction@38dddee8]" name="testIsNotNullExpression" duration-ms="1" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsNotNullExpression -->
        <test-method status="PASS" signature="testIsNullExpression()[pri:0, instance:com.facebook.presto.sql.planner.TestInterpretedFilterFunction@38dddee8]" name="testIsNullExpression" duration-ms="1" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsNullExpression -->
        <test-method status="PASS" signature="testNotExpression()[pri:0, instance:com.facebook.presto.sql.planner.TestInterpretedFilterFunction@38dddee8]" name="testNotExpression" duration-ms="1" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNotExpression -->
        <test-method status="PASS" signature="testNullLiteral()[pri:0, instance:com.facebook.presto.sql.planner.TestInterpretedFilterFunction@38dddee8]" name="testNullLiteral" duration-ms="0" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNullLiteral -->
        <test-method status="PASS" signature="testORExpression()[pri:0, instance:com.facebook.presto.sql.planner.TestInterpretedFilterFunction@38dddee8]" name="testORExpression" duration-ms="1" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testORExpression -->
      </class> <!-- com.facebook.presto.sql.planner.TestInterpretedFilterFunction -->
      <class name="com.facebook.presto.block.TestBlockBuilder">
        <test-method status="PASS" signature="testMultipleTuplesWithNull()[pri:0, instance:com.facebook.presto.block.TestBlockBuilder@61eaf91f]" name="testMultipleTuplesWithNull" duration-ms="0" started-at="2014-05-07T06:59:07Z" finished-at="2014-05-07T06:59:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleTuplesWithNull -->
      </class> <!-- com.facebook.presto.block.TestBlockBuilder -->
      <class name="com.facebook.presto.operator.TestOrderByOperator">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestOrderByOperator@3252ac20]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMemoryLimit()[pri:0, instance:com.facebook.presto.operator.TestOrderByOperator@3252ac20]" name="testMemoryLimit" duration-ms="1" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Task exceeded max memory size of 10B]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Task exceeded max memory size of 10B
	at com.google.common.base.Preconditions.checkState(Preconditions.java:177)
	at com.facebook.presto.operator.OperatorContext.setMemoryReservation(OperatorContext.java:203)
	at com.facebook.presto.operator.PagesIndex.addPage(PagesIndex.java:77)
	at com.facebook.presto.operator.OrderByOperator.addInput(OrderByOperator.java:197)
	at com.facebook.presto.operator.OperatorAssertion.toPages(OperatorAssertion.java:55)
	at com.facebook.presto.operator.TestOrderByOperator.testMemoryLimit(TestOrderByOperator.java:186)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMemoryLimit -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestOrderByOperator@3252ac20]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMultiFieldKey()[pri:0, instance:com.facebook.presto.operator.TestOrderByOperator@3252ac20]" name="testMultiFieldKey" duration-ms="1" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiFieldKey -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestOrderByOperator@3252ac20]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestOrderByOperator@3252ac20]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestOrderByOperator@3252ac20]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testReverseOrder()[pri:0, instance:com.facebook.presto.operator.TestOrderByOperator@3252ac20]" name="testReverseOrder" duration-ms="1" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverseOrder -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestOrderByOperator@3252ac20]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestOrderByOperator@3252ac20]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSingleFieldKey()[pri:0, instance:com.facebook.presto.operator.TestOrderByOperator@3252ac20]" name="testSingleFieldKey" duration-ms="1" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleFieldKey -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestOrderByOperator@3252ac20]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.facebook.presto.operator.TestOrderByOperator -->
      <class name="com.facebook.presto.operator.aggregation.TestLongSumAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongSumAggregation@629abc40]" name="testAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongSumAggregation@629abc40]" name="testMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongSumAggregation@629abc40]" name="testMultiplePositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongSumAggregation@629abc40]" name="testNegativeOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongSumAggregation@629abc40]" name="testNoPositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongSumAggregation@629abc40]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongSumAggregation@629abc40]" name="testPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongSumAggregation@629abc40]" name="testPositiveOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongSumAggregation@629abc40]" name="testSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongSumAggregation@629abc40]" name="testVectorAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongSumAggregation@629abc40]" name="testVectorMixedNullAndNonNullPositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongSumAggregation@629abc40]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongSumAggregation@629abc40]" name="testVectorMultiplePositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongSumAggregation@629abc40]" name="testVectorPartialWithMultiplePositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongSumAggregation@629abc40]" name="testVectorSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestLongSumAggregation -->
      <class name="com.facebook.presto.operator.window.TestWindowFunctions">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.window.TestWindowFunctions@46213544]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:31Z" finished-at="2014-05-07T07:00:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testCumulativeDistribution()[pri:0, instance:com.facebook.presto.operator.window.TestWindowFunctions@46213544]" name="testCumulativeDistribution" duration-ms="409" started-at="2014-05-07T07:00:31Z" finished-at="2014-05-07T07:00:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCumulativeDistribution -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.window.TestWindowFunctions@46213544]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:31Z" finished-at="2014-05-07T07:00:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDenseRank()[pri:0, instance:com.facebook.presto.operator.window.TestWindowFunctions@46213544]" name="testDenseRank" duration-ms="84" started-at="2014-05-07T07:00:31Z" finished-at="2014-05-07T07:00:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDenseRank -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.window.TestWindowFunctions@46213544]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:31Z" finished-at="2014-05-07T07:00:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.window.TestWindowFunctions@46213544]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:31Z" finished-at="2014-05-07T07:00:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.window.TestWindowFunctions@46213544]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:31Z" finished-at="2014-05-07T07:00:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testPercentRank()[pri:0, instance:com.facebook.presto.operator.window.TestWindowFunctions@46213544]" name="testPercentRank" duration-ms="350" started-at="2014-05-07T07:00:31Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPercentRank -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.window.TestWindowFunctions@46213544]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.window.TestWindowFunctions@46213544]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testRank()[pri:0, instance:com.facebook.presto.operator.window.TestWindowFunctions@46213544]" name="testRank" duration-ms="81" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRank -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.window.TestWindowFunctions@46213544]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.window.TestWindowFunctions@46213544]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testRowNumber()[pri:0, instance:com.facebook.presto.operator.window.TestWindowFunctions@46213544]" name="testRowNumber" duration-ms="163" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRowNumber -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.window.TestWindowFunctions@46213544]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.window.TestWindowFunctions@46213544]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testRowNumberPartitioning()[pri:0, instance:com.facebook.presto.operator.window.TestWindowFunctions@46213544]" name="testRowNumberPartitioning" duration-ms="165" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRowNumberPartitioning -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.window.TestWindowFunctions@46213544]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.facebook.presto.operator.window.TestWindowFunctions -->
      <class name="com.facebook.presto.operator.aggregation.TestBooleanMaxAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMaxAggregation@6e556e82]" name="testAllPositionsNull" duration-ms="7" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMaxAggregation@6e556e82]" name="testMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMaxAggregation@6e556e82]" name="testMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMaxAggregation@6e556e82]" name="testNegativeOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMaxAggregation@6e556e82]" name="testNoPositions" duration-ms="1" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMaxAggregation@6e556e82]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMaxAggregation@6e556e82]" name="testPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMaxAggregation@6e556e82]" name="testPositiveOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMaxAggregation@6e556e82]" name="testSinglePosition" duration-ms="2" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMaxAggregation@6e556e82]" name="testVectorAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMaxAggregation@6e556e82]" name="testVectorMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMaxAggregation@6e556e82]" name="testVectorMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMaxAggregation@6e556e82]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMaxAggregation@6e556e82]" name="testVectorPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestBooleanMaxAggregation@6e556e82]" name="testVectorSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:33Z" finished-at="2014-05-07T06:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestBooleanMaxAggregation -->
      <class name="com.facebook.presto.block.dictionary.TestDictionaryEncodedBlockCursor">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.block.dictionary.TestDictionaryEncodedBlockCursor@6287ecac]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAdvanceNextPosition()[pri:0, instance:com.facebook.presto.block.dictionary.TestDictionaryEncodedBlockCursor@6287ecac]" name="testAdvanceNextPosition" duration-ms="2" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceNextPosition -->
        <test-method status="PASS" signature="testAdvanceToPosition()[pri:0, instance:com.facebook.presto.block.dictionary.TestDictionaryEncodedBlockCursor@6287ecac]" name="testAdvanceToPosition" duration-ms="5" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceToPosition -->
        <test-method status="PASS" signature="testFirstPosition()[pri:0, instance:com.facebook.presto.block.dictionary.TestDictionaryEncodedBlockCursor@6287ecac]" name="testFirstPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstPosition -->
        <test-method status="PASS" signature="testCursorType()[pri:0, instance:com.facebook.presto.block.dictionary.TestDictionaryEncodedBlockCursor@6287ecac]" name="testCursorType" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCursorType -->
        <test-method status="PASS" signature="testStates()[pri:0, instance:com.facebook.presto.block.dictionary.TestDictionaryEncodedBlockCursor@6287ecac]" name="testStates" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStates -->
      </class> <!-- com.facebook.presto.block.dictionary.TestDictionaryEncodedBlockCursor -->
      <class name="com.facebook.presto.sql.planner.TestDeterminismEvaluator">
        <test-method status="PASS" signature="testSanity()[pri:0, instance:com.facebook.presto.sql.planner.TestDeterminismEvaluator@f55fa6e]" name="testSanity" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSanity -->
      </class> <!-- com.facebook.presto.sql.planner.TestDeterminismEvaluator -->
      <class name="com.facebook.presto.tuple.TestTupleInfo">
        <test-method status="PASS" signature="testMixed()[pri:0, instance:com.facebook.presto.tuple.TestTupleInfo@549448df]" name="testMixed" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixed -->
        <test-method status="PASS" signature="testMultipleFixedLength()[pri:0, instance:com.facebook.presto.tuple.TestTupleInfo@549448df]" name="testMultipleFixedLength" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleFixedLength -->
        <test-method status="PASS" signature="testAppendWithNull()[pri:0, instance:com.facebook.presto.tuple.TestTupleInfo@549448df]" name="testAppendWithNull" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppendWithNull -->
        <test-method status="PASS" signature="testOnlySingleLongMemoryLayout()[pri:0, instance:com.facebook.presto.tuple.TestTupleInfo@549448df]" name="testOnlySingleLongMemoryLayout" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnlySingleLongMemoryLayout -->
        <test-method status="PASS" signature="testOnlySingleBooleanMemoryLayout()[pri:0, instance:com.facebook.presto.tuple.TestTupleInfo@549448df]" name="testOnlySingleBooleanMemoryLayout" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnlySingleBooleanMemoryLayout -->
        <test-method status="PASS" signature="testSetNonNullAtNonZeroOffset()[pri:0, instance:com.facebook.presto.tuple.TestTupleInfo@549448df]" name="testSetNonNullAtNonZeroOffset" duration-ms="1" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetNonNullAtNonZeroOffset -->
        <test-method status="PASS" signature="testOnlySingleDoubleMemoryLayout()[pri:0, instance:com.facebook.presto.tuple.TestTupleInfo@549448df]" name="testOnlySingleDoubleMemoryLayout" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnlySingleDoubleMemoryLayout -->
        <test-method status="PASS" signature="testMultipleVariableLength()[pri:0, instance:com.facebook.presto.tuple.TestTupleInfo@549448df]" name="testMultipleVariableLength" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleVariableLength -->
        <test-method status="PASS" signature="testSetNullAtNonZeroOffset()[pri:0, instance:com.facebook.presto.tuple.TestTupleInfo@549448df]" name="testSetNullAtNonZeroOffset" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetNullAtNonZeroOffset -->
        <test-method status="PASS" signature="testSingleBooleanLength()[pri:0, instance:com.facebook.presto.tuple.TestTupleInfo@549448df]" name="testSingleBooleanLength" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleBooleanLength -->
        <test-method status="PASS" signature="testSingleBooleanLengthNull()[pri:0, instance:com.facebook.presto.tuple.TestTupleInfo@549448df]" name="testSingleBooleanLengthNull" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleBooleanLengthNull -->
        <test-method status="PASS" signature="testSingleDoubleLength()[pri:0, instance:com.facebook.presto.tuple.TestTupleInfo@549448df]" name="testSingleDoubleLength" duration-ms="1" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleDoubleLength -->
        <test-method status="PASS" signature="testSingleBooleanLengthNullMemoryLayout()[pri:0, instance:com.facebook.presto.tuple.TestTupleInfo@549448df]" name="testSingleBooleanLengthNullMemoryLayout" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleBooleanLengthNullMemoryLayout -->
        <test-method status="PASS" signature="testSingleLongLengthNull()[pri:0, instance:com.facebook.presto.tuple.TestTupleInfo@549448df]" name="testSingleLongLengthNull" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleLongLengthNull -->
        <test-method status="PASS" signature="testSingleDoubleLengthNull()[pri:0, instance:com.facebook.presto.tuple.TestTupleInfo@549448df]" name="testSingleDoubleLengthNull" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleDoubleLengthNull -->
        <test-method status="PASS" signature="testSingleDoubleLengthNullMemoryLayout()[pri:0, instance:com.facebook.presto.tuple.TestTupleInfo@549448df]" name="testSingleDoubleLengthNullMemoryLayout" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleDoubleLengthNullMemoryLayout -->
        <test-method status="PASS" signature="testSingleLongLength()[pri:0, instance:com.facebook.presto.tuple.TestTupleInfo@549448df]" name="testSingleLongLength" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleLongLength -->
        <test-method status="PASS" signature="testSingleVariableLength()[pri:0, instance:com.facebook.presto.tuple.TestTupleInfo@549448df]" name="testSingleVariableLength" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleVariableLength -->
        <test-method status="PASS" signature="testSingleVariableLengthNull()[pri:0, instance:com.facebook.presto.tuple.TestTupleInfo@549448df]" name="testSingleVariableLengthNull" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleVariableLengthNull -->
        <test-method status="PASS" signature="testSingleVariableLengthNullMemoryLayout()[pri:0, instance:com.facebook.presto.tuple.TestTupleInfo@549448df]" name="testSingleVariableLengthNullMemoryLayout" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleVariableLengthNullMemoryLayout -->
        <test-method status="PASS" signature="testSingleLongLengthNullMemoryLayout()[pri:0, instance:com.facebook.presto.tuple.TestTupleInfo@549448df]" name="testSingleLongLengthNullMemoryLayout" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleLongLengthNullMemoryLayout -->
        <test-method status="PASS" signature="testSingleVariableLengthMemoryLayout()[pri:0, instance:com.facebook.presto.tuple.TestTupleInfo@549448df]" name="testSingleVariableLengthMemoryLayout" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleVariableLengthMemoryLayout -->
      </class> <!-- com.facebook.presto.tuple.TestTupleInfo -->
      <class name="com.facebook.presto.operator.aggregation.TestDoubleMinAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMinAggregation@51c9c8aa]" name="testAllPositionsNull" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMinAggregation@51c9c8aa]" name="testMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMinAggregation@51c9c8aa]" name="testMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMinAggregation@51c9c8aa]" name="testNegativeOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMinAggregation@51c9c8aa]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMinAggregation@51c9c8aa]" name="testNoPositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMinAggregation@51c9c8aa]" name="testPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMinAggregation@51c9c8aa]" name="testSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMinAggregation@51c9c8aa]" name="testPositiveOnlyValues" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMinAggregation@51c9c8aa]" name="testVectorAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMinAggregation@51c9c8aa]" name="testVectorMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMinAggregation@51c9c8aa]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMinAggregation@51c9c8aa]" name="testVectorMultiplePositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMinAggregation@51c9c8aa]" name="testVectorPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleMinAggregation@51c9c8aa]" name="testVectorSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestDoubleMinAggregation -->
      <class name="com.facebook.presto.split.TestNativeSplitManager">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.split.TestNativeSplitManager@67e61dd0]" name="setup" is-config="true" duration-ms="27" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNoPruneUnknown()[pri:0, instance:com.facebook.presto.split.TestNativeSplitManager@67e61dd0]" name="testNoPruneUnknown" duration-ms="10" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPruneUnknown -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.split.TestNativeSplitManager@67e61dd0]" name="teardown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.split.TestNativeSplitManager@67e61dd0]" name="setup" is-config="true" duration-ms="31" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNoPruning()[pri:0, instance:com.facebook.presto.split.TestNativeSplitManager@67e61dd0]" name="testNoPruning" duration-ms="11" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPruning -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.split.TestNativeSplitManager@67e61dd0]" name="teardown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.split.TestNativeSplitManager@67e61dd0]" name="setup" is-config="true" duration-ms="44" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testPruneMatch()[pri:0, instance:com.facebook.presto.split.TestNativeSplitManager@67e61dd0]" name="testPruneMatch" duration-ms="11" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPruneMatch -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.split.TestNativeSplitManager@67e61dd0]" name="teardown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.split.TestNativeSplitManager@67e61dd0]" name="setup" is-config="true" duration-ms="42" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testPruneNoMatch()[pri:0, instance:com.facebook.presto.split.TestNativeSplitManager@67e61dd0]" name="testPruneNoMatch" duration-ms="8" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPruneNoMatch -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.split.TestNativeSplitManager@67e61dd0]" name="teardown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.facebook.presto.split.TestNativeSplitManager -->
      <class name="com.facebook.presto.operator.aggregation.TestLongAverageAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongAverageAggregation@6ee76fcc]" name="testAllPositionsNull" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongAverageAggregation@6ee76fcc]" name="testMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongAverageAggregation@6ee76fcc]" name="testMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongAverageAggregation@6ee76fcc]" name="testNegativeOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongAverageAggregation@6ee76fcc]" name="testNoPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongAverageAggregation@6ee76fcc]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongAverageAggregation@6ee76fcc]" name="testPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongAverageAggregation@6ee76fcc]" name="testPositiveOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongAverageAggregation@6ee76fcc]" name="testSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongAverageAggregation@6ee76fcc]" name="testVectorAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongAverageAggregation@6ee76fcc]" name="testVectorMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongAverageAggregation@6ee76fcc]" name="testVectorMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongAverageAggregation@6ee76fcc]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongAverageAggregation@6ee76fcc]" name="testVectorPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongAverageAggregation@6ee76fcc]" name="testVectorSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestLongAverageAggregation -->
      <class name="com.facebook.presto.concurrent.TestFairBatchExecutor">
        <test-method status="PASS" signature="testSanity()[pri:0, instance:com.facebook.presto.concurrent.TestFairBatchExecutor@17d1e318]" name="testSanity" duration-ms="7" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSanity -->
      </class> <!-- com.facebook.presto.concurrent.TestFairBatchExecutor -->
      <class name="com.facebook.presto.execution.TaskExecutorTest">
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="16" started-at="2014-05-07T06:58:47Z" finished-at="2014-05-07T06:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="7" started-at="2014-05-07T06:58:47Z" finished-at="2014-05-07T06:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="7" started-at="2014-05-07T06:58:47Z" finished-at="2014-05-07T06:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:47Z" finished-at="2014-05-07T06:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:47Z" finished-at="2014-05-07T06:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:47Z" finished-at="2014-05-07T06:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="6" started-at="2014-05-07T06:58:47Z" finished-at="2014-05-07T06:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:47Z" finished-at="2014-05-07T06:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="11" started-at="2014-05-07T06:58:47Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="6" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="6" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="6" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="9" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="7" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="6" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="6" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="6" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="6" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="9" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="6" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="6" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="6" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="8" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="5" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="3" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.facebook.presto.execution.TaskExecutorTest@5eb3bc48]" name="test" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- com.facebook.presto.execution.TaskExecutorTest -->
      <class name="com.facebook.presto.block.dictionary.TestDictionaryEncodedBlockCursorWithNulls">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.block.dictionary.TestDictionaryEncodedBlockCursorWithNulls@6bedd91b]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAdvanceNextPosition()[pri:0, instance:com.facebook.presto.block.dictionary.TestDictionaryEncodedBlockCursorWithNulls@6bedd91b]" name="testAdvanceNextPosition" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceNextPosition -->
        <test-method status="PASS" signature="testAdvanceToPosition()[pri:0, instance:com.facebook.presto.block.dictionary.TestDictionaryEncodedBlockCursorWithNulls@6bedd91b]" name="testAdvanceToPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceToPosition -->
        <test-method status="PASS" signature="testFirstPosition()[pri:0, instance:com.facebook.presto.block.dictionary.TestDictionaryEncodedBlockCursorWithNulls@6bedd91b]" name="testFirstPosition" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstPosition -->
        <test-method status="PASS" signature="testCursorType()[pri:0, instance:com.facebook.presto.block.dictionary.TestDictionaryEncodedBlockCursorWithNulls@6bedd91b]" name="testCursorType" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCursorType -->
        <test-method status="PASS" signature="testStates()[pri:0, instance:com.facebook.presto.block.dictionary.TestDictionaryEncodedBlockCursorWithNulls@6bedd91b]" name="testStates" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStates -->
      </class> <!-- com.facebook.presto.block.dictionary.TestDictionaryEncodedBlockCursorWithNulls -->
      <class name="com.facebook.presto.sql.TestExpressionInterpreter">
        <test-method status="PASS" signature="testAnd()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testAnd" duration-ms="4" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAnd -->
        <test-method status="PASS" signature="testBetween()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testBetween" duration-ms="3" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBetween -->
        <test-method status="PASS" signature="testCastOptimization()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testCastOptimization" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCastOptimization -->
        <test-method status="PASS" signature="testCastToBoolean()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testCastToBoolean" duration-ms="2" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCastToBoolean -->
        <test-method status="PASS" signature="testCastToDouble()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testCastToDouble" duration-ms="3" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCastToDouble -->
        <test-method status="PASS" signature="testCastToLong()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testCastToLong" duration-ms="2" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCastToLong -->
        <test-method status="PASS" signature="testCastToString()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testCastToString" duration-ms="2" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCastToString -->
        <test-method status="PASS" signature="testComparison()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testComparison" duration-ms="2" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComparison -->
        <test-method status="PASS" signature="testCurrentTimestamp()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testCurrentTimestamp" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCurrentTimestamp -->
        <test-method status="PASS" signature="testDateLiteral()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testDateLiteral" duration-ms="3" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDateLiteral -->
        <test-method status="PASS" signature="testExtract()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testExtract" duration-ms="6" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtract -->
        <test-method status="PASS" signature="testFailedExpressionOptimization()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testFailedExpressionOptimization" duration-ms="8" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFailedExpressionOptimization -->
        <test-method status="PASS" signature="testFunctionCall()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testFunctionCall" duration-ms="2" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctionCall -->
        <test-method status="PASS" signature="testIf()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testIf" duration-ms="3" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIf -->
        <test-method status="PASS" signature="testIn()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testIn" duration-ms="8" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIn -->
        <test-method status="PASS" signature="testIntervalLiteral()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testIntervalLiteral" duration-ms="8" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIntervalLiteral -->
        <test-method status="PASS" signature="testIntervalMath()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testIntervalMath" duration-ms="3" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIntervalMath -->
        <test-method status="PASS" signature="testIsDistinctFrom()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testIsDistinctFrom" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsDistinctFrom -->
        <test-method status="PASS" signature="testLike()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testLike" duration-ms="20" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLike -->
        <test-method status="PASS" signature="testLikeInvalidUtf8()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testLikeInvalidUtf8" duration-ms="11" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLikeInvalidUtf8 -->
        <test-method status="PASS" signature="testLikeOptimization()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testLikeOptimization" duration-ms="3" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLikeOptimization -->
        <test-method status="PASS" signature="testNonDeterministicFunctionCall()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testNonDeterministicFunctionCall" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonDeterministicFunctionCall -->
        <test-method status="PASS" signature="testOptimizeConstantIfDivideByZero()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testOptimizeConstantIfDivideByZero" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
	at com.facebook.presto.sql.planner.ExpressionInterpreter$Visitor.visitArithmeticExpression(ExpressionInterpreter.java:520)
	at com.facebook.presto.sql.tree.ArithmeticExpression.accept(ArithmeticExpression.java:68)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.planner.ExpressionInterpreter$Visitor.visitIfExpression(ExpressionInterpreter.java:714)
	at com.facebook.presto.sql.tree.IfExpression.accept(IfExpression.java:56)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.planner.ExpressionInterpreter.optimize(ExpressionInterpreter.java:143)
	at com.facebook.presto.sql.TestExpressionInterpreter.optimize(TestExpressionInterpreter.java:791)
	at com.facebook.presto.sql.TestExpressionInterpreter.testOptimizeConstantIfDivideByZero(TestExpressionInterpreter.java:728)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptimizeConstantIfDivideByZero -->
        <test-method status="PASS" signature="testOptimizeConstantSearchedCaseDivideByZero()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testOptimizeConstantSearchedCaseDivideByZero" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
	at com.facebook.presto.sql.planner.ExpressionInterpreter$Visitor.visitArithmeticExpression(ExpressionInterpreter.java:520)
	at com.facebook.presto.sql.tree.ArithmeticExpression.accept(ArithmeticExpression.java:68)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.planner.ExpressionInterpreter$Visitor.visitSearchedCaseExpression(ExpressionInterpreter.java:306)
	at com.facebook.presto.sql.tree.SearchedCaseExpression.accept(SearchedCaseExpression.java:47)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.planner.ExpressionInterpreter.optimize(ExpressionInterpreter.java:143)
	at com.facebook.presto.sql.TestExpressionInterpreter.optimize(TestExpressionInterpreter.java:791)
	at com.facebook.presto.sql.TestExpressionInterpreter.testOptimizeConstantSearchedCaseDivideByZero(TestExpressionInterpreter.java:735)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptimizeConstantSearchedCaseDivideByZero -->
        <test-method status="PASS" signature="testOr()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testOr" duration-ms="4" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOr -->
        <test-method status="PASS" signature="testOptimizeDivideByZero()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testOptimizeDivideByZero" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
	at com.facebook.presto.sql.planner.ExpressionInterpreter$Visitor.visitArithmeticExpression(ExpressionInterpreter.java:520)
	at com.facebook.presto.sql.tree.ArithmeticExpression.accept(ArithmeticExpression.java:68)
	at com.facebook.presto.sql.tree.AstVisitor.process(AstVisitor.java:22)
	at com.facebook.presto.sql.planner.ExpressionInterpreter.optimize(ExpressionInterpreter.java:143)
	at com.facebook.presto.sql.TestExpressionInterpreter.optimize(TestExpressionInterpreter.java:791)
	at com.facebook.presto.sql.TestExpressionInterpreter.testOptimizeDivideByZero(TestExpressionInterpreter.java:721)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptimizeDivideByZero -->
        <test-method status="PASS" signature="testReservedWithDoubleQuotes()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testReservedWithDoubleQuotes" duration-ms="0" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReservedWithDoubleQuotes -->
        <test-method status="PASS" signature="testSearchCase()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testSearchCase" duration-ms="4" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchCase -->
        <test-method status="PASS" signature="testSimpleCase()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testSimpleCase" duration-ms="4" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleCase -->
        <test-method status="PASS" signature="testTimeLiteral()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testTimeLiteral" duration-ms="22" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTimeLiteral -->
        <test-method status="PASS" signature="testTimestampLiteral()[pri:0, instance:com.facebook.presto.sql.TestExpressionInterpreter@6c6dba0d]" name="testTimestampLiteral" duration-ms="13" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTimestampLiteral -->
      </class> <!-- com.facebook.presto.sql.TestExpressionInterpreter -->
      <class name="com.facebook.presto.operator.aggregation.TestLongVariancePopAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVariancePopAggregation@a8960c5]" name="testAllPositionsNull" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVariancePopAggregation@a8960c5]" name="testMixedNullAndNonNullPositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVariancePopAggregation@a8960c5]" name="testMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVariancePopAggregation@a8960c5]" name="testNegativeOnlyValues" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVariancePopAggregation@a8960c5]" name="testNoPositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVariancePopAggregation@a8960c5]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVariancePopAggregation@a8960c5]" name="testPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVariancePopAggregation@a8960c5]" name="testPositiveOnlyValues" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVariancePopAggregation@a8960c5]" name="testVectorAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVariancePopAggregation@a8960c5]" name="testSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVariancePopAggregation@a8960c5]" name="testVectorMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVariancePopAggregation@a8960c5]" name="testVectorMixedNullAndNonNullPositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVariancePopAggregation@a8960c5]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVariancePopAggregation@a8960c5]" name="testVectorPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVariancePopAggregation@a8960c5]" name="testVectorSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestLongVariancePopAggregation -->
      <class name="com.facebook.presto.operator.aggregation.TestDoubleApproximateAverageAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleApproximateAverageAggregation@41302aea]" name="testAllPositionsNull" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleApproximateAverageAggregation@41302aea]" name="testMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleApproximateAverageAggregation@41302aea]" name="testMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleApproximateAverageAggregation@41302aea]" name="testNegativeOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleApproximateAverageAggregation@41302aea]" name="testNoPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleApproximateAverageAggregation@41302aea]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleApproximateAverageAggregation@41302aea]" name="testPartialWithMultiplePositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleApproximateAverageAggregation@41302aea]" name="testPositiveOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleApproximateAverageAggregation@41302aea]" name="testSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleApproximateAverageAggregation@41302aea]" name="testVectorAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleApproximateAverageAggregation@41302aea]" name="testVectorMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleApproximateAverageAggregation@41302aea]" name="testVectorMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleApproximateAverageAggregation@41302aea]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleApproximateAverageAggregation@41302aea]" name="testVectorPartialWithMultiplePositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleApproximateAverageAggregation@41302aea]" name="testVectorSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestDoubleApproximateAverageAggregation -->
      <class name="com.facebook.presto.sql.planner.TestEffectivePredicateExtractor">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAggregation()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="testAggregation" duration-ms="1" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAggregation -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInnerJoin()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="testInnerJoin" duration-ms="1" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInnerJoin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFilter()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="testFilter" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilter -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testLeftJoin()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="testLeftJoin" duration-ms="1" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeftJoin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testLimit()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="testLimit" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLimit -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testProject()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="testProject" duration-ms="1" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProject -->
        <test-method status="PASS" signature="testRightJoin()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="testRightJoin" duration-ms="2" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRightJoin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSemiJoin()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="testSemiJoin" duration-ms="1" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSemiJoin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSort()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="testSort" duration-ms="1" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testTableScan()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="testTableScan" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTableScan -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testTopN()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="testTopN" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTopN -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testUnion()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="testUnion" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnion -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testWindow()[pri:0, instance:com.facebook.presto.sql.planner.TestEffectivePredicateExtractor@7407518b]" name="testWindow" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWindow -->
      </class> <!-- com.facebook.presto.sql.planner.TestEffectivePredicateExtractor -->
      <class name="com.facebook.presto.operator.aggregation.TestLongStdDevPopAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevPopAggregation@5d5ef3e7]" name="testAllPositionsNull" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevPopAggregation@5d5ef3e7]" name="testMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevPopAggregation@5d5ef3e7]" name="testMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevPopAggregation@5d5ef3e7]" name="testNegativeOnlyValues" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevPopAggregation@5d5ef3e7]" name="testNoPositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevPopAggregation@5d5ef3e7]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevPopAggregation@5d5ef3e7]" name="testPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevPopAggregation@5d5ef3e7]" name="testPositiveOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevPopAggregation@5d5ef3e7]" name="testSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevPopAggregation@5d5ef3e7]" name="testVectorAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevPopAggregation@5d5ef3e7]" name="testVectorMixedNullAndNonNullPositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevPopAggregation@5d5ef3e7]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevPopAggregation@5d5ef3e7]" name="testVectorMultiplePositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevPopAggregation@5d5ef3e7]" name="testVectorPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevPopAggregation@5d5ef3e7]" name="testVectorSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestLongStdDevPopAggregation -->
      <class name="com.facebook.presto.operator.TestExchangeClientConfig">
        <test-method status="PASS" signature="testDefaults()[pri:0, instance:com.facebook.presto.operator.TestExchangeClientConfig@74fdaf92]" name="testDefaults" duration-ms="23" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaults -->
        <test-method status="PASS" signature="testExplicitPropertyMappings()[pri:0, instance:com.facebook.presto.operator.TestExchangeClientConfig@74fdaf92]" name="testExplicitPropertyMappings" duration-ms="5" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExplicitPropertyMappings -->
      </class> <!-- com.facebook.presto.operator.TestExchangeClientConfig -->
      <class name="com.facebook.presto.block.uncompressed.TestUncompressedBlockCursorWithNulls">
        <test-method status="PASS" signature="testAdvanceNextPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBlockCursorWithNulls@41518a15]" name="testAdvanceNextPosition" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceNextPosition -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBlockCursorWithNulls@41518a15]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAdvanceToPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBlockCursorWithNulls@41518a15]" name="testAdvanceToPosition" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceToPosition -->
        <test-method status="PASS" signature="testFirstPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBlockCursorWithNulls@41518a15]" name="testFirstPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstPosition -->
        <test-method status="PASS" signature="testStates()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBlockCursorWithNulls@41518a15]" name="testStates" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStates -->
        <test-method status="PASS" signature="testCursorType()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedBlockCursorWithNulls@41518a15]" name="testCursorType" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCursorType -->
      </class> <!-- com.facebook.presto.block.uncompressed.TestUncompressedBlockCursorWithNulls -->
      <class name="com.facebook.presto.operator.scalar.TestRegexpFunctions">
        <test-method status="PASS" signature="testRegexpExtract()[pri:0, instance:com.facebook.presto.operator.scalar.TestRegexpFunctions@50408a33]" name="testRegexpExtract" duration-ms="45" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegexpExtract -->
        <test-method status="PASS" signature="testRegexpLike()[pri:0, instance:com.facebook.presto.operator.scalar.TestRegexpFunctions@50408a33]" name="testRegexpLike" duration-ms="142" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegexpLike -->
        <test-method status="PASS" signature="testRegexpReplace()[pri:0, instance:com.facebook.presto.operator.scalar.TestRegexpFunctions@50408a33]" name="testRegexpReplace" duration-ms="72" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegexpReplace -->
      </class> <!-- com.facebook.presto.operator.scalar.TestRegexpFunctions -->
      <class name="com.facebook.presto.operator.scalar.TestColorFunctions">
        <test-method status="PASS" signature="testGetComponent()[pri:0, instance:com.facebook.presto.operator.scalar.TestColorFunctions@20fe99b6]" name="testGetComponent" duration-ms="0" started-at="2014-05-07T06:59:07Z" finished-at="2014-05-07T06:59:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetComponent -->
        <test-method status="PASS" signature="testColor()[pri:0, instance:com.facebook.presto.operator.scalar.TestColorFunctions@20fe99b6]" name="testColor" duration-ms="0" started-at="2014-05-07T06:59:07Z" finished-at="2014-05-07T06:59:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColor -->
        <test-method status="PASS" signature="testInterpolate()[pri:0, instance:com.facebook.presto.operator.scalar.TestColorFunctions@20fe99b6]" name="testInterpolate" duration-ms="13" started-at="2014-05-07T06:59:07Z" finished-at="2014-05-07T06:59:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInterpolate -->
        <test-method status="PASS" signature="testParseRgb()[pri:0, instance:com.facebook.presto.operator.scalar.TestColorFunctions@20fe99b6]" name="testParseRgb" duration-ms="1" started-at="2014-05-07T06:59:07Z" finished-at="2014-05-07T06:59:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseRgb -->
        <test-method status="PASS" signature="testRenderDouble()[pri:0, instance:com.facebook.presto.operator.scalar.TestColorFunctions@20fe99b6]" name="testRenderDouble" duration-ms="0" started-at="2014-05-07T06:59:07Z" finished-at="2014-05-07T06:59:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRenderDouble -->
        <test-method status="PASS" signature="testRenderLong()[pri:0, instance:com.facebook.presto.operator.scalar.TestColorFunctions@20fe99b6]" name="testRenderLong" duration-ms="0" started-at="2014-05-07T06:59:07Z" finished-at="2014-05-07T06:59:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRenderLong -->
        <test-method status="PASS" signature="testToRgb()[pri:0, instance:com.facebook.presto.operator.scalar.TestColorFunctions@20fe99b6]" name="testToRgb" duration-ms="0" started-at="2014-05-07T06:59:07Z" finished-at="2014-05-07T06:59:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToRgb -->
        <test-method status="PASS" signature="testRenderString()[pri:0, instance:com.facebook.presto.operator.scalar.TestColorFunctions@20fe99b6]" name="testRenderString" duration-ms="0" started-at="2014-05-07T06:59:07Z" finished-at="2014-05-07T06:59:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRenderString -->
      </class> <!-- com.facebook.presto.operator.scalar.TestColorFunctions -->
      <class name="com.facebook.presto.operator.TestFilterAndProjectOperator">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestFilterAndProjectOperator@1a530306]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAlignment()[pri:0, instance:com.facebook.presto.operator.TestFilterAndProjectOperator@1a530306]" name="testAlignment" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlignment -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestFilterAndProjectOperator@1a530306]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.facebook.presto.operator.TestFilterAndProjectOperator -->
      <class name="com.facebook.presto.execution.TestQueryIdGenerator">
        <test-method status="PASS" signature="testCreateNextQueryId()[pri:0, instance:com.facebook.presto.execution.TestQueryIdGenerator@3b97d96f]" name="testCreateNextQueryId" duration-ms="1998" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNextQueryId -->
      </class> <!-- com.facebook.presto.execution.TestQueryIdGenerator -->
      <class name="com.facebook.presto.serde.TestPagesSerde">
        <test-method status="PASS" signature="testRoundTrip()[pri:0, instance:com.facebook.presto.serde.TestPagesSerde@4d40cc82]" name="testRoundTrip" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoundTrip -->
      </class> <!-- com.facebook.presto.serde.TestPagesSerde -->
      <class name="com.facebook.presto.operator.aggregation.TestLongMaxAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMaxAggregation@32718e84]" name="testAllPositionsNull" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMaxAggregation@32718e84]" name="testMixedNullAndNonNullPositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMaxAggregation@32718e84]" name="testNegativeOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMaxAggregation@32718e84]" name="testMultiplePositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMaxAggregation@32718e84]" name="testNoPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMaxAggregation@32718e84]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMaxAggregation@32718e84]" name="testPartialWithMultiplePositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMaxAggregation@32718e84]" name="testPositiveOnlyValues" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMaxAggregation@32718e84]" name="testSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMaxAggregation@32718e84]" name="testVectorAllPositionsNull" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMaxAggregation@32718e84]" name="testVectorMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMaxAggregation@32718e84]" name="testVectorMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMaxAggregation@32718e84]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMaxAggregation@32718e84]" name="testVectorPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMaxAggregation@32718e84]" name="testVectorSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestLongMaxAggregation -->
      <class name="com.facebook.presto.operator.aggregation.TestLongStdDevAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevAggregation@1c5cf2f6]" name="testAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevAggregation@1c5cf2f6]" name="testMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevAggregation@1c5cf2f6]" name="testMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevAggregation@1c5cf2f6]" name="testNegativeOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevAggregation@1c5cf2f6]" name="testNoPositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevAggregation@1c5cf2f6]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevAggregation@1c5cf2f6]" name="testPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevAggregation@1c5cf2f6]" name="testPositiveOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevAggregation@1c5cf2f6]" name="testSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevAggregation@1c5cf2f6]" name="testVectorAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevAggregation@1c5cf2f6]" name="testVectorMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevAggregation@1c5cf2f6]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevAggregation@1c5cf2f6]" name="testVectorMultiplePositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevAggregation@1c5cf2f6]" name="testVectorPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongStdDevAggregation@1c5cf2f6]" name="testVectorSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestLongStdDevAggregation -->
      <class name="com.facebook.presto.operator.scalar.TestUnixTimeFunctions">
        <test-method status="PASS" signature="testCurrentTime()[pri:0, instance:com.facebook.presto.operator.scalar.TestUnixTimeFunctions@6a0e4b8a]" name="testCurrentTime" duration-ms="36" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCurrentTime -->
        <test-method status="PASS" signature="testDateAdd()[pri:0, instance:com.facebook.presto.operator.scalar.TestUnixTimeFunctions@6a0e4b8a]" name="testDateAdd" duration-ms="158" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDateAdd -->
        <test-method status="PASS" signature="testDateDiff()[pri:0, instance:com.facebook.presto.operator.scalar.TestUnixTimeFunctions@6a0e4b8a]" name="testDateDiff" duration-ms="172" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDateDiff -->
        <test-method status="PASS" signature="testDateFormat()[pri:0, instance:com.facebook.presto.operator.scalar.TestUnixTimeFunctions@6a0e4b8a]" name="testDateFormat" duration-ms="531" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDateFormat -->
        <test-method status="PASS" signature="testDateParse()[pri:0, instance:com.facebook.presto.operator.scalar.TestUnixTimeFunctions@6a0e4b8a]" name="testDateParse" duration-ms="175" started-at="2014-05-07T07:00:29Z" finished-at="2014-05-07T07:00:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDateParse -->
        <test-method status="PASS" signature="testExtract()[pri:0, instance:com.facebook.presto.operator.scalar.TestUnixTimeFunctions@6a0e4b8a]" name="testExtract" duration-ms="255" started-at="2014-05-07T07:00:29Z" finished-at="2014-05-07T07:00:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtract -->
        <test-method status="PASS" signature="testFormatDatetime()[pri:0, instance:com.facebook.presto.operator.scalar.TestUnixTimeFunctions@6a0e4b8a]" name="testFormatDatetime" duration-ms="36" started-at="2014-05-07T07:00:29Z" finished-at="2014-05-07T07:00:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFormatDatetime -->
        <test-method status="PASS" signature="testFromUnixTime()[pri:0, instance:com.facebook.presto.operator.scalar.TestUnixTimeFunctions@6a0e4b8a]" name="testFromUnixTime" duration-ms="35" started-at="2014-05-07T07:00:29Z" finished-at="2014-05-07T07:00:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromUnixTime -->
        <test-method status="PASS" signature="testParseDatetime()[pri:0, instance:com.facebook.presto.operator.scalar.TestUnixTimeFunctions@6a0e4b8a]" name="testParseDatetime" duration-ms="54" started-at="2014-05-07T07:00:29Z" finished-at="2014-05-07T07:00:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseDatetime -->
        <test-method status="PASS" signature="testPartFunctions()[pri:0, instance:com.facebook.presto.operator.scalar.TestUnixTimeFunctions@6a0e4b8a]" name="testPartFunctions" duration-ms="258" started-at="2014-05-07T07:00:29Z" finished-at="2014-05-07T07:00:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartFunctions -->
        <test-method status="PASS" signature="testToUnixTime()[pri:0, instance:com.facebook.presto.operator.scalar.TestUnixTimeFunctions@6a0e4b8a]" name="testToUnixTime" duration-ms="17" started-at="2014-05-07T07:00:30Z" finished-at="2014-05-07T07:00:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToUnixTime -->
      </class> <!-- com.facebook.presto.operator.scalar.TestUnixTimeFunctions -->
      <class name="com.facebook.presto.metadata.TestDatabaseLocalStorageManager">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.metadata.TestDatabaseLocalStorageManager@3d9958d6]" name="setup" is-config="true" duration-ms="14" started-at="2014-05-07T06:59:08Z" finished-at="2014-05-07T06:59:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testImportEmptySource()[pri:0, instance:com.facebook.presto.metadata.TestDatabaseLocalStorageManager@3d9958d6]" name="testImportEmptySource" duration-ms="13" started-at="2014-05-07T06:59:08Z" finished-at="2014-05-07T06:59:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImportEmptySource -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.metadata.TestDatabaseLocalStorageManager@3d9958d6]" name="tearDown" is-config="true" duration-ms="2" started-at="2014-05-07T06:59:08Z" finished-at="2014-05-07T06:59:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.metadata.TestDatabaseLocalStorageManager@3d9958d6]" name="setup" is-config="true" duration-ms="3" started-at="2014-05-07T06:59:08Z" finished-at="2014-05-07T06:59:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testImportFlow()[pri:0, instance:com.facebook.presto.metadata.TestDatabaseLocalStorageManager@3d9958d6]" name="testImportFlow" duration-ms="23" started-at="2014-05-07T06:59:08Z" finished-at="2014-05-07T06:59:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImportFlow -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.metadata.TestDatabaseLocalStorageManager@3d9958d6]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:08Z" finished-at="2014-05-07T06:59:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.metadata.TestDatabaseLocalStorageManager@3d9958d6]" name="setup" is-config="true" duration-ms="3" started-at="2014-05-07T06:59:08Z" finished-at="2014-05-07T06:59:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testShardPath()[pri:0, instance:com.facebook.presto.metadata.TestDatabaseLocalStorageManager@3d9958d6]" name="testShardPath" duration-ms="0" started-at="2014-05-07T06:59:08Z" finished-at="2014-05-07T06:59:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShardPath -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.metadata.TestDatabaseLocalStorageManager@3d9958d6]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:08Z" finished-at="2014-05-07T06:59:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.facebook.presto.metadata.TestDatabaseLocalStorageManager -->
      <class name="com.facebook.presto.operator.aggregation.TestDoubleVarianceAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVarianceAggregation@773d1d16]" name="testAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVarianceAggregation@773d1d16]" name="testMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVarianceAggregation@773d1d16]" name="testMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVarianceAggregation@773d1d16]" name="testNegativeOnlyValues" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVarianceAggregation@773d1d16]" name="testNoPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVarianceAggregation@773d1d16]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVarianceAggregation@773d1d16]" name="testPartialWithMultiplePositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVarianceAggregation@773d1d16]" name="testPositiveOnlyValues" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVarianceAggregation@773d1d16]" name="testSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVarianceAggregation@773d1d16]" name="testVectorAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVarianceAggregation@773d1d16]" name="testVectorMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVarianceAggregation@773d1d16]" name="testVectorMultiplePositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVarianceAggregation@773d1d16]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVarianceAggregation@773d1d16]" name="testVectorPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVarianceAggregation@773d1d16]" name="testVectorSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestDoubleVarianceAggregation -->
      <class name="com.facebook.presto.operator.TestLimitOperator">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestLimitOperator@1bc135b]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testLimitWithBlockView()[pri:0, instance:com.facebook.presto.operator.TestLimitOperator@1bc135b]" name="testLimitWithBlockView" duration-ms="0" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLimitWithBlockView -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestLimitOperator@1bc135b]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testLimitWithPageAlignment()[pri:0, instance:com.facebook.presto.operator.TestLimitOperator@1bc135b]" name="testLimitWithPageAlignment" duration-ms="0" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLimitWithPageAlignment -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestLimitOperator@1bc135b]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestLimitOperator@1bc135b]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.facebook.presto.operator.TestLimitOperator -->
      <class name="com.facebook.presto.operator.TestAggregationOperator">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestAggregationOperator@20fcfc67]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAggregation()[pri:0, instance:com.facebook.presto.operator.TestAggregationOperator@20fcfc67]" name="testAggregation" duration-ms="4" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAggregation -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestAggregationOperator@20fcfc67]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T06:58:48Z" finished-at="2014-05-07T06:58:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.facebook.presto.operator.TestAggregationOperator -->
      <class name="com.facebook.presto.serde.TestFileBlocksSerde">
        <test-method status="PASS" signature="testRoundTrip()[pri:0, instance:com.facebook.presto.serde.TestFileBlocksSerde@4ad70ab0]" name="testRoundTrip" duration-ms="5" started-at="2014-05-07T07:00:10Z" finished-at="2014-05-07T07:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoundTrip -->
      </class> <!-- com.facebook.presto.serde.TestFileBlocksSerde -->
      <class name="com.facebook.presto.operator.aggregation.TestDoubleStdDevPopAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevPopAggregation@5f9a5d3d]" name="testAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevPopAggregation@5f9a5d3d]" name="testMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevPopAggregation@5f9a5d3d]" name="testMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevPopAggregation@5f9a5d3d]" name="testNegativeOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevPopAggregation@5f9a5d3d]" name="testNoPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevPopAggregation@5f9a5d3d]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevPopAggregation@5f9a5d3d]" name="testPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevPopAggregation@5f9a5d3d]" name="testPositiveOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevPopAggregation@5f9a5d3d]" name="testSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevPopAggregation@5f9a5d3d]" name="testVectorAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevPopAggregation@5f9a5d3d]" name="testVectorMixedNullAndNonNullPositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevPopAggregation@5f9a5d3d]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevPopAggregation@5f9a5d3d]" name="testVectorMultiplePositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevPopAggregation@5f9a5d3d]" name="testVectorPartialWithMultiplePositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleStdDevPopAggregation@5f9a5d3d]" name="testVectorSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestDoubleStdDevPopAggregation -->
      <class name="com.facebook.presto.serde.TestTupleInfoSerde">
        <test-method status="PASS" signature="testRoundTrip()[pri:0, instance:com.facebook.presto.serde.TestTupleInfoSerde@2770cd42]" name="testRoundTrip" duration-ms="0" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoundTrip -->
      </class> <!-- com.facebook.presto.serde.TestTupleInfoSerde -->
      <class name="com.facebook.presto.operator.scalar.TestMathFunctions">
        <test-method status="PASS" signature="testAbs()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testAbs" duration-ms="176" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAbs -->
        <test-method status="PASS" signature="testAcos()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testAcos" duration-ms="87" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAcos -->
        <test-method status="PASS" signature="testAsin()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testAsin" duration-ms="82" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAsin -->
        <test-method status="PASS" signature="testAtan()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testAtan" duration-ms="81" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAtan -->
        <test-method status="PASS" signature="testAtan2()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testAtan2" duration-ms="82" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAtan2 -->
        <test-method status="PASS" signature="testCbrt()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testCbrt" duration-ms="79" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCbrt -->
        <test-method status="PASS" signature="testCeil()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testCeil" duration-ms="255" started-at="2014-05-07T07:00:13Z" finished-at="2014-05-07T07:00:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCeil -->
        <test-method status="PASS" signature="testCos()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testCos" duration-ms="78" started-at="2014-05-07T07:00:14Z" finished-at="2014-05-07T07:00:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCos -->
        <test-method status="PASS" signature="testCosh()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testCosh" duration-ms="78" started-at="2014-05-07T07:00:14Z" finished-at="2014-05-07T07:00:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCosh -->
        <test-method status="PASS" signature="testE()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testE" duration-ms="20" started-at="2014-05-07T07:00:14Z" finished-at="2014-05-07T07:00:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testE -->
        <test-method status="PASS" signature="testExp()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testExp" duration-ms="78" started-at="2014-05-07T07:00:14Z" finished-at="2014-05-07T07:00:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExp -->
        <test-method status="PASS" signature="testFloor()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testFloor" duration-ms="116" started-at="2014-05-07T07:00:14Z" finished-at="2014-05-07T07:00:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFloor -->
        <test-method status="PASS" signature="testInfinity()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testInfinity" duration-ms="39" started-at="2014-05-07T07:00:14Z" finished-at="2014-05-07T07:00:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInfinity -->
        <test-method status="PASS" signature="testIsFinite()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testIsFinite" duration-ms="40" started-at="2014-05-07T07:00:14Z" finished-at="2014-05-07T07:00:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsFinite -->
        <test-method status="PASS" signature="testIsInfinite()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testIsInfinite" duration-ms="59" started-at="2014-05-07T07:00:14Z" finished-at="2014-05-07T07:00:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsInfinite -->
        <test-method status="PASS" signature="testIsNaN()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testIsNaN" duration-ms="79" started-at="2014-05-07T07:00:14Z" finished-at="2014-05-07T07:00:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsNaN -->
        <test-method status="PASS" signature="testLn()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testLn" duration-ms="96" started-at="2014-05-07T07:00:14Z" finished-at="2014-05-07T07:00:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLn -->
        <test-method status="PASS" signature="testLog()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testLog" duration-ms="321" started-at="2014-05-07T07:00:14Z" finished-at="2014-05-07T07:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLog -->
        <test-method status="PASS" signature="testLog10()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testLog10" duration-ms="79" started-at="2014-05-07T07:00:15Z" finished-at="2014-05-07T07:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLog10 -->
        <test-method status="PASS" signature="testLog2()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testLog2" duration-ms="80" started-at="2014-05-07T07:00:15Z" finished-at="2014-05-07T07:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLog2 -->
        <test-method status="PASS" signature="testMod()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testMod" duration-ms="2220" started-at="2014-05-07T07:00:15Z" finished-at="2014-05-07T07:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMod -->
        <test-method status="PASS" signature="testNaN()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testNaN" duration-ms="40" started-at="2014-05-07T07:00:17Z" finished-at="2014-05-07T07:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNaN -->
        <test-method status="PASS" signature="testPi()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testPi" duration-ms="20" started-at="2014-05-07T07:00:17Z" finished-at="2014-05-07T07:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPi -->
        <test-method status="PASS" signature="testPow()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testPow" duration-ms="2352" started-at="2014-05-07T07:00:17Z" finished-at="2014-05-07T07:00:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPow -->
        <test-method status="PASS" signature="testRandom()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testRandom" duration-ms="41" started-at="2014-05-07T07:00:19Z" finished-at="2014-05-07T07:00:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRandom -->
        <test-method status="PASS" signature="testRound()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testRound" duration-ms="842" started-at="2014-05-07T07:00:19Z" finished-at="2014-05-07T07:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRound -->
        <test-method status="PASS" signature="testSin()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testSin" duration-ms="96" started-at="2014-05-07T07:00:20Z" finished-at="2014-05-07T07:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSin -->
        <test-method status="PASS" signature="testSqrt()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testSqrt" duration-ms="88" started-at="2014-05-07T07:00:20Z" finished-at="2014-05-07T07:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSqrt -->
        <test-method status="PASS" signature="testTan()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testTan" duration-ms="63" started-at="2014-05-07T07:00:20Z" finished-at="2014-05-07T07:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTan -->
        <test-method status="PASS" signature="testTanh()[pri:0, instance:com.facebook.presto.operator.scalar.TestMathFunctions@f5f80d4]" name="testTanh" duration-ms="63" started-at="2014-05-07T07:00:20Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTanh -->
      </class> <!-- com.facebook.presto.operator.scalar.TestMathFunctions -->
      <class name="com.facebook.presto.operator.aggregation.TestApproximateCountDistinctVarBinary">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestApproximateCountDistinctVarBinary@533c53da]" name="testAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:40Z" finished-at="2014-05-07T06:56:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullsAndNonNulls()[pri:0, instance:com.facebook.presto.operator.aggregation.TestApproximateCountDistinctVarBinary@533c53da]" name="testMixedNullsAndNonNulls" duration-ms="205" started-at="2014-05-07T06:56:40Z" finished-at="2014-05-07T06:56:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullsAndNonNulls -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestApproximateCountDistinctVarBinary@533c53da]" name="testMultiplePositions" duration-ms="5694" started-at="2014-05-07T06:56:40Z" finished-at="2014-05-07T06:56:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testMultiplePositionsPartial()[pri:0, instance:com.facebook.presto.operator.aggregation.TestApproximateCountDistinctVarBinary@533c53da]" name="testMultiplePositionsPartial" duration-ms="2072" started-at="2014-05-07T06:56:46Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositionsPartial -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestApproximateCountDistinctVarBinary@533c53da]" name="testNoPositions" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestApproximateCountDistinctVarBinary@533c53da]" name="testSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestApproximateCountDistinctVarBinary -->
      <class name="com.facebook.presto.operator.scalar.TestUrlFunctions">
        <test-method status="PASS" signature="testUrlExtract()[pri:0, instance:com.facebook.presto.operator.scalar.TestUrlFunctions@145bacb2]" name="testUrlExtract" duration-ms="982" started-at="2014-05-07T07:00:30Z" finished-at="2014-05-07T07:00:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUrlExtract -->
        <test-method status="PASS" signature="testUrlExtractParameter()[pri:0, instance:com.facebook.presto.operator.scalar.TestUrlFunctions@145bacb2]" name="testUrlExtractParameter" duration-ms="159" started-at="2014-05-07T07:00:31Z" finished-at="2014-05-07T07:00:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUrlExtractParameter -->
      </class> <!-- com.facebook.presto.operator.scalar.TestUrlFunctions -->
      <class name="com.facebook.presto.metadata.TestNativeMetadata">
        <test-method status="PASS" signature="setupDatabase()[pri:0, instance:com.facebook.presto.metadata.TestNativeMetadata@1550a3c]" name="setupDatabase" is-config="true" duration-ms="18" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupDatabase -->
        <test-method status="PASS" signature="testCreateTable()[pri:0, instance:com.facebook.presto.metadata.TestNativeMetadata@1550a3c]" name="testCreateTable" duration-ms="5" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTable -->
        <test-method status="PASS" signature="setupDatabase()[pri:0, instance:com.facebook.presto.metadata.TestNativeMetadata@1550a3c]" name="setupDatabase" is-config="true" duration-ms="5" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupDatabase -->
        <test-method status="PASS" signature="cleanupDatabase()[pri:0, instance:com.facebook.presto.metadata.TestNativeMetadata@1550a3c]" name="cleanupDatabase" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanupDatabase -->
        <test-method status="PASS" signature="testListTableColumns()[pri:0, instance:com.facebook.presto.metadata.TestNativeMetadata@1550a3c]" name="testListTableColumns" duration-ms="4" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListTableColumns -->
        <test-method status="PASS" signature="cleanupDatabase()[pri:0, instance:com.facebook.presto.metadata.TestNativeMetadata@1550a3c]" name="cleanupDatabase" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanupDatabase -->
        <test-method status="PASS" signature="setupDatabase()[pri:0, instance:com.facebook.presto.metadata.TestNativeMetadata@1550a3c]" name="setupDatabase" is-config="true" duration-ms="5" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupDatabase -->
        <test-method status="PASS" signature="testListTableColumnsFiltering()[pri:0, instance:com.facebook.presto.metadata.TestNativeMetadata@1550a3c]" name="testListTableColumnsFiltering" duration-ms="5" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListTableColumnsFiltering -->
        <test-method status="PASS" signature="cleanupDatabase()[pri:0, instance:com.facebook.presto.metadata.TestNativeMetadata@1550a3c]" name="cleanupDatabase" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanupDatabase -->
        <test-method status="PASS" signature="setupDatabase()[pri:0, instance:com.facebook.presto.metadata.TestNativeMetadata@1550a3c]" name="setupDatabase" is-config="true" duration-ms="5" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupDatabase -->
        <test-method status="PASS" signature="testListTables()[pri:0, instance:com.facebook.presto.metadata.TestNativeMetadata@1550a3c]" name="testListTables" duration-ms="3" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListTables -->
        <test-method status="PASS" signature="cleanupDatabase()[pri:0, instance:com.facebook.presto.metadata.TestNativeMetadata@1550a3c]" name="cleanupDatabase" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanupDatabase -->
      </class> <!-- com.facebook.presto.metadata.TestNativeMetadata -->
      <class name="com.facebook.presto.operator.aggregation.TestCountIfAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountIfAggregation@1e976932]" name="testAllPositionsNull" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountIfAggregation@1e976932]" name="testMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountIfAggregation@1e976932]" name="testMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountIfAggregation@1e976932]" name="testNegativeOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountIfAggregation@1e976932]" name="testNoPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountIfAggregation@1e976932]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountIfAggregation@1e976932]" name="testPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountIfAggregation@1e976932]" name="testPositiveOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountIfAggregation@1e976932]" name="testSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountIfAggregation@1e976932]" name="testVectorAllPositionsNull" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountIfAggregation@1e976932]" name="testVectorMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountIfAggregation@1e976932]" name="testVectorMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountIfAggregation@1e976932]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountIfAggregation@1e976932]" name="testVectorPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountIfAggregation@1e976932]" name="testVectorSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestCountIfAggregation -->
      <class name="com.facebook.presto.execution.TestStageStats">
        <test-method status="PASS" signature="testJson()[pri:0, instance:com.facebook.presto.execution.TestStageStats@a6c7fc]" name="testJson" duration-ms="12" started-at="2014-05-07T07:00:26Z" finished-at="2014-05-07T07:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJson -->
      </class> <!-- com.facebook.presto.execution.TestStageStats -->
      <class name="com.facebook.presto.metadata.TestDiscoveryNodeManager">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.metadata.TestDiscoveryNodeManager@3feb8c6a]" name="setup" is-config="true" duration-ms="2" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGetAllNodes()[pri:0, instance:com.facebook.presto.metadata.TestDiscoveryNodeManager@3feb8c6a]" name="testGetAllNodes" duration-ms="1" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllNodes -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.metadata.TestDiscoveryNodeManager@3feb8c6a]" name="setup" is-config="true" duration-ms="0" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGetCurrentNode()[pri:0, instance:com.facebook.presto.metadata.TestDiscoveryNodeManager@3feb8c6a]" name="testGetCurrentNode" duration-ms="1" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCurrentNode -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.metadata.TestDiscoveryNodeManager@3feb8c6a]" name="setup" is-config="true" duration-ms="1" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGetCurrentNodeRequired()[pri:0, instance:com.facebook.presto.metadata.TestDiscoveryNodeManager@3feb8c6a]" name="testGetCurrentNodeRequired" duration-ms="1" started-at="2014-05-07T06:59:09Z" finished-at="2014-05-07T06:59:09Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[INVARIANT: current node not returned from service selector]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: INVARIANT: current node not returned from service selector
	at com.google.common.base.Preconditions.checkState(Preconditions.java:150)
	at com.facebook.presto.metadata.DiscoveryNodeManager.refreshNodes(DiscoveryNodeManager.java:129)
	at com.facebook.presto.metadata.DiscoveryNodeManager.<init>(DiscoveryNodeManager.java:75)
	at com.facebook.presto.metadata.TestDiscoveryNodeManager.testGetCurrentNodeRequired(TestDiscoveryNodeManager.java:116)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCurrentNodeRequired -->
      </class> <!-- com.facebook.presto.metadata.TestDiscoveryNodeManager -->
      <class name="com.facebook.presto.operator.scalar.TestJsonExtract">
        <test-method status="PASS" signature="testArrayElementJsonExtractor()[pri:0, instance:com.facebook.presto.operator.scalar.TestJsonExtract@48a5598d]" name="testArrayElementJsonExtractor" duration-ms="0" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArrayElementJsonExtractor -->
        <test-method status="PASS" signature="testFullJsonExtract()[pri:0, instance:com.facebook.presto.operator.scalar.TestJsonExtract@48a5598d]" name="testFullJsonExtract" duration-ms="2" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFullJsonExtract -->
        <test-method status="PASS" signature="testFullScalarExtract()[pri:0, instance:com.facebook.presto.operator.scalar.TestJsonExtract@48a5598d]" name="testFullScalarExtract" duration-ms="2" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFullScalarExtract -->
        <test-method status="PASS" signature="testInvalidJsonPath1()[pri:0, instance:com.facebook.presto.operator.scalar.TestJsonExtract@48a5598d]" name="testInvalidJsonPath1" duration-ms="1" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid/unsupported JSON path: '$.']]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid/unsupported JSON path: '$.'
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:120)
	at com.facebook.presto.operator.scalar.JsonExtract.tokenizePath(JsonExtract.java:199)
	at com.facebook.presto.operator.scalar.JsonExtract.generateExtractor(JsonExtract.java:210)
	at com.facebook.presto.operator.scalar.TestJsonExtract.doScalarExtract(TestJsonExtract.java:191)
	at com.facebook.presto.operator.scalar.TestJsonExtract.testInvalidJsonPath1(TestJsonExtract.java:161)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidJsonPath1 -->
        <test-method status="PASS" signature="testInvalidJsonPath2()[pri:0, instance:com.facebook.presto.operator.scalar.TestJsonExtract@48a5598d]" name="testInvalidJsonPath2" duration-ms="0" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid/unsupported JSON path: '$.fuu..bar']]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid/unsupported JSON path: '$.fuu..bar'
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:120)
	at com.facebook.presto.operator.scalar.JsonExtract.tokenizePath(JsonExtract.java:199)
	at com.facebook.presto.operator.scalar.JsonExtract.generateExtractor(JsonExtract.java:210)
	at com.facebook.presto.operator.scalar.TestJsonExtract.doScalarExtract(TestJsonExtract.java:191)
	at com.facebook.presto.operator.scalar.TestJsonExtract.testInvalidJsonPath2(TestJsonExtract.java:168)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidJsonPath2 -->
        <test-method status="PASS" signature="testInvalidJsonPath3()[pri:0, instance:com.facebook.presto.operator.scalar.TestJsonExtract@48a5598d]" name="testInvalidJsonPath3" duration-ms="0" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid/unsupported JSON path: '$.bar[2][-1]']]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid/unsupported JSON path: '$.bar[2][-1]'
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:120)
	at com.facebook.presto.operator.scalar.JsonExtract.tokenizePath(JsonExtract.java:199)
	at com.facebook.presto.operator.scalar.JsonExtract.generateExtractor(JsonExtract.java:210)
	at com.facebook.presto.operator.scalar.TestJsonExtract.doScalarExtract(TestJsonExtract.java:191)
	at com.facebook.presto.operator.scalar.TestJsonExtract.testInvalidJsonPath3(TestJsonExtract.java:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidJsonPath3 -->
        <test-method status="PASS" signature="testJsonVaueJsonExtractor()[pri:0, instance:com.facebook.presto.operator.scalar.TestJsonExtract@48a5598d]" name="testJsonVaueJsonExtractor" duration-ms="1" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJsonVaueJsonExtractor -->
        <test-method status="PASS" signature="testObjectFieldJsonExtractor()[pri:0, instance:com.facebook.presto.operator.scalar.TestJsonExtract@48a5598d]" name="testObjectFieldJsonExtractor" duration-ms="1" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testObjectFieldJsonExtractor -->
        <test-method status="PASS" signature="testScalarVaueJsonExtractor()[pri:0, instance:com.facebook.presto.operator.scalar.TestJsonExtract@48a5598d]" name="testScalarVaueJsonExtractor" duration-ms="1" started-at="2014-05-07T07:00:11Z" finished-at="2014-05-07T07:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScalarVaueJsonExtractor -->
      </class> <!-- com.facebook.presto.operator.scalar.TestJsonExtract -->
      <class name="com.facebook.presto.operator.aggregation.TestLongVarianceAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVarianceAggregation@7612e9d2]" name="testAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVarianceAggregation@7612e9d2]" name="testMixedNullAndNonNullPositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVarianceAggregation@7612e9d2]" name="testNegativeOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVarianceAggregation@7612e9d2]" name="testMultiplePositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVarianceAggregation@7612e9d2]" name="testNoPositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVarianceAggregation@7612e9d2]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVarianceAggregation@7612e9d2]" name="testPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVarianceAggregation@7612e9d2]" name="testPositiveOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVarianceAggregation@7612e9d2]" name="testSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVarianceAggregation@7612e9d2]" name="testVectorAllPositionsNull" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVarianceAggregation@7612e9d2]" name="testVectorMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVarianceAggregation@7612e9d2]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVarianceAggregation@7612e9d2]" name="testVectorMultiplePositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVarianceAggregation@7612e9d2]" name="testVectorPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongVarianceAggregation@7612e9d2]" name="testVectorSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestLongVarianceAggregation -->
      <class name="com.facebook.presto.execution.TestQueryStats">
        <test-method status="PASS" signature="testJson()[pri:0, instance:com.facebook.presto.execution.TestQueryStats@2e302754]" name="testJson" duration-ms="24" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJson -->
      </class> <!-- com.facebook.presto.execution.TestQueryStats -->
      <class name="com.facebook.presto.operator.aggregation.TestCountAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountAggregation@52b9ac0c]" name="testAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountAggregation@52b9ac0c]" name="testMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountAggregation@52b9ac0c]" name="testMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountAggregation@52b9ac0c]" name="testNegativeOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountAggregation@52b9ac0c]" name="testNoPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountAggregation@52b9ac0c]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountAggregation@52b9ac0c]" name="testPartialWithMultiplePositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountAggregation@52b9ac0c]" name="testPositiveOnlyValues" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountAggregation@52b9ac0c]" name="testSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountAggregation@52b9ac0c]" name="testVectorAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountAggregation@52b9ac0c]" name="testVectorMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountAggregation@52b9ac0c]" name="testVectorMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountAggregation@52b9ac0c]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountAggregation@52b9ac0c]" name="testVectorPartialWithMultiplePositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestCountAggregation@52b9ac0c]" name="testVectorSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestCountAggregation -->
      <class name="com.facebook.presto.operator.aggregation.TestLongMinAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMinAggregation@30b499c]" name="testAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMinAggregation@30b499c]" name="testMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMinAggregation@30b499c]" name="testMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMinAggregation@30b499c]" name="testNegativeOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMinAggregation@30b499c]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMinAggregation@30b499c]" name="testNoPositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMinAggregation@30b499c]" name="testPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMinAggregation@30b499c]" name="testPositiveOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMinAggregation@30b499c]" name="testVectorAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMinAggregation@30b499c]" name="testSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMinAggregation@30b499c]" name="testVectorMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMinAggregation@30b499c]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMinAggregation@30b499c]" name="testVectorMultiplePositions" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMinAggregation@30b499c]" name="testVectorPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestLongMinAggregation@30b499c]" name="testVectorSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestLongMinAggregation -->
      <class name="com.facebook.presto.metadata.TestShardManagerDao">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.metadata.TestShardManagerDao@62b84cb8]" name="setup" is-config="true" duration-ms="11" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNodeInsert()[pri:0, instance:com.facebook.presto.metadata.TestShardManagerDao@62b84cb8]" name="testNodeInsert" duration-ms="1" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNodeInsert -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.metadata.TestShardManagerDao@62b84cb8]" name="teardown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.metadata.TestShardManagerDao@62b84cb8]" name="setup" is-config="true" duration-ms="10" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testPartitionKey()[pri:0, instance:com.facebook.presto.metadata.TestShardManagerDao@62b84cb8]" name="testPartitionKey" duration-ms="3" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartitionKey -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.metadata.TestShardManagerDao@62b84cb8]" name="teardown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.metadata.TestShardManagerDao@62b84cb8]" name="setup" is-config="true" duration-ms="11" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testShardSelection()[pri:0, instance:com.facebook.presto.metadata.TestShardManagerDao@62b84cb8]" name="testShardSelection" duration-ms="7" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShardSelection -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.metadata.TestShardManagerDao@62b84cb8]" name="teardown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.facebook.presto.metadata.TestShardManagerDao@62b84cb8]" name="setup" is-config="true" duration-ms="11" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.facebook.presto.metadata.TestShardManagerDao@62b84cb8]" name="teardown" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="testTableCreation()[pri:0, instance:com.facebook.presto.metadata.TestShardManagerDao@62b84cb8]" name="testTableCreation" duration-ms="0" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTableCreation -->
      </class> <!-- com.facebook.presto.metadata.TestShardManagerDao -->
      <class name="com.facebook.presto.serde.TestSnappyBlockSerde">
        <test-method status="PASS" signature="testLotsOfStuff()[pri:0, instance:com.facebook.presto.serde.TestSnappyBlockSerde@3b11d63f]" name="testLotsOfStuff" duration-ms="15" started-at="2014-05-07T07:00:24Z" finished-at="2014-05-07T07:00:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLotsOfStuff -->
        <test-method status="PASS" signature="testRoundTrip()[pri:0, instance:com.facebook.presto.serde.TestSnappyBlockSerde@3b11d63f]" name="testRoundTrip" duration-ms="0" started-at="2014-05-07T07:00:24Z" finished-at="2014-05-07T07:00:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoundTrip -->
      </class> <!-- com.facebook.presto.serde.TestSnappyBlockSerde -->
      <class name="com.facebook.presto.operator.TestWindowOperator">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestWindowOperator@9899472]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMemoryLimit()[pri:0, instance:com.facebook.presto.operator.TestWindowOperator@9899472]" name="testMemoryLimit" duration-ms="0" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Task exceeded max memory size of 10B]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Task exceeded max memory size of 10B
	at com.google.common.base.Preconditions.checkState(Preconditions.java:177)
	at com.facebook.presto.operator.OperatorContext.setMemoryReservation(OperatorContext.java:203)
	at com.facebook.presto.operator.PagesIndex.addPage(PagesIndex.java:77)
	at com.facebook.presto.operator.WindowOperator.addInput(WindowOperator.java:222)
	at com.facebook.presto.operator.OperatorAssertion.toPages(OperatorAssertion.java:55)
	at com.facebook.presto.operator.TestWindowOperator.testMemoryLimit(TestWindowOperator.java:217)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMemoryLimit -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestWindowOperator@9899472]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestWindowOperator@9899472]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testRowNumber()[pri:0, instance:com.facebook.presto.operator.TestWindowOperator@9899472]" name="testRowNumber" duration-ms="1" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRowNumber -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestWindowOperator@9899472]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testRowNumberArbitrary()[pri:0, instance:com.facebook.presto.operator.TestWindowOperator@9899472]" name="testRowNumberArbitrary" duration-ms="1" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRowNumberArbitrary -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestWindowOperator@9899472]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestWindowOperator@9899472]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.operator.TestWindowOperator@9899472]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testRowNumberPartition()[pri:0, instance:com.facebook.presto.operator.TestWindowOperator@9899472]" name="testRowNumberPartition" duration-ms="0" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRowNumberPartition -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.facebook.presto.operator.TestWindowOperator@9899472]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:32Z" finished-at="2014-05-07T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.facebook.presto.operator.TestWindowOperator -->
      <class name="com.facebook.presto.block.dictionary.TestPackedLongSerde">
        <test-method status="PASS" signature="testAligned()[pri:0, instance:com.facebook.presto.block.dictionary.TestPackedLongSerde@4113a03d]" name="testAligned" duration-ms="3" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAligned -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.block.dictionary.TestPackedLongSerde@4113a03d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.block.dictionary.TestPackedLongSerde@4113a03d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testEmpty()[pri:0, instance:com.facebook.presto.block.dictionary.TestPackedLongSerde@4113a03d]" name="testEmpty" duration-ms="1" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmpty -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.block.dictionary.TestPackedLongSerde@4113a03d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFullLong()[pri:0, instance:com.facebook.presto.block.dictionary.TestPackedLongSerde@4113a03d]" name="testFullLong" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFullLong -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.block.dictionary.TestPackedLongSerde@4113a03d]" name="setUp" is-config="true" duration-ms="1" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testLowDensity()[pri:0, instance:com.facebook.presto.block.dictionary.TestPackedLongSerde@4113a03d]" name="testLowDensity" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLowDensity -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.block.dictionary.TestPackedLongSerde@4113a03d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testUnaligned()[pri:0, instance:com.facebook.presto.block.dictionary.TestPackedLongSerde@4113a03d]" name="testUnaligned" duration-ms="0" started-at="2014-05-07T07:00:21Z" finished-at="2014-05-07T07:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnaligned -->
      </class> <!-- com.facebook.presto.block.dictionary.TestPackedLongSerde -->
      <class name="com.facebook.presto.util.TestThreadLocalCache">
        <test-method status="PASS" signature="testDisallowsNulls()[pri:0, instance:com.facebook.presto.util.TestThreadLocalCache@48a5d3d5]" name="testDisallowsNulls" duration-ms="1" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[value must not be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: value must not be null
	at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:209)
	at com.facebook.presto.util.ThreadLocalCache.get(ThreadLocalCache.java:70)
	at com.facebook.presto.util.TestThreadLocalCache.testDisallowsNulls(TestThreadLocalCache.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:158)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:86)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDisallowsNulls -->
        <test-method status="PASS" signature="testSanity()[pri:0, instance:com.facebook.presto.util.TestThreadLocalCache@48a5d3d5]" name="testSanity" duration-ms="1" started-at="2014-05-07T07:00:28Z" finished-at="2014-05-07T07:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSanity -->
      </class> <!-- com.facebook.presto.util.TestThreadLocalCache -->
      <class name="com.facebook.presto.execution.TestSharedBuffer">
        <test-method status="PASS" signature="testAbort()[pri:0, instance:com.facebook.presto.execution.TestSharedBuffer@3c1df42e]" name="testAbort" duration-ms="3" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAbort -->
        <test-method status="PASS" signature="testAbortFreesReader()[pri:0, instance:com.facebook.presto.execution.TestSharedBuffer@3c1df42e]" name="testAbortFreesReader" duration-ms="206" started-at="2014-05-07T07:00:23Z" finished-at="2014-05-07T07:00:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAbortFreesReader -->
        <test-method status="PASS" signature="testAddQueueAfterDestroy()[pri:0, instance:com.facebook.presto.execution.TestSharedBuffer@3c1df42e]" name="testAddQueueAfterDestroy" duration-ms="0" started-at="2014-05-07T07:00:24Z" finished-at="2014-05-07T07:00:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddQueueAfterDestroy -->
        <test-method status="PASS" signature="testDestroyFreesReader()[pri:0, instance:com.facebook.presto.execution.TestSharedBuffer@3c1df42e]" name="testDestroyFreesReader" duration-ms="206" started-at="2014-05-07T07:00:24Z" finished-at="2014-05-07T07:00:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDestroyFreesReader -->
        <test-method status="PASS" signature="testAddQueueAfterNoMoreQueues()[pri:0, instance:com.facebook.presto.execution.TestSharedBuffer@3c1df42e]" name="testAddQueueAfterNoMoreQueues" duration-ms="0" started-at="2014-05-07T07:00:24Z" finished-at="2014-05-07T07:00:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddQueueAfterNoMoreQueues -->
        <test-method status="PASS" signature="testAddStateMachine()[pri:0, instance:com.facebook.presto.execution.TestSharedBuffer@3c1df42e]" name="testAddStateMachine" duration-ms="0" started-at="2014-05-07T07:00:24Z" finished-at="2014-05-07T07:00:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStateMachine -->
        <test-method status="PASS" signature="testDestroyFreesWriter()[pri:0, instance:com.facebook.presto.execution.TestSharedBuffer@3c1df42e]" name="testDestroyFreesWriter" duration-ms="206" started-at="2014-05-07T07:00:24Z" finished-at="2014-05-07T07:00:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDestroyFreesWriter -->
        <test-method status="PASS" signature="testDuplicateRequests()[pri:0, instance:com.facebook.presto.execution.TestSharedBuffer@3c1df42e]" name="testDuplicateRequests" duration-ms="1" started-at="2014-05-07T07:00:24Z" finished-at="2014-05-07T07:00:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDuplicateRequests -->
        <test-method status="PASS" signature="testFinishFreesReader()[pri:0, instance:com.facebook.presto.execution.TestSharedBuffer@3c1df42e]" name="testFinishFreesReader" duration-ms="206" started-at="2014-05-07T07:00:24Z" finished-at="2014-05-07T07:00:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFinishFreesReader -->
        <test-method status="PASS" signature="testFinishClosesEmptyQueues()[pri:0, instance:com.facebook.presto.execution.TestSharedBuffer@3c1df42e]" name="testFinishClosesEmptyQueues" duration-ms="0" started-at="2014-05-07T07:00:24Z" finished-at="2014-05-07T07:00:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFinishClosesEmptyQueues -->
        <test-method status="PASS" signature="testFinishFreesWriter()[pri:0, instance:com.facebook.presto.execution.TestSharedBuffer@3c1df42e]" name="testFinishFreesWriter" duration-ms="206" started-at="2014-05-07T07:00:24Z" finished-at="2014-05-07T07:00:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFinishFreesWriter -->
        <test-method status="PASS" signature="testOperationsOnUnknownQueues()[pri:0, instance:com.facebook.presto.execution.TestSharedBuffer@3c1df42e]" name="testOperationsOnUnknownQueues" duration-ms="1" started-at="2014-05-07T07:00:24Z" finished-at="2014-05-07T07:00:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOperationsOnUnknownQueues -->
        <test-method status="PASS" signature="testInvalidConstructorArg()[pri:0, instance:com.facebook.presto.execution.TestSharedBuffer@3c1df42e]" name="testInvalidConstructorArg" duration-ms="0" started-at="2014-05-07T07:00:24Z" finished-at="2014-05-07T07:00:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidConstructorArg -->
        <test-method status="PASS" signature="testSimple()[pri:0, instance:com.facebook.presto.execution.TestSharedBuffer@3c1df42e]" name="testSimple" duration-ms="2" started-at="2014-05-07T07:00:24Z" finished-at="2014-05-07T07:00:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimple -->
      </class> <!-- com.facebook.presto.execution.TestSharedBuffer -->
      <class name="com.facebook.presto.block.uncompressed.TestUncompressedDoubleBlockCursor">
        <test-method status="PASS" signature="testAdvanceNextPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedDoubleBlockCursor@4cca17e2]" name="testAdvanceNextPosition" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceNextPosition -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedDoubleBlockCursor@4cca17e2]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAdvanceToPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedDoubleBlockCursor@4cca17e2]" name="testAdvanceToPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceToPosition -->
        <test-method status="PASS" signature="testFirstPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedDoubleBlockCursor@4cca17e2]" name="testFirstPosition" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstPosition -->
        <test-method status="PASS" signature="testStates()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedDoubleBlockCursor@4cca17e2]" name="testStates" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStates -->
        <test-method status="PASS" signature="testCursorType()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedDoubleBlockCursor@4cca17e2]" name="testCursorType" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCursorType -->
      </class> <!-- com.facebook.presto.block.uncompressed.TestUncompressedDoubleBlockCursor -->
      <class name="com.facebook.presto.operator.aggregation.TestDoubleVariancePopAggregation">
        <test-method status="PASS" signature="testAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVariancePopAggregation@459371b9]" name="testAllPositionsNull" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllPositionsNull -->
        <test-method status="PASS" signature="testMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVariancePopAggregation@459371b9]" name="testMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVariancePopAggregation@459371b9]" name="testMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplePositions -->
        <test-method status="PASS" signature="testNegativeOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVariancePopAggregation@459371b9]" name="testNegativeOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeOnlyValues -->
        <test-method status="PASS" signature="testNoPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVariancePopAggregation@459371b9]" name="testNoPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoPositions -->
        <test-method status="PASS" signature="testPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVariancePopAggregation@459371b9]" name="testPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVariancePopAggregation@459371b9]" name="testPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testPositiveOnlyValues()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVariancePopAggregation@459371b9]" name="testPositiveOnlyValues" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveOnlyValues -->
        <test-method status="PASS" signature="testSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVariancePopAggregation@459371b9]" name="testSinglePosition" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSinglePosition -->
        <test-method status="PASS" signature="testVectorMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVariancePopAggregation@459371b9]" name="testVectorMixedNullAndNonNullPositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorAllPositionsNull()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVariancePopAggregation@459371b9]" name="testVectorAllPositionsNull" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorAllPositionsNull -->
        <test-method status="PASS" signature="testVectorMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVariancePopAggregation@459371b9]" name="testVectorMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiplePositions -->
        <test-method status="PASS" signature="testVectorPartialWithMixedNullAndNonNullPositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVariancePopAggregation@459371b9]" name="testVectorPartialWithMixedNullAndNonNullPositions" duration-ms="2" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMixedNullAndNonNullPositions -->
        <test-method status="PASS" signature="testVectorPartialWithMultiplePositions()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVariancePopAggregation@459371b9]" name="testVectorPartialWithMultiplePositions" duration-ms="1" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorPartialWithMultiplePositions -->
        <test-method status="PASS" signature="testVectorSinglePosition()[pri:0, instance:com.facebook.presto.operator.aggregation.TestDoubleVariancePopAggregation@459371b9]" name="testVectorSinglePosition" duration-ms="0" started-at="2014-05-07T06:56:34Z" finished-at="2014-05-07T06:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorSinglePosition -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestDoubleVariancePopAggregation -->
      <class name="com.facebook.presto.operator.aggregation.TestApproximatePercentileAggregation">
        <test-method status="PASS" signature="testDoublePartialStep()[pri:0, instance:com.facebook.presto.operator.aggregation.TestApproximatePercentileAggregation@5169751d]" name="testDoublePartialStep" duration-ms="6" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoublePartialStep -->
        <test-method status="PASS" signature="testDoubleSingleStep()[pri:0, instance:com.facebook.presto.operator.aggregation.TestApproximatePercentileAggregation@5169751d]" name="testDoubleSingleStep" duration-ms="3" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoubleSingleStep -->
        <test-method status="PASS" signature="testLongPartialStep()[pri:0, instance:com.facebook.presto.operator.aggregation.TestApproximatePercentileAggregation@5169751d]" name="testLongPartialStep" duration-ms="4" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLongPartialStep -->
        <test-method status="PASS" signature="testLongSingleStep()[pri:0, instance:com.facebook.presto.operator.aggregation.TestApproximatePercentileAggregation@5169751d]" name="testLongSingleStep" duration-ms="2" started-at="2014-05-07T06:58:49Z" finished-at="2014-05-07T06:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLongSingleStep -->
      </class> <!-- com.facebook.presto.operator.aggregation.TestApproximatePercentileAggregation -->
      <class name="com.facebook.presto.block.uncompressed.TestUncompressedLongBlockCursor">
        <test-method status="PASS" signature="testAdvanceNextPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedLongBlockCursor@63b6feb1]" name="testAdvanceNextPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceNextPosition -->
        <test-method status="PASS" signature="testAdvanceToPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedLongBlockCursor@63b6feb1]" name="testAdvanceToPosition" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvanceToPosition -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedLongBlockCursor@63b6feb1]" name="setUp" is-config="true" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFirstPosition()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedLongBlockCursor@63b6feb1]" name="testFirstPosition" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstPosition -->
        <test-method status="PASS" signature="testCursorType()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedLongBlockCursor@63b6feb1]" name="testCursorType" duration-ms="1" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCursorType -->
        <test-method status="PASS" signature="testStates()[pri:0, instance:com.facebook.presto.block.uncompressed.TestUncompressedLongBlockCursor@63b6feb1]" name="testStates" duration-ms="0" started-at="2014-05-07T06:56:48Z" finished-at="2014-05-07T06:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStates -->
      </class> <!-- com.facebook.presto.block.uncompressed.TestUncompressedLongBlockCursor -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
